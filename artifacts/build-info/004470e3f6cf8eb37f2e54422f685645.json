{
	"id": "004470e3f6cf8eb37f2e54422f685645",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/dexRishabh.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n// --- CUSTOM ERRORS ---\r\nerror ZeroAddress();\r\nerror IdenticalAddresses();\r\nerror ZeroAmount();\r\nerror NoLiquidity();\r\nerror InsufficientOutput();\r\nerror InvalidToken();\r\nerror ExcessiveSlippage();\r\nerror InsufficientReserve();\r\n\r\n/**\r\n * @title MyHyperOptimizedDEX\r\n * @author Production-Ready DEX\r\n * @notice A production-grade, gas-optimized, and hardened AMM with MEV protection.\r\n * @dev Implements constant product formula (x*y=k) with 0.3% trading fee.\r\n */\r\ncontract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // --- CONSTANTS ---\r\n    /// @notice Trading fee numerator (0.3% = 997/1000)\r\n    uint256 private constant FEE_NUMERATOR = 997;\r\n    /// @notice Trading fee denominator\r\n    uint256 private constant FEE_DENOMINATOR = 1000;\r\n    /// @notice Maximum slippage tolerance (10%)\r\n    uint256 private constant MAX_SLIPPAGE_BPS = 1000;\r\n    uint256 private constant BPS_DENOMINATOR = 10000;\r\n\r\n    // --- STATE VARIABLES ---\r\n    IERC20 public immutable tokenA;\r\n    IERC20 public immutable tokenB;\r\n\r\n    /// @notice Reserve of Token A in the pool\r\n    uint256 public reserveA;\r\n    /// @notice Reserve of Token B in the pool\r\n    uint256 public reserveB;\r\n    \r\n    /// @notice Total liquidity shares (for future LP token implementation)\r\n    uint256 public totalLiquidity;\r\n\r\n    // --- EVENTS ---\r\n    /// @notice Emitted when a swap occurs\r\n    /// @param sender Address initiating the swap\r\n    /// @param amountIn Amount of input tokens\r\n    /// @param amountOut Amount of output tokens received\r\n    /// @param tokenIn Address of input token\r\n    /// @param tokenOut Address of output token\r\n    event Swapped(\r\n        address indexed sender,\r\n        uint256 amountIn,\r\n        uint256 amountOut,\r\n        address indexed tokenIn,\r\n        address indexed tokenOut\r\n    );\r\n\r\n    /// @notice Emitted when liquidity is added\r\n    /// @param provider Address providing liquidity\r\n    /// @param amountA Amount of Token A added\r\n    /// @param amountB Amount of Token B added\r\n    /// @param liquidity Liquidity shares minted\r\n    event LiquidityAdded(\r\n        address indexed provider,\r\n        uint256 amountA,\r\n        uint256 amountB,\r\n        uint256 liquidity\r\n    );\r\n\r\n    /// @notice Emitted when emergency withdrawal occurs\r\n    /// @param token Token withdrawn\r\n    /// @param amount Amount withdrawn\r\n    event EmergencyWithdraw(address indexed token, uint256 amount);\r\n\r\n    // --- MODIFIERS ---\r\n    /// @dev Ensures pool has liquidity before swap operations\r\n    modifier hasLiquidity() {\r\n        if (reserveA == 0 || reserveB == 0) revert NoLiquidity();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Initializes the DEX with two ERC20 tokens\r\n     * @param tokenAAddress Address of first token\r\n     * @param tokenBAddress Address of second token\r\n     * @dev Validates addresses and ensures tokens are different\r\n     */\r\n    constructor(\r\n        address tokenAAddress,\r\n        address tokenBAddress\r\n    ) Ownable(msg.sender) ReentrancyGuard() {\r\n        if (tokenAAddress == address(0) || tokenBAddress == address(0)) {\r\n            revert ZeroAddress();\r\n        }\r\n        if (tokenAAddress == tokenBAddress) {\r\n            revert IdenticalAddresses();\r\n        }\r\n\r\n        tokenA = IERC20(tokenAAddress);\r\n        tokenB = IERC20(tokenBAddress);\r\n    }\r\n\r\n    /**\r\n     * @notice Adds liquidity to the pool\r\n     * @param amountA Amount of Token A to add\r\n     * @param amountB Amount of Token B to add\r\n     * @dev Follows Checks-Effects-Interactions pattern\r\n     * @dev Uses SafeERC20 for secure token transfers\r\n     */\r\n    function addLiquidity(\r\n        uint256 amountA,\r\n        uint256 amountB\r\n    ) external nonReentrant {\r\n        // --- CHECKS ---\r\n        if (amountA == 0 || amountB == 0) {\r\n            revert ZeroAmount();\r\n        }\r\n\r\n        // Calculate liquidity shares (simplified for this implementation)\r\n        uint256 liquidity;\r\n        if (totalLiquidity == 0) {\r\n            // First liquidity provider\r\n            liquidity = amountA + amountB;\r\n        } else {\r\n            // Subsequent providers get proportional shares\r\n            liquidity = (amountA * totalLiquidity) / reserveA;\r\n        }\r\n\r\n        // --- EFFECTS ---\r\n        reserveA += amountA;\r\n        reserveB += amountB;\r\n        totalLiquidity += liquidity;\r\n\r\n        // --- INTERACTIONS ---\r\n        tokenA.safeTransferFrom(msg.sender, address(this), amountA);\r\n        tokenB.safeTransferFrom(msg.sender, address(this), amountB);\r\n\r\n        emit LiquidityAdded(msg.sender, amountA, amountB, liquidity);\r\n    }\r\n\r\n    /**\r\n     * @notice Swaps Token A for Token B with MEV protection\r\n     * @param amountInA Exact amount of Token A being sent\r\n     * @param amountOutMin Minimum amount of Token B to accept (slippage protection)\r\n     * @dev Implements Uniswap V2 constant product formula with 0.3% fee\r\n     * @dev Prevents MEV attacks through slippage checks\r\n     */\r\n    function swapTokenAForTokenB(\r\n        uint256 amountInA,\r\n        uint256 amountOutMin\r\n    ) external nonReentrant hasLiquidity {\r\n        // --- CHECKS ---\r\n        if (amountInA == 0) revert ZeroAmount();\r\n        if (amountOutMin == 0) revert ZeroAmount();\r\n\r\n        // Calculate output amount using constant product formula\r\n        uint256 amountInWithFee = amountInA * FEE_NUMERATOR;\r\n        uint256 numerator = amountInWithFee * reserveB;\r\n        uint256 denominator = (reserveA * FEE_DENOMINATOR) + amountInWithFee;\r\n        uint256 amountOutB = numerator / denominator;\r\n\r\n        // Slippage protection\r\n        if (amountOutB < amountOutMin) {\r\n            revert InsufficientOutput();\r\n        }\r\n\r\n        // Additional safety: ensure sufficient reserve\r\n        if (amountOutB > reserveB) {\r\n            revert InsufficientReserve();\r\n        }\r\n\r\n        // Validate slippage is within reasonable bounds (10% max)\r\n        uint256 maxSlippage = (amountOutB * MAX_SLIPPAGE_BPS) / BPS_DENOMINATOR;\r\n        if (amountOutB - amountOutMin > maxSlippage) {\r\n            revert ExcessiveSlippage();\r\n        }\r\n\r\n        // --- EFFECTS ---\r\n        reserveA += amountInA;\r\n        reserveB -= amountOutB;\r\n\r\n        // --- INTERACTIONS ---\r\n        tokenA.safeTransferFrom(msg.sender, address(this), amountInA);\r\n        tokenB.safeTransfer(msg.sender, amountOutB);\r\n\r\n        emit Swapped(\r\n            msg.sender,\r\n            amountInA,\r\n            amountOutB,\r\n            address(tokenA),\r\n            address(tokenB)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Swaps Token B for Token A with MEV protection\r\n     * @param amountInB Exact amount of Token B being sent\r\n     * @param amountOutMin Minimum amount of Token A to accept (slippage protection)\r\n     * @dev Mirror function of swapTokenAForTokenB for reverse swaps\r\n     */\r\n    function swapTokenBForTokenA(\r\n        uint256 amountInB,\r\n        uint256 amountOutMin\r\n    ) external nonReentrant hasLiquidity {\r\n        // --- CHECKS ---\r\n        if (amountInB == 0) revert ZeroAmount();\r\n        if (amountOutMin == 0) revert ZeroAmount();\r\n\r\n        // Calculate output amount\r\n        uint256 amountInWithFee = amountInB * FEE_NUMERATOR;\r\n        uint256 numerator = amountInWithFee * reserveA;\r\n        uint256 denominator = (reserveB * FEE_DENOMINATOR) + amountInWithFee;\r\n        uint256 amountOutA = numerator / denominator;\r\n\r\n        // Slippage protection\r\n        if (amountOutA < amountOutMin) {\r\n            revert InsufficientOutput();\r\n        }\r\n\r\n        if (amountOutA > reserveA) {\r\n            revert InsufficientReserve();\r\n        }\r\n\r\n        // --- EFFECTS ---\r\n        reserveB += amountInB;\r\n        reserveA -= amountOutA;\r\n\r\n        // --- INTERACTIONS ---\r\n        tokenB.safeTransferFrom(msg.sender, address(this), amountInB);\r\n        tokenA.safeTransfer(msg.sender, amountOutA);\r\n\r\n        emit Swapped(\r\n            msg.sender,\r\n            amountInB,\r\n            amountOutA,\r\n            address(tokenB),\r\n            address(tokenA)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @notice Gets current reserves for both tokens\r\n     * @return _reserveA Current reserve of Token A\r\n     * @return _reserveB Current reserve of Token B\r\n     * @dev View function for external integrations\r\n     */\r\n    function getReserves() external view returns (uint256 _reserveA, uint256 _reserveB) {\r\n        _reserveA = reserveA;\r\n        _reserveB = reserveB;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates output amount for a given input (view function)\r\n     * @param amountIn Input token amount\r\n     * @param reserveIn Reserve of input token\r\n     * @param reserveOut Reserve of output token\r\n     * @return amountOut Expected output amount\r\n     * @dev Useful for frontends to calculate expected output before swapping\r\n     */\r\n    function getAmountOut(\r\n        uint256 amountIn,\r\n        uint256 reserveIn,\r\n        uint256 reserveOut\r\n    ) external pure returns (uint256 amountOut) {\r\n        if (amountIn == 0) revert ZeroAmount();\r\n        if (reserveIn == 0 || reserveOut == 0) revert NoLiquidity();\r\n\r\n        uint256 amountInWithFee = amountIn * FEE_NUMERATOR;\r\n        uint256 numerator = amountInWithFee * reserveOut;\r\n        uint256 denominator = (reserveIn * FEE_DENOMINATOR) + amountInWithFee;\r\n        amountOut = numerator / denominator;\r\n    }\r\n\r\n    /**\r\n     * @notice Emergency withdrawal of tokens (owner only)\r\n     * @param token Token to withdraw\r\n     * @dev Only allows withdrawal of tokenA or tokenB\r\n     * @dev Should only be used in emergency situations\r\n     */\r\n    function emergencyWithdraw(IERC20 token) external onlyOwner {\r\n        if (\r\n            address(token) != address(tokenA) &&\r\n            address(token) != address(tokenB)\r\n        ) {\r\n            revert InvalidToken();\r\n        }\r\n        \r\n        uint256 balance = token.balanceOf(address(this));\r\n        if (balance == 0) revert ZeroAmount();\r\n        \r\n        token.safeTransfer(msg.sender, balance);\r\n        \r\n        emit EmergencyWithdraw(address(token), balance);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.0.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH25 0x1E87617BAD24B06A24D760C8C02433B16BB4D02032E19D6B1F STATICCALL OR 0xE4 CALLCODE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH25 0x1E87617BAD24B06A24D760C8C02433B16BB4D02032E19D6B1F STATICCALL OR 0xE4 CALLCODE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/dexRishabh.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB9 0xA8 POP 0xBA GAS 0xEC 0xB7 0xC7 PUSH9 0x63E89124D1DA9577CD LOG2 0xA5 0x1F 0xCB 0xFB 0xD1 GT 0xCB 0xE7 DUP9 ADD GASPRICE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB9 0xA8 POP 0xBA GAS 0xEC 0xB7 0xC7 PUSH9 0x63E89124D1DA9577CD LOG2 0xA5 0x1F 0xCB 0xFB 0xD1 GT 0xCB 0xE7 DUP9 ADD GASPRICE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/dexRishabh.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/dexRishabh.sol": {
				"MyHyperOptimizedDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenBAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveSlippage",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IdenticalAddresses",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientOutput",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientReserve",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoLiquidity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_reserveB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenAForTokenB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenBForTokenA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Production-Ready DEX",
						"details": "Implements constant product formula (x*y=k) with 0.3% trading fee.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"EmergencyWithdraw(address,uint256)": {
								"params": {
									"amount": "Amount withdrawn",
									"token": "Token withdrawn"
								}
							},
							"LiquidityAdded(address,uint256,uint256,uint256)": {
								"params": {
									"amountA": "Amount of Token A added",
									"amountB": "Amount of Token B added",
									"liquidity": "Liquidity shares minted",
									"provider": "Address providing liquidity"
								}
							},
							"Swapped(address,uint256,uint256,address,address)": {
								"params": {
									"amountIn": "Amount of input tokens",
									"amountOut": "Amount of output tokens received",
									"sender": "Address initiating the swap",
									"tokenIn": "Address of input token",
									"tokenOut": "Address of output token"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addLiquidity(uint256,uint256)": {
								"details": "Follows Checks-Effects-Interactions patternUses SafeERC20 for secure token transfers",
								"params": {
									"amountA": "Amount of Token A to add",
									"amountB": "Amount of Token B to add"
								}
							},
							"constructor": {
								"details": "Validates addresses and ensures tokens are different",
								"params": {
									"tokenAAddress": "Address of first token",
									"tokenBAddress": "Address of second token"
								}
							},
							"emergencyWithdraw(address)": {
								"details": "Only allows withdrawal of tokenA or tokenBShould only be used in emergency situations",
								"params": {
									"token": "Token to withdraw"
								}
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"details": "Useful for frontends to calculate expected output before swapping",
								"params": {
									"amountIn": "Input token amount",
									"reserveIn": "Reserve of input token",
									"reserveOut": "Reserve of output token"
								},
								"returns": {
									"amountOut": "Expected output amount"
								}
							},
							"getReserves()": {
								"details": "View function for external integrations",
								"returns": {
									"_reserveA": "Current reserve of Token A",
									"_reserveB": "Current reserve of Token B"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"swapTokenAForTokenB(uint256,uint256)": {
								"details": "Implements Uniswap V2 constant product formula with 0.3% feePrevents MEV attacks through slippage checks",
								"params": {
									"amountInA": "Exact amount of Token A being sent",
									"amountOutMin": "Minimum amount of Token B to accept (slippage protection)"
								}
							},
							"swapTokenBForTokenA(uint256,uint256)": {
								"details": "Mirror function of swapTokenAForTokenB for reverse swaps",
								"params": {
									"amountInB": "Exact amount of Token B being sent",
									"amountOutMin": "Minimum amount of Token A to accept (slippage protection)"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MyHyperOptimizedDEX",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/dexRishabh.sol\":793:10385  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contract/dexRishabh.sol\":3237:3671  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  sstore\n    /* \"contract/dexRishabh.sol\":3328:3338  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/dexRishabh.sol\":3373:3400  tokenAAddress == address(0) */\n  dup3\n  and\n  iszero\n  dup1\n    /* \"contract/dexRishabh.sol\":3373:3431  tokenAAddress == address(0) || tokenBAddress == address(0) */\n  tag_15\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/dexRishabh.sol\":3404:3431  tokenBAddress == address(0) */\n  dup2\n  and\n  iszero\n    /* \"contract/dexRishabh.sol\":3373:3431  tokenAAddress == address(0) || tokenBAddress == address(0) */\ntag_15:\n    /* \"contract/dexRishabh.sol\":3369:3480  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\n  iszero\n  tag_16\n  jumpi\n    /* \"contract/dexRishabh.sol\":3455:3468  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/dexRishabh.sol\":3369:3480  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\ntag_16:\n    /* \"contract/dexRishabh.sol\":3511:3524  tokenBAddress */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/dexRishabh.sol\":3494:3524  tokenAAddress == tokenBAddress */\n  and\n    /* \"contract/dexRishabh.sol\":3494:3507  tokenAAddress */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/dexRishabh.sol\":3494:3524  tokenAAddress == tokenBAddress */\n  and\n  sub\n    /* \"contract/dexRishabh.sol\":3490:3580  if (tokenAAddress == tokenBAddress) {... */\n  tag_17\n  jumpi\n    /* \"contract/dexRishabh.sol\":3548:3568  IdenticalAddresses() */\n  mload(0x40)\n  shl(0xe4, 0x0bd969eb)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/dexRishabh.sol\":3490:3580  if (tokenAAddress == tokenBAddress) {... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/dexRishabh.sol\":3592:3622  tokenA = IERC20(tokenAAddress) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contract/dexRishabh.sol\":3633:3663  tokenB = IERC20(tokenBAddress) */\n  and\n  0xa0\n  mstore\n    /* \"contract/dexRishabh.sol\":793:10385  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_23:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_25:\n    /* \"#utility.yul\":375:415   */\n  tag_26\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_27\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_21:\n    /* \"contract/dexRishabh.sol\":793:10385  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n  0x00\n  assignImmutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract/dexRishabh.sol\":793:10385  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ff1c9bc\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x76d5f25f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x15770f92\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x15770f92\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x56d9be4c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fc63d10\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/dexRishabh.sol\":9130:9660  function getAmountOut(... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":481:506   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n        /* \"contract/dexRishabh.sol\":9130:9660  function getAmountOut(... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/dexRishabh.sol\":8606:8760  function getReserves() external view returns (uint256 _reserveA, uint256 _reserveB) {... */\n    tag_4:\n        /* \"contract/dexRishabh.sol\":8713:8721  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":8744:8752  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":8606:8760  function getReserves() external view returns (uint256 _reserveA, uint256 _reserveB) {... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":691:716   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":747:749   */\n      0x20\n        /* \"#utility.yul\":732:750   */\n      dup4\n      add\n        /* \"#utility.yul\":725:759   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":664:682   */\n      add\n        /* \"contract/dexRishabh.sol\":8606:8760  function getReserves() external view returns (uint256 _reserveA, uint256 _reserveB) {... */\n      tag_24\n        /* \"#utility.yul\":517:765   */\n      jump\n        /* \"contract/dexRishabh.sol\":1315:1345  IERC20 public immutable tokenA */\n    tag_5:\n      tag_30\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":948:980   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":930:981   */\n      dup2\n      mstore\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":903:921   */\n      add\n        /* \"contract/dexRishabh.sol\":1315:1345  IERC20 public immutable tokenA */\n      tag_24\n        /* \"#utility.yul\":770:987   */\n      jump\n        /* \"contract/dexRishabh.sol\":1630:1659  uint256 public totalLiquidity */\n    tag_6:\n      tag_20\n      sload(0x04)\n      dup2\n      jump\n        /* \"contract/dexRishabh.sol\":1517:1540  uint256 public reserveB */\n    tag_7:\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"contract/dexRishabh.sol\":5299:6855  function swapTokenAForTokenB(... */\n    tag_8:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contract/dexRishabh.sol\":1352:1382  IERC20 public immutable tokenB */\n    tag_9:\n      tag_30\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n      dup2\n      jump\n        /* \"contract/dexRishabh.sol\":9898:10382  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_10:\n      tag_40\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_40\n      tag_52\n      jump\t// in\n        /* \"contract/dexRishabh.sol\":7159:8367  function swapTokenBForTokenA(... */\n    tag_12:\n      tag_40\n      tag_54\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_30)\n        /* \"contract/dexRishabh.sol\":3948:4933  function addLiquidity(... */\n    tag_14:\n      tag_40\n      tag_61\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contract/dexRishabh.sol\":1439:1462  uint256 public reserveA */\n    tag_15:\n      tag_20\n      sload(0x02)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_40\n      tag_67\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contract/dexRishabh.sol\":9130:9660  function getAmountOut(... */\n    tag_23:\n        /* \"contract/dexRishabh.sol\":9266:9283  uint256 amountOut */\n      0x00\n        /* \"contract/dexRishabh.sol\":9300:9308  amountIn */\n      dup4\n        /* \"contract/dexRishabh.sol\":9312:9313  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":9300:9313  amountIn == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":9296:9334  if (amountIn == 0) revert ZeroAmount() */\n      tag_71\n      jumpi\n        /* \"contract/dexRishabh.sol\":9322:9334  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":9296:9334  if (amountIn == 0) revert ZeroAmount() */\n    tag_71:\n        /* \"contract/dexRishabh.sol\":9349:9363  reserveIn == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contract/dexRishabh.sol\":9349:9382  reserveIn == 0 || reserveOut == 0 */\n      tag_72\n      jumpi\n      pop\n        /* \"contract/dexRishabh.sol\":9367:9382  reserveOut == 0 */\n      dup2\n      iszero\n        /* \"contract/dexRishabh.sol\":9349:9382  reserveIn == 0 || reserveOut == 0 */\n    tag_72:\n        /* \"contract/dexRishabh.sol\":9345:9404  if (reserveIn == 0 || reserveOut == 0) revert NoLiquidity() */\n      iszero\n      tag_73\n      jumpi\n        /* \"contract/dexRishabh.sol\":9391:9404  NoLiquidity() */\n      mload(0x40)\n      shl(0xe1, 0x6180f03f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":9345:9404  if (reserveIn == 0 || reserveOut == 0) revert NoLiquidity() */\n    tag_73:\n        /* \"contract/dexRishabh.sol\":9417:9440  uint256 amountInWithFee */\n      0x00\n        /* \"contract/dexRishabh.sol\":9443:9467  amountIn * FEE_NUMERATOR */\n      tag_74\n        /* \"contract/dexRishabh.sol\":1016:1019  997 */\n      0x03e5\n        /* \"contract/dexRishabh.sol\":9443:9451  amountIn */\n      dup7\n        /* \"contract/dexRishabh.sol\":9443:9467  amountIn * FEE_NUMERATOR */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contract/dexRishabh.sol\":9417:9467  uint256 amountInWithFee = amountIn * FEE_NUMERATOR */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":9478:9495  uint256 numerator */\n      0x00\n        /* \"contract/dexRishabh.sol\":9498:9526  amountInWithFee * reserveOut */\n      tag_76\n        /* \"contract/dexRishabh.sol\":9516:9526  reserveOut */\n      dup5\n        /* \"contract/dexRishabh.sol\":9417:9467  uint256 amountInWithFee = amountIn * FEE_NUMERATOR */\n      dup4\n        /* \"contract/dexRishabh.sol\":9498:9526  amountInWithFee * reserveOut */\n      tag_75\n      jump\t// in\n    tag_76:\n        /* \"contract/dexRishabh.sol\":9478:9526  uint256 numerator = amountInWithFee * reserveOut */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":9537:9556  uint256 denominator */\n      0x00\n        /* \"contract/dexRishabh.sol\":9591:9606  amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":9560:9587  reserveIn * FEE_DENOMINATOR */\n      tag_77\n        /* \"contract/dexRishabh.sol\":1110:1114  1000 */\n      0x03e8\n        /* \"contract/dexRishabh.sol\":9560:9569  reserveIn */\n      dup9\n        /* \"contract/dexRishabh.sol\":9560:9587  reserveIn * FEE_DENOMINATOR */\n      tag_75\n      jump\t// in\n    tag_77:\n        /* \"contract/dexRishabh.sol\":9559:9606  (reserveIn * FEE_DENOMINATOR) + amountInWithFee */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contract/dexRishabh.sol\":9537:9606  uint256 denominator = (reserveIn * FEE_DENOMINATOR) + amountInWithFee */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":9629:9652  numerator / denominator */\n      tag_80\n        /* \"contract/dexRishabh.sol\":9537:9606  uint256 denominator = (reserveIn * FEE_DENOMINATOR) + amountInWithFee */\n      dup2\n        /* \"contract/dexRishabh.sol\":9629:9638  numerator */\n      dup4\n        /* \"contract/dexRishabh.sol\":9629:9652  numerator / denominator */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contract/dexRishabh.sol\":9617:9652  amountOut = numerator / denominator */\n      swap8\n        /* \"contract/dexRishabh.sol\":9130:9660  function getAmountOut(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/dexRishabh.sol\":5299:6855  function swapTokenAForTokenB(... */\n    tag_43:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_84\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_84:\n        /* \"contract/dexRishabh.sol\":2910:2918  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":2910:2923  reserveA == 0 */\n      iszero\n      dup1\n        /* \"contract/dexRishabh.sol\":2910:2940  reserveA == 0 || reserveB == 0 */\n      tag_87\n      jumpi\n      pop\n        /* \"contract/dexRishabh.sol\":2927:2935  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":2927:2940  reserveB == 0 */\n      iszero\n        /* \"contract/dexRishabh.sol\":2910:2940  reserveA == 0 || reserveB == 0 */\n    tag_87:\n        /* \"contract/dexRishabh.sol\":2906:2962  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n      iszero\n      tag_88\n      jumpi\n        /* \"contract/dexRishabh.sol\":2949:2962  NoLiquidity() */\n      mload(0x40)\n      shl(0xe1, 0x6180f03f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":2906:2962  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n    tag_88:\n        /* \"contract/dexRishabh.sol\":5471:5480  amountInA */\n      dup2\n        /* \"contract/dexRishabh.sol\":5484:5485  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":5471:5485  amountInA == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":5467:5506  if (amountInA == 0) revert ZeroAmount() */\n      tag_90\n      jumpi\n        /* \"contract/dexRishabh.sol\":5494:5506  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":5467:5506  if (amountInA == 0) revert ZeroAmount() */\n    tag_90:\n        /* \"contract/dexRishabh.sol\":5521:5533  amountOutMin */\n      dup1\n        /* \"contract/dexRishabh.sol\":5537:5538  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":5521:5538  amountOutMin == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":5517:5559  if (amountOutMin == 0) revert ZeroAmount() */\n      tag_91\n      jumpi\n        /* \"contract/dexRishabh.sol\":5547:5559  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":5517:5559  if (amountOutMin == 0) revert ZeroAmount() */\n    tag_91:\n        /* \"contract/dexRishabh.sol\":5639:5662  uint256 amountInWithFee */\n      0x00\n        /* \"contract/dexRishabh.sol\":5665:5690  amountInA * FEE_NUMERATOR */\n      tag_92\n        /* \"contract/dexRishabh.sol\":1016:1019  997 */\n      0x03e5\n        /* \"contract/dexRishabh.sol\":5665:5674  amountInA */\n      dup5\n        /* \"contract/dexRishabh.sol\":5665:5690  amountInA * FEE_NUMERATOR */\n      tag_75\n      jump\t// in\n    tag_92:\n        /* \"contract/dexRishabh.sol\":5639:5690  uint256 amountInWithFee = amountInA * FEE_NUMERATOR */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":5701:5718  uint256 numerator */\n      0x00\n        /* \"contract/dexRishabh.sol\":5739:5747  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":5721:5736  amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":5721:5747  amountInWithFee * reserveB */\n      tag_93\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_93:\n        /* \"contract/dexRishabh.sol\":5701:5747  uint256 numerator = amountInWithFee * reserveB */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":5758:5777  uint256 denominator */\n      0x00\n        /* \"contract/dexRishabh.sol\":5811:5826  amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":1110:1114  1000 */\n      0x03e8\n        /* \"contract/dexRishabh.sol\":5781:5789  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":5781:5807  reserveA * FEE_DENOMINATOR */\n      tag_94\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_94:\n        /* \"contract/dexRishabh.sol\":5780:5826  (reserveA * FEE_DENOMINATOR) + amountInWithFee */\n      tag_95\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_95:\n        /* \"contract/dexRishabh.sol\":5758:5826  uint256 denominator = (reserveA * FEE_DENOMINATOR) + amountInWithFee */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":5837:5855  uint256 amountOutB */\n      0x00\n        /* \"contract/dexRishabh.sol\":5858:5881  numerator / denominator */\n      tag_96\n        /* \"contract/dexRishabh.sol\":5758:5826  uint256 denominator = (reserveA * FEE_DENOMINATOR) + amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":5858:5867  numerator */\n      dup5\n        /* \"contract/dexRishabh.sol\":5858:5881  numerator / denominator */\n      tag_81\n      jump\t// in\n    tag_96:\n        /* \"contract/dexRishabh.sol\":5837:5881  uint256 amountOutB = numerator / denominator */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":5943:5955  amountOutMin */\n      dup5\n        /* \"contract/dexRishabh.sol\":5930:5940  amountOutB */\n      dup2\n        /* \"contract/dexRishabh.sol\":5930:5955  amountOutB < amountOutMin */\n      lt\n        /* \"contract/dexRishabh.sol\":5926:6011  if (amountOutB < amountOutMin) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contract/dexRishabh.sol\":5979:5999  InsufficientOutput() */\n      mload(0x40)\n      shl(0xe0, 0xbb2875c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":5926:6011  if (amountOutB < amountOutMin) {... */\n    tag_97:\n        /* \"contract/dexRishabh.sol\":6097:6105  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":6084:6094  amountOutB */\n      dup2\n        /* \"contract/dexRishabh.sol\":6084:6105  amountOutB > reserveB */\n      gt\n        /* \"contract/dexRishabh.sol\":6080:6162  if (amountOutB > reserveB) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contract/dexRishabh.sol\":6129:6150  InsufficientReserve() */\n      mload(0x40)\n      shl(0xe0, 0x28b35f21)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":6080:6162  if (amountOutB > reserveB) {... */\n    tag_98:\n        /* \"contract/dexRishabh.sol\":6242:6261  uint256 maxSlippage */\n      0x00\n        /* \"contract/dexRishabh.sol\":1269:1274  10000 */\n      0x2710\n        /* \"contract/dexRishabh.sol\":6265:6294  amountOutB * MAX_SLIPPAGE_BPS */\n      tag_99\n        /* \"contract/dexRishabh.sol\":1215:1219  1000 */\n      0x03e8\n        /* \"contract/dexRishabh.sol\":6265:6275  amountOutB */\n      dup5\n        /* \"contract/dexRishabh.sol\":6265:6294  amountOutB * MAX_SLIPPAGE_BPS */\n      tag_75\n      jump\t// in\n    tag_99:\n        /* \"contract/dexRishabh.sol\":6264:6313  (amountOutB * MAX_SLIPPAGE_BPS) / BPS_DENOMINATOR */\n      tag_100\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_100:\n        /* \"contract/dexRishabh.sol\":6242:6313  uint256 maxSlippage = (amountOutB * MAX_SLIPPAGE_BPS) / BPS_DENOMINATOR */\n      swap1\n      pop\n      dup1\n        /* \"contract/dexRishabh.sol\":6328:6353  amountOutB - amountOutMin */\n      tag_101\n        /* \"contract/dexRishabh.sol\":6341:6353  amountOutMin */\n      dup8\n        /* \"contract/dexRishabh.sol\":6328:6338  amountOutB */\n      dup5\n        /* \"contract/dexRishabh.sol\":6328:6353  amountOutB - amountOutMin */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"contract/dexRishabh.sol\":6328:6367  amountOutB - amountOutMin > maxSlippage */\n      gt\n        /* \"contract/dexRishabh.sol\":6324:6422  if (amountOutB - amountOutMin > maxSlippage) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contract/dexRishabh.sol\":6391:6410  ExcessiveSlippage() */\n      mload(0x40)\n      shl(0xe0, 0x97c7f537)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":6324:6422  if (amountOutB - amountOutMin > maxSlippage) {... */\n    tag_103:\n        /* \"contract/dexRishabh.sol\":6474:6483  amountInA */\n      dup7\n        /* \"contract/dexRishabh.sol\":6462:6470  reserveA */\n      0x02\n      0x00\n        /* \"contract/dexRishabh.sol\":6462:6483  reserveA += amountInA */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":6506:6516  amountOutB */\n      dup2\n        /* \"contract/dexRishabh.sol\":6494:6502  reserveB */\n      0x03\n      0x00\n        /* \"contract/dexRishabh.sol\":6494:6516  reserveB -= amountOutB */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_105:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":6562:6623  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      tag_106\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":6562:6568  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n        /* \"contract/dexRishabh.sol\":6562:6585  tokenA.safeTransferFrom */\n      and\n        /* \"contract/dexRishabh.sol\":6586:6596  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":6606:6610  this */\n      address\n        /* \"contract/dexRishabh.sol\":6613:6622  amountInA */\n      dup11\n        /* \"contract/dexRishabh.sol\":6562:6585  tokenA.safeTransferFrom */\n      tag_107\n        /* \"contract/dexRishabh.sol\":6562:6623  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      jump\t// in\n    tag_106:\n        /* \"contract/dexRishabh.sol\":6634:6677  tokenB.safeTransfer(msg.sender, amountOutB) */\n      tag_108\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":6634:6640  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n        /* \"contract/dexRishabh.sol\":6634:6653  tokenB.safeTransfer */\n      and\n        /* \"contract/dexRishabh.sol\":6654:6664  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":6666:6676  amountOutB */\n      dup5\n        /* \"contract/dexRishabh.sol\":6634:6653  tokenB.safeTransfer */\n      tag_109\n        /* \"contract/dexRishabh.sol\":6634:6677  tokenB.safeTransfer(msg.sender, amountOutB) */\n      jump\t// in\n    tag_108:\n        /* \"contract/dexRishabh.sol\":6829:6835  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":6695:6847  Swapped(... */\n      and\n        /* \"contract/dexRishabh.sol\":6799:6805  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":6695:6847  Swapped(... */\n      and\n        /* \"contract/dexRishabh.sol\":6717:6727  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":6695:6847  Swapped(... */\n      and\n      0xdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850\n        /* \"contract/dexRishabh.sol\":6742:6751  amountInA */\n      dup11\n        /* \"contract/dexRishabh.sol\":6766:6776  amountOutB */\n      dup7\n        /* \"contract/dexRishabh.sol\":6695:6847  Swapped(... */\n      mload(0x40)\n      tag_110\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":691:716   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":747:749   */\n      0x20\n        /* \"#utility.yul\":732:750   */\n      dup3\n      add\n        /* \"#utility.yul\":725:759   */\n      mstore\n        /* \"#utility.yul\":679:681   */\n      0x40\n        /* \"#utility.yul\":664:682   */\n      add\n      swap1\n        /* \"#utility.yul\":517:765   */\n      jump\n        /* \"contract/dexRishabh.sol\":6695:6847  Swapped(... */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/dexRishabh.sol\":5429:6855  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n    tag_111:\n        /* \"contract/dexRishabh.sol\":5299:6855  function swapTokenAForTokenB(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/dexRishabh.sol\":9898:10382  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"contract/dexRishabh.sol\":10013:10019  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":9987:10020  address(token) != address(tokenA) */\n      and\n        /* \"contract/dexRishabh.sol\":9995:10000  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":9987:10020  address(token) != address(tokenA) */\n      and\n      eq\n      iszero\n        /* \"contract/dexRishabh.sol\":9987:10070  address(token) != address(tokenA) &&... */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n        /* \"contract/dexRishabh.sol\":10063:10069  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":10037:10070  address(token) != address(tokenB) */\n      and\n        /* \"contract/dexRishabh.sol\":10045:10050  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":10037:10070  address(token) != address(tokenB) */\n      and\n      eq\n      iszero\n        /* \"contract/dexRishabh.sol\":9987:10070  address(token) != address(tokenA) &&... */\n    tag_117:\n        /* \"contract/dexRishabh.sol\":9969:10130  if (... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contract/dexRishabh.sol\":10104:10118  InvalidToken() */\n      mload(0x40)\n      shl(0xe0, 0xc1ab6dc1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":9969:10130  if (... */\n    tag_118:\n        /* \"contract/dexRishabh.sol\":10168:10198  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contract/dexRishabh.sol\":10192:10196  this */\n      address\n        /* \"contract/dexRishabh.sol\":10168:10198  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"contract/dexRishabh.sol\":10150:10165  uint256 balance */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":10168:10183  token.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"contract/dexRishabh.sol\":10168:10198  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"contract/dexRishabh.sol\":10150:10198  uint256 balance = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":10213:10220  balance */\n      dup1\n        /* \"contract/dexRishabh.sol\":10224:10225  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":10213:10225  balance == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":10209:10246  if (balance == 0) revert ZeroAmount() */\n      tag_124\n      jumpi\n        /* \"contract/dexRishabh.sol\":10234:10246  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":10209:10246  if (balance == 0) revert ZeroAmount() */\n    tag_124:\n        /* \"contract/dexRishabh.sol\":10267:10306  token.safeTransfer(msg.sender, balance) */\n      tag_125\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":10267:10285  token.safeTransfer */\n      dup4\n      and\n        /* \"contract/dexRishabh.sol\":10286:10296  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":10298:10305  balance */\n      dup4\n        /* \"contract/dexRishabh.sol\":10267:10285  token.safeTransfer */\n      tag_109\n        /* \"contract/dexRishabh.sol\":10267:10306  token.safeTransfer(msg.sender, balance) */\n      jump\t// in\n    tag_125:\n        /* \"contract/dexRishabh.sol\":10358:10363  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":10332:10374  EmergencyWithdraw(address(token), balance) */\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"contract/dexRishabh.sol\":10366:10373  balance */\n      dup3\n        /* \"contract/dexRishabh.sol\":10332:10374  EmergencyWithdraw(address(token), balance) */\n      mload(0x40)\n      tag_126\n      swap2\n        /* \"#utility.yul\":481:506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":469:471   */\n      0x20\n        /* \"#utility.yul\":454:472   */\n      add\n      swap1\n        /* \"#utility.yul\":335:512   */\n      jump\n        /* \"contract/dexRishabh.sol\":10332:10374  EmergencyWithdraw(address(token), balance) */\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/dexRishabh.sol\":9958:10382  {... */\n      pop\n        /* \"contract/dexRishabh.sol\":9898:10382  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract/dexRishabh.sol\":7159:8367  function swapTokenBForTokenA(... */\n    tag_55:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_133:\n        /* \"contract/dexRishabh.sol\":2910:2918  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":2910:2923  reserveA == 0 */\n      iszero\n      dup1\n        /* \"contract/dexRishabh.sol\":2910:2940  reserveA == 0 || reserveB == 0 */\n      tag_135\n      jumpi\n      pop\n        /* \"contract/dexRishabh.sol\":2927:2935  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":2927:2940  reserveB == 0 */\n      iszero\n        /* \"contract/dexRishabh.sol\":2910:2940  reserveA == 0 || reserveB == 0 */\n    tag_135:\n        /* \"contract/dexRishabh.sol\":2906:2962  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n      iszero\n      tag_136\n      jumpi\n        /* \"contract/dexRishabh.sol\":2949:2962  NoLiquidity() */\n      mload(0x40)\n      shl(0xe1, 0x6180f03f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":2906:2962  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n    tag_136:\n        /* \"contract/dexRishabh.sol\":7331:7340  amountInB */\n      dup2\n        /* \"contract/dexRishabh.sol\":7344:7345  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":7331:7345  amountInB == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":7327:7366  if (amountInB == 0) revert ZeroAmount() */\n      tag_138\n      jumpi\n        /* \"contract/dexRishabh.sol\":7354:7366  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":7327:7366  if (amountInB == 0) revert ZeroAmount() */\n    tag_138:\n        /* \"contract/dexRishabh.sol\":7381:7393  amountOutMin */\n      dup1\n        /* \"contract/dexRishabh.sol\":7397:7398  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":7381:7398  amountOutMin == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":7377:7419  if (amountOutMin == 0) revert ZeroAmount() */\n      tag_139\n      jumpi\n        /* \"contract/dexRishabh.sol\":7407:7419  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":7377:7419  if (amountOutMin == 0) revert ZeroAmount() */\n    tag_139:\n        /* \"contract/dexRishabh.sol\":7468:7491  uint256 amountInWithFee */\n      0x00\n        /* \"contract/dexRishabh.sol\":7494:7519  amountInB * FEE_NUMERATOR */\n      tag_140\n        /* \"contract/dexRishabh.sol\":1016:1019  997 */\n      0x03e5\n        /* \"contract/dexRishabh.sol\":7494:7503  amountInB */\n      dup5\n        /* \"contract/dexRishabh.sol\":7494:7519  amountInB * FEE_NUMERATOR */\n      tag_75\n      jump\t// in\n    tag_140:\n        /* \"contract/dexRishabh.sol\":7468:7519  uint256 amountInWithFee = amountInB * FEE_NUMERATOR */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":7530:7547  uint256 numerator */\n      0x00\n        /* \"contract/dexRishabh.sol\":7568:7576  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":7550:7565  amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":7550:7576  amountInWithFee * reserveA */\n      tag_141\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_141:\n        /* \"contract/dexRishabh.sol\":7530:7576  uint256 numerator = amountInWithFee * reserveA */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":7587:7606  uint256 denominator */\n      0x00\n        /* \"contract/dexRishabh.sol\":7640:7655  amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":1110:1114  1000 */\n      0x03e8\n        /* \"contract/dexRishabh.sol\":7610:7618  reserveB */\n      sload(0x03)\n        /* \"contract/dexRishabh.sol\":7610:7636  reserveB * FEE_DENOMINATOR */\n      tag_142\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_142:\n        /* \"contract/dexRishabh.sol\":7609:7655  (reserveB * FEE_DENOMINATOR) + amountInWithFee */\n      tag_143\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_143:\n        /* \"contract/dexRishabh.sol\":7587:7655  uint256 denominator = (reserveB * FEE_DENOMINATOR) + amountInWithFee */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":7666:7684  uint256 amountOutA */\n      0x00\n        /* \"contract/dexRishabh.sol\":7687:7710  numerator / denominator */\n      tag_144\n        /* \"contract/dexRishabh.sol\":7587:7655  uint256 denominator = (reserveB * FEE_DENOMINATOR) + amountInWithFee */\n      dup3\n        /* \"contract/dexRishabh.sol\":7687:7696  numerator */\n      dup5\n        /* \"contract/dexRishabh.sol\":7687:7710  numerator / denominator */\n      tag_81\n      jump\t// in\n    tag_144:\n        /* \"contract/dexRishabh.sol\":7666:7710  uint256 amountOutA = numerator / denominator */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":7772:7784  amountOutMin */\n      dup5\n        /* \"contract/dexRishabh.sol\":7759:7769  amountOutA */\n      dup2\n        /* \"contract/dexRishabh.sol\":7759:7784  amountOutA < amountOutMin */\n      lt\n        /* \"contract/dexRishabh.sol\":7755:7840  if (amountOutA < amountOutMin) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"contract/dexRishabh.sol\":7808:7828  InsufficientOutput() */\n      mload(0x40)\n      shl(0xe0, 0xbb2875c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":7755:7840  if (amountOutA < amountOutMin) {... */\n    tag_145:\n        /* \"contract/dexRishabh.sol\":7869:7877  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":7856:7866  amountOutA */\n      dup2\n        /* \"contract/dexRishabh.sol\":7856:7877  amountOutA > reserveA */\n      gt\n        /* \"contract/dexRishabh.sol\":7852:7934  if (amountOutA > reserveA) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contract/dexRishabh.sol\":7901:7922  InsufficientReserve() */\n      mload(0x40)\n      shl(0xe0, 0x28b35f21)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":7852:7934  if (amountOutA > reserveA) {... */\n    tag_146:\n        /* \"contract/dexRishabh.sol\":7986:7995  amountInB */\n      dup6\n        /* \"contract/dexRishabh.sol\":7974:7982  reserveB */\n      0x03\n      0x00\n        /* \"contract/dexRishabh.sol\":7974:7995  reserveB += amountInB */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":8018:8028  amountOutA */\n      dup1\n        /* \"contract/dexRishabh.sol\":8006:8014  reserveA */\n      0x02\n      0x00\n        /* \"contract/dexRishabh.sol\":8006:8028  reserveA -= amountOutA */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_148:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":8074:8135  tokenB.safeTransferFrom(msg.sender, address(this), amountInB) */\n      tag_149\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":8074:8080  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n        /* \"contract/dexRishabh.sol\":8074:8097  tokenB.safeTransferFrom */\n      and\n        /* \"contract/dexRishabh.sol\":8098:8108  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":8118:8122  this */\n      address\n        /* \"contract/dexRishabh.sol\":8125:8134  amountInB */\n      dup10\n        /* \"contract/dexRishabh.sol\":8074:8097  tokenB.safeTransferFrom */\n      tag_107\n        /* \"contract/dexRishabh.sol\":8074:8135  tokenB.safeTransferFrom(msg.sender, address(this), amountInB) */\n      jump\t// in\n    tag_149:\n        /* \"contract/dexRishabh.sol\":8146:8189  tokenA.safeTransfer(msg.sender, amountOutA) */\n      tag_150\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":8146:8152  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n        /* \"contract/dexRishabh.sol\":8146:8165  tokenA.safeTransfer */\n      and\n        /* \"contract/dexRishabh.sol\":8166:8176  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":8178:8188  amountOutA */\n      dup4\n        /* \"contract/dexRishabh.sol\":8146:8165  tokenA.safeTransfer */\n      tag_109\n        /* \"contract/dexRishabh.sol\":8146:8189  tokenA.safeTransfer(msg.sender, amountOutA) */\n      jump\t// in\n    tag_150:\n        /* \"contract/dexRishabh.sol\":8341:8347  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":8207:8359  Swapped(... */\n      and\n        /* \"contract/dexRishabh.sol\":8311:8317  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":8207:8359  Swapped(... */\n      and\n        /* \"contract/dexRishabh.sol\":8229:8239  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":8207:8359  Swapped(... */\n      and\n      0xdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850\n        /* \"contract/dexRishabh.sol\":8254:8263  amountInB */\n      dup10\n        /* \"contract/dexRishabh.sol\":8278:8288  amountOutA */\n      dup6\n        /* \"contract/dexRishabh.sol\":8207:8359  Swapped(... */\n      mload(0x40)\n      tag_151\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":691:716   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":747:749   */\n      0x20\n        /* \"#utility.yul\":732:750   */\n      dup3\n      add\n        /* \"#utility.yul\":725:759   */\n      mstore\n        /* \"#utility.yul\":679:681   */\n      0x40\n        /* \"#utility.yul\":664:682   */\n      add\n      swap1\n        /* \"#utility.yul\":517:765   */\n      jump\n        /* \"contract/dexRishabh.sol\":8207:8359  Swapped(... */\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/dexRishabh.sol\":7289:8367  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contract/dexRishabh.sol\":3948:4933  function addLiquidity(... */\n    tag_62:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_155\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_155:\n        /* \"contract/dexRishabh.sol\":4093:4105  amountA == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"contract/dexRishabh.sol\":4093:4121  amountA == 0 || amountB == 0 */\n      tag_157\n      jumpi\n      pop\n        /* \"contract/dexRishabh.sol\":4109:4121  amountB == 0 */\n      dup1\n      iszero\n        /* \"contract/dexRishabh.sol\":4093:4121  amountA == 0 || amountB == 0 */\n    tag_157:\n        /* \"contract/dexRishabh.sol\":4089:4169  if (amountA == 0 || amountB == 0) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"contract/dexRishabh.sol\":4145:4157  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/dexRishabh.sol\":4089:4169  if (amountA == 0 || amountB == 0) {... */\n    tag_158:\n        /* \"contract/dexRishabh.sol\":4257:4274  uint256 liquidity */\n      0x00\n        /* \"contract/dexRishabh.sol\":4289:4303  totalLiquidity */\n      sload(0x04)\n        /* \"contract/dexRishabh.sol\":4307:4308  0 */\n      0x00\n        /* \"contract/dexRishabh.sol\":4289:4308  totalLiquidity == 0 */\n      sub\n        /* \"contract/dexRishabh.sol\":4285:4550  if (totalLiquidity == 0) {... */\n      tag_159\n      jumpi\n        /* \"contract/dexRishabh.sol\":4378:4395  amountA + amountB */\n      tag_160\n        /* \"contract/dexRishabh.sol\":4388:4395  amountB */\n      dup3\n        /* \"contract/dexRishabh.sol\":4378:4385  amountA */\n      dup5\n        /* \"contract/dexRishabh.sol\":4378:4395  amountA + amountB */\n      tag_79\n      jump\t// in\n    tag_160:\n        /* \"contract/dexRishabh.sol\":4366:4395  liquidity = amountA + amountB */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":4285:4550  if (totalLiquidity == 0) {... */\n      jump(tag_161)\n    tag_159:\n        /* \"contract/dexRishabh.sol\":4530:4538  reserveA */\n      sload(0x02)\n        /* \"contract/dexRishabh.sol\":4512:4526  totalLiquidity */\n      sload(0x04)\n        /* \"contract/dexRishabh.sol\":4502:4526  amountA * totalLiquidity */\n      tag_162\n      swap1\n        /* \"contract/dexRishabh.sol\":4502:4509  amountA */\n      dup6\n        /* \"contract/dexRishabh.sol\":4502:4526  amountA * totalLiquidity */\n      tag_75\n      jump\t// in\n    tag_162:\n        /* \"contract/dexRishabh.sol\":4501:4538  (amountA * totalLiquidity) / reserveA */\n      tag_163\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_163:\n        /* \"contract/dexRishabh.sol\":4489:4538  liquidity = (amountA * totalLiquidity) / reserveA */\n      swap1\n      pop\n        /* \"contract/dexRishabh.sol\":4285:4550  if (totalLiquidity == 0) {... */\n    tag_161:\n        /* \"contract/dexRishabh.sol\":4602:4609  amountA */\n      dup3\n        /* \"contract/dexRishabh.sol\":4590:4598  reserveA */\n      0x02\n      0x00\n        /* \"contract/dexRishabh.sol\":4590:4609  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_164:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":4632:4639  amountB */\n      dup2\n        /* \"contract/dexRishabh.sol\":4620:4628  reserveB */\n      0x03\n      0x00\n        /* \"contract/dexRishabh.sol\":4620:4639  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":4668:4677  liquidity */\n      dup1\n        /* \"contract/dexRishabh.sol\":4650:4664  totalLiquidity */\n      0x04\n      0x00\n        /* \"contract/dexRishabh.sol\":4650:4677  totalLiquidity += liquidity */\n      dup3\n      dup3\n      sload\n      tag_166\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_166:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/dexRishabh.sol\":4723:4782  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_167\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":4723:4729  tokenA */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n        /* \"contract/dexRishabh.sol\":4723:4746  tokenA.safeTransferFrom */\n      and\n        /* \"contract/dexRishabh.sol\":4747:4757  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":4767:4771  this */\n      address\n        /* \"contract/dexRishabh.sol\":4774:4781  amountA */\n      dup7\n        /* \"contract/dexRishabh.sol\":4723:4746  tokenA.safeTransferFrom */\n      tag_107\n        /* \"contract/dexRishabh.sol\":4723:4782  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      jump\t// in\n    tag_167:\n        /* \"contract/dexRishabh.sol\":4793:4852  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_168\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/dexRishabh.sol\":4793:4799  tokenB */\n      immutable(\"0x800e5167fcdf08619843f8e892e4ee5b0c228c18c17637b1d2ba8ec6b4153b4e\")\n        /* \"contract/dexRishabh.sol\":4793:4816  tokenB.safeTransferFrom */\n      and\n        /* \"contract/dexRishabh.sol\":4817:4827  msg.sender */\n      caller\n        /* \"contract/dexRishabh.sol\":4837:4841  this */\n      address\n        /* \"contract/dexRishabh.sol\":4844:4851  amountB */\n      dup6\n        /* \"contract/dexRishabh.sol\":4793:4816  tokenB.safeTransferFrom */\n      tag_107\n        /* \"contract/dexRishabh.sol\":4793:4852  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      jump\t// in\n    tag_168:\n        /* \"contract/dexRishabh.sol\":4870:4925  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3312:3337   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3353:3371   */\n      dup2\n      add\n        /* \"#utility.yul\":3346:3380   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":3396:3414   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3389:3423   */\n      dup3\n      swap1\n      mstore\n        /* \"contract/dexRishabh.sol\":4885:4895  msg.sender */\n      caller\n      swap1\n        /* \"contract/dexRishabh.sol\":4870:4925  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n      swap1\n        /* \"#utility.yul\":3300:3302   */\n      0x60\n        /* \"#utility.yul\":3285:3303   */\n      add\n        /* \"contract/dexRishabh.sol\":4870:4925  LiquidityAdded(msg.sender, amountA, amountB, liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/dexRishabh.sol\":4051:4933  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_111\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_177\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_107:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3692:3707   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3674:3708   */\n      mstore\n        /* \"#utility.yul\":3744:3759   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":3724:3742   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":3717:3760   */\n      mstore\n        /* \"#utility.yul\":3776:3794   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3769:3803   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_181\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3609:3627   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_184\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4006:4038   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3988:4039   */\n      mstore\n        /* \"#utility.yul\":4055:4073   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4048:4082   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_186\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3961:3979   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      tag_182\n        /* \"#utility.yul\":3814:4088   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n    tag_186:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_176\n        /* \"#utility.yul\":770:987   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_184:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_199\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_200\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_201:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":948:980   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_176\n        /* \"#utility.yul\":770:987   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_208\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_209\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_207:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_176\n        /* \"#utility.yul\":770:987   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_217\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_216)\n    tag_217:\n      0x60\n      swap2\n      pop\n    tag_216:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_218\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_219\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_210:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_219:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_222\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4828  _revert */\n      tag_223\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_210)\n    tag_221:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_225:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":948:980   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":930:981   */\n      mstore\n        /* \"#utility.yul\":903:921   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_176\n        /* \"#utility.yul\":770:987   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_210)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_223:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:330   */\n    tag_22:\n        /* \"#utility.yul\":91:97   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup1\n        /* \"#utility.yul\":107:113   */\n      0x00\n        /* \"#utility.yul\":160:162   */\n      0x60\n        /* \"#utility.yul\":148:157   */\n      dup5\n        /* \"#utility.yul\":139:146   */\n      dup7\n        /* \"#utility.yul\":135:158   */\n      sub\n        /* \"#utility.yul\":131:163   */\n      slt\n        /* \"#utility.yul\":128:180   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":176:177   */\n      0x00\n        /* \"#utility.yul\":173:174   */\n      dup1\n        /* \"#utility.yul\":166:178   */\n      revert\n        /* \"#utility.yul\":128:180   */\n    tag_235:\n      pop\n      pop\n        /* \"#utility.yul\":199:222   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":269:271   */\n      0x20\n        /* \"#utility.yul\":254:272   */\n      dup4\n      add\n        /* \"#utility.yul\":241:273   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":320:322   */\n      0x40\n        /* \"#utility.yul\":305:323   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":292:324   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:330   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1240   */\n    tag_42:\n        /* \"#utility.yul\":1060:1066   */\n      0x00\n        /* \"#utility.yul\":1068:1074   */\n      dup1\n        /* \"#utility.yul\":1121:1123   */\n      0x40\n        /* \"#utility.yul\":1109:1118   */\n      dup4\n        /* \"#utility.yul\":1100:1107   */\n      dup6\n        /* \"#utility.yul\":1096:1119   */\n      sub\n        /* \"#utility.yul\":1092:1124   */\n      slt\n        /* \"#utility.yul\":1089:1141   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1137:1138   */\n      0x00\n        /* \"#utility.yul\":1134:1135   */\n      dup1\n        /* \"#utility.yul\":1127:1139   */\n      revert\n        /* \"#utility.yul\":1089:1141   */\n    tag_240:\n      pop\n      pop\n        /* \"#utility.yul\":1160:1183   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1202:1234   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":992:1240   */\n      jump\t// out\n        /* \"#utility.yul\":1245:1384   */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1328:1359   */\n      dup2\n      and\n        /* \"#utility.yul\":1318:1360   */\n      dup2\n      eq\n        /* \"#utility.yul\":1308:1378   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1374:1375   */\n      0x00\n        /* \"#utility.yul\":1371:1372   */\n      dup1\n        /* \"#utility.yul\":1364:1376   */\n      revert\n        /* \"#utility.yul\":1389:1658   */\n    tag_49:\n        /* \"#utility.yul\":1462:1468   */\n      0x00\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1494:1501   */\n      dup5\n        /* \"#utility.yul\":1490:1513   */\n      sub\n        /* \"#utility.yul\":1486:1518   */\n      slt\n        /* \"#utility.yul\":1483:1535   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1528:1529   */\n      dup1\n        /* \"#utility.yul\":1521:1533   */\n      revert\n        /* \"#utility.yul\":1483:1535   */\n    tag_244:\n        /* \"#utility.yul\":1570:1579   */\n      dup2\n        /* \"#utility.yul\":1557:1580   */\n      calldataload\n        /* \"#utility.yul\":1589:1628   */\n      tag_210\n        /* \"#utility.yul\":1622:1627   */\n      dup2\n        /* \"#utility.yul\":1589:1628   */\n      tag_231\n      jump\t// in\n        /* \"#utility.yul\":2131:2258   */\n    tag_232:\n        /* \"#utility.yul\":2192:2202   */\n      0x4e487b71\n        /* \"#utility.yul\":2187:2190   */\n      0xe0\n        /* \"#utility.yul\":2183:2203   */\n      shl\n        /* \"#utility.yul\":2180:2181   */\n      0x00\n        /* \"#utility.yul\":2173:2204   */\n      mstore\n        /* \"#utility.yul\":2223:2227   */\n      0x11\n        /* \"#utility.yul\":2220:2221   */\n      0x04\n        /* \"#utility.yul\":2213:2228   */\n      mstore\n        /* \"#utility.yul\":2247:2251   */\n      0x24\n        /* \"#utility.yul\":2244:2245   */\n      0x00\n        /* \"#utility.yul\":2237:2252   */\n      revert\n        /* \"#utility.yul\":2263:2431   */\n    tag_75:\n        /* \"#utility.yul\":2336:2345   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2367:2376   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2384:2399   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2378:2400   */\n      dup5\n      eq\n        /* \"#utility.yul\":2364:2401   */\n      or\n        /* \"#utility.yul\":2354:2425   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2405:2423   */\n      tag_207\n      tag_232\n      jump\t// in\n        /* \"#utility.yul\":2436:2561   */\n    tag_79:\n        /* \"#utility.yul\":2501:2510   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2522:2532   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2519:2555   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2535:2553   */\n      tag_207\n      tag_232\n      jump\t// in\n        /* \"#utility.yul\":2566:2783   */\n    tag_81:\n        /* \"#utility.yul\":2606:2607   */\n      0x00\n        /* \"#utility.yul\":2632:2633   */\n      dup3\n        /* \"#utility.yul\":2622:2754   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2676:2686   */\n      0x4e487b71\n        /* \"#utility.yul\":2671:2674   */\n      0xe0\n        /* \"#utility.yul\":2667:2687   */\n      shl\n        /* \"#utility.yul\":2664:2665   */\n      0x00\n        /* \"#utility.yul\":2657:2688   */\n      mstore\n        /* \"#utility.yul\":2711:2715   */\n      0x12\n        /* \"#utility.yul\":2708:2709   */\n      0x04\n        /* \"#utility.yul\":2701:2716   */\n      mstore\n        /* \"#utility.yul\":2739:2743   */\n      0x24\n        /* \"#utility.yul\":2736:2737   */\n      0x00\n        /* \"#utility.yul\":2729:2744   */\n      revert\n        /* \"#utility.yul\":2622:2754   */\n    tag_258:\n      pop\n        /* \"#utility.yul\":2768:2777   */\n      div\n      swap1\n        /* \"#utility.yul\":2566:2783   */\n      jump\t// out\n        /* \"#utility.yul\":2788:2916   */\n    tag_102:\n        /* \"#utility.yul\":2855:2864   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2876:2887   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2873:2910   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2890:2908   */\n      tag_207\n      tag_232\n      jump\t// in\n        /* \"#utility.yul\":2921:3105   */\n    tag_123:\n        /* \"#utility.yul\":2991:2997   */\n      0x00\n        /* \"#utility.yul\":3044:3046   */\n      0x20\n        /* \"#utility.yul\":3032:3041   */\n      dup3\n        /* \"#utility.yul\":3023:3030   */\n      dup5\n        /* \"#utility.yul\":3019:3042   */\n      sub\n        /* \"#utility.yul\":3015:3047   */\n      slt\n        /* \"#utility.yul\":3012:3064   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3057:3058   */\n      dup1\n        /* \"#utility.yul\":3050:3062   */\n      revert\n        /* \"#utility.yul\":3012:3064   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":3083:3099   */\n      mload\n      swap2\n        /* \"#utility.yul\":2921:3105   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4370   */\n    tag_203:\n        /* \"#utility.yul\":4160:4166   */\n      0x00\n        /* \"#utility.yul\":4213:4215   */\n      0x20\n        /* \"#utility.yul\":4201:4210   */\n      dup3\n        /* \"#utility.yul\":4192:4199   */\n      dup5\n        /* \"#utility.yul\":4188:4211   */\n      sub\n        /* \"#utility.yul\":4184:4216   */\n      slt\n        /* \"#utility.yul\":4181:4233   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4226:4227   */\n      dup1\n        /* \"#utility.yul\":4219:4231   */\n      revert\n        /* \"#utility.yul\":4181:4233   */\n    tag_268:\n        /* \"#utility.yul\":4261:4270   */\n      dup2\n        /* \"#utility.yul\":4255:4271   */\n      mload\n        /* \"#utility.yul\":4314:4319   */\n      dup1\n        /* \"#utility.yul\":4307:4320   */\n      iszero\n        /* \"#utility.yul\":4300:4321   */\n      iszero\n        /* \"#utility.yul\":4293:4298   */\n      dup2\n        /* \"#utility.yul\":4290:4322   */\n      eq\n        /* \"#utility.yul\":4280:4340   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4336:4337   */\n      0x00\n        /* \"#utility.yul\":4333:4334   */\n      dup1\n        /* \"#utility.yul\":4326:4338   */\n      revert\n        /* \"#utility.yul\":4375:4787   */\n    tag_214:\n        /* \"#utility.yul\":4504:4507   */\n      0x00\n        /* \"#utility.yul\":4542:4548   */\n      dup3\n        /* \"#utility.yul\":4536:4549   */\n      mload\n        /* \"#utility.yul\":4567:4568   */\n      0x00\n        /* \"#utility.yul\":4577:4706   */\n    tag_271:\n        /* \"#utility.yul\":4591:4597   */\n      dup2\n        /* \"#utility.yul\":4588:4589   */\n      dup2\n        /* \"#utility.yul\":4585:4598   */\n      lt\n        /* \"#utility.yul\":4577:4706   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4689:4693   */\n      0x20\n        /* \"#utility.yul\":4673:4687   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":4669:4694   */\n      dup2\n      add\n        /* \"#utility.yul\":4663:4695   */\n      mload\n        /* \"#utility.yul\":4650:4661   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4643:4696   */\n      mstore\n        /* \"#utility.yul\":4606:4618   */\n      add\n        /* \"#utility.yul\":4577:4706   */\n      jump(tag_271)\n    tag_273:\n      pop\n        /* \"#utility.yul\":4761:4762   */\n      0x00\n        /* \"#utility.yul\":4725:4741   */\n      swap3\n      add\n        /* \"#utility.yul\":4750:4763   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4725:4741   */\n      swap2\n        /* \"#utility.yul\":4375:4787   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220caba3b37e685607a38327a7ed8498bfa43dc52a92b8703e63d74730e2bb0661f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1056": {
									"entryPoint": null,
									"id": 1056,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 231,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:699:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:8"
															},
															"nodeType": "YulIf",
															"src": "304:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:8",
														"type": ""
													}
												],
												"src": "196:293:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "605:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "678:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "683:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "687:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "640:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "564:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "586:4:8",
														"type": ""
													}
												],
												"src": "494:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x112C CODESIZE SUB DUP1 PUSH3 0x112C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x153 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE CALLER DUP1 PUSH2 0x59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62 DUP2 PUSH2 0xE7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x80 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x9E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xD0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBD969EB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x184 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16D DUP4 PUSH2 0x138 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B PUSH1 0x20 DUP5 ADD PUSH2 0x138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xF32 PUSH3 0x1FA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x195 ADD MSTORE DUP2 DUP2 PUSH2 0x475 ADD MSTORE DUP2 DUP2 PUSH2 0x49E ADD MSTORE DUP2 DUP2 PUSH2 0x595 ADD MSTORE DUP2 DUP2 PUSH2 0x820 ADD MSTORE DUP2 DUP2 PUSH2 0x8A8 ADD MSTORE PUSH2 0xA1B ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x12F ADD MSTORE DUP2 DUP2 PUSH2 0x440 ADD MSTORE DUP2 DUP2 PUSH2 0x4C8 ADD MSTORE DUP2 DUP2 PUSH2 0x558 ADD MSTORE DUP2 DUP2 PUSH2 0x855 ADD MSTORE DUP2 DUP2 PUSH2 0x87E ADD MSTORE PUSH2 0x9E6 ADD MSTORE PUSH2 0xF32 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FF1C9BC GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x76D5F25F EQ PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15770F92 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x15770F92 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x18E PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x151 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x251 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x27C PUSH2 0x3E5 DUP7 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x289 DUP5 DUP4 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x299 PUSH2 0x3E8 DUP9 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AF DUP2 DUP4 PUSH2 0xE68 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x2D1 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x33C PUSH2 0x3E5 DUP5 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 PUSH1 0x2 SLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x36B SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x378 DUP3 DUP5 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x28B35F21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x3CE PUSH2 0x3E8 DUP5 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E5 DUP8 DUP5 PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH4 0x97C7F537 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x468 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP11 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x49C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xB67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP11 DUP7 PUSH1 0x40 MLOAD PUSH2 0x534 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x556 PUSH2 0xB9D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xB67 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x6DE PUSH0 PUSH2 0xBCA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x6F7 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x762 PUSH2 0x3E5 DUP5 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x79E DUP3 DUP5 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28B35F21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x848 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x87C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xB67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x914 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x931 PUSH2 0xAD2 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x93C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH0 SUB PUSH2 0x975 JUMPI PUSH2 0x96E DUP3 DUP5 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH2 0x992 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x985 SWAP1 DUP6 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x98F SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA0E SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0xA43 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xBCA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB61 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB98 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0xB2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC89 DUP4 DUP4 PUSH0 PUSH2 0xC92 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD21 DUP7 DUP4 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xD42 JUMPI PUSH2 0xD3D DUP3 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xD26 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST POP DUP1 PUSH2 0xD26 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD99 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xACF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD26 DUP2 PUSH2 0xDFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD26 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xED5 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xBA EXTCODESIZE CALLDATACOPY 0xE6 DUP6 PUSH1 0x7A CODESIZE ORIGIN PUSH27 0x7ED8498BFA43DC52A92B8703E63D74730E2BB0661F64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "793:9592:7:-:0;;;3237:434;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:6;1917:7;:21;3328:10:7;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:8;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;3373:27:7;::::2;::::0;;:58:::2;;-1:-1:-1::0;;;;;;3404:27:7;::::2;::::0;3373:58:::2;3369:111;;;3455:13;;-1:-1:-1::0;;;3455:13:7::2;;;;;;;;;;;3369:111;3511:13;-1:-1:-1::0;;;;;3494:30:7::2;:13;-1:-1:-1::0;;;;;3494:30:7::2;::::0;3490:90:::2;;3548:20;;-1:-1:-1::0;;;3548:20:7::2;;;;;;;;;;;3490:90;-1:-1:-1::0;;;;;3592:30:7;;::::2;;::::0;3633::::2;;::::0;793:9592;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;793:9592:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_501": {
									"entryPoint": 3099,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2973,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_875": {
									"entryPoint": 2770,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_803": {
									"entryPoint": 3465,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3018,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1147": {
									"entryPoint": 2345,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1534": {
									"entryPoint": 1358,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 3218,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 3196,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAmountOut_1467": {
									"entryPoint": 549,
									"id": 1467,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getReserves_1409": {
									"entryPoint": null,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1741,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveA_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 2810,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 2919,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokenAForTokenB_1279": {
									"entryPoint": 698,
									"id": 1279,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokenBForTokenA_1392": {
									"entryPoint": 1760,
									"id": 1392,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenA_944": {
									"entryPoint": null,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalLiquidity_956": {
									"entryPoint": null,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2704,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 3373,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4789:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:212:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "164:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "173:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "166:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "166:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "139:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "148:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "135:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "135:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:32:8"
															},
															"nodeType": "YulIf",
															"src": "128:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "189:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "212:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "199:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "199:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "189:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "231:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "258:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "269:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "254:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "254:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "241:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "241:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "282:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "320:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "305:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "305:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "292:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "282:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "68:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "79:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "91:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "99:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "107:6:8",
														"type": ""
													}
												],
												"src": "14:316:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "436:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "446:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "454:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "446:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "488:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "499:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "481:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "405:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "416:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "427:4:8",
														"type": ""
													}
												],
												"src": "335:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "656:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "668:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "679:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "664:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "656:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "698:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "691:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "736:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "747:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "752:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "607:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "618:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "626:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "637:4:8",
														"type": ""
													}
												],
												"src": "517:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "885:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "895:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "895:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "937:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "968:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "973:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "964:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "977:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "960:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "960:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "930:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "930:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "930:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "854:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "865:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "876:4:8",
														"type": ""
													}
												],
												"src": "770:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:161:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1125:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1134:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1137:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1127:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1127:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1100:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1109:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1096:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1096:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1092:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:32:8"
															},
															"nodeType": "YulIf",
															"src": "1089:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1150:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1173:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1160:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1150:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1192:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1230:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1215:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1215:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1192:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1037:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1048:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1060:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1068:6:8",
														"type": ""
													}
												],
												"src": "992:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1298:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1321:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1332:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1347:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1352:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1343:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1343:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1356:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1339:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1339:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1328:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1328:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1318:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:50:8"
															},
															"nodeType": "YulIf",
															"src": "1308:70:8"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1287:5:8",
														"type": ""
													}
												],
												"src": "1245:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:185:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1519:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1528:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1531:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1521:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1521:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1521:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1494:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1490:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:32:8"
															},
															"nodeType": "YulIf",
															"src": "1483:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1544:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1557:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1548:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1622:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1589:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1637:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1647:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1439:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1450:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1462:6:8",
														"type": ""
													}
												],
												"src": "1389:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1774:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1786:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1797:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1774:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1816:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1847:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1852:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1843:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1843:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1856:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1839:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1809:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1733:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1744:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1755:4:8",
														"type": ""
													}
												],
												"src": "1663:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1941:185:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1987:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1996:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1999:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1989:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1989:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1989:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1971:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1958:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:32:8"
															},
															"nodeType": "YulIf",
															"src": "1951:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2012:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2025:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2016:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2090:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2057:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2057:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2105:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2115:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1907:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1918:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1930:6:8",
														"type": ""
													}
												],
												"src": "1871:255:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2187:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2192:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2223:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2213:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2213:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2244:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2247:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2131:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2315:116:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2325:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2340:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2343:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2336:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2325:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2403:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2405:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2405:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2405:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2374:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2367:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2381:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2388:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2397:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2384:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2384:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2378:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2378:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2364:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2364:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:45:8"
															},
															"nodeType": "YulIf",
															"src": "2354:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2294:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2297:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2303:7:8",
														"type": ""
													}
												],
												"src": "2263:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2484:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2494:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2505:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2508:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2501:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2494:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2533:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2535:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2535:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2535:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2525:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2528:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2522:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:10:8"
															},
															"nodeType": "YulIf",
															"src": "2519:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2467:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2470:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2476:3:8",
														"type": ""
													}
												],
												"src": "2436:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2643:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2664:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2671:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2676:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2667:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2667:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2657:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2657:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2657:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2708:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2711:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2701:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2701:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2632:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:9:8"
															},
															"nodeType": "YulIf",
															"src": "2622:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2763:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2768:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2763:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2597:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2600:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2606:1:8",
														"type": ""
													}
												],
												"src": "2566:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2837:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2847:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2859:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2862:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2855:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2847:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2888:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2890:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2890:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2879:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2885:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2876:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:11:8"
															},
															"nodeType": "YulIf",
															"src": "2873:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2819:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2822:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2828:4:8",
														"type": ""
													}
												],
												"src": "2788:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3002:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3048:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3050:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3050:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3023:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3032:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3044:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3015:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:32:8"
															},
															"nodeType": "YulIf",
															"src": "3012:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3073:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3089:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3083:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3083:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2991:6:8",
														"type": ""
													}
												],
												"src": "2921:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3267:162:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3289:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3319:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3330:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3368:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3353:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3346:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3346:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3411:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3396:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3396:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3416:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3220:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3231:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3239:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3247:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3258:4:8",
														"type": ""
													}
												],
												"src": "3110:319:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3591:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3601:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3613:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3624:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3609:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3601:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3636:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3659:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3640:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3681:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3696:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3704:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3674:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3674:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3739:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3724:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3748:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3756:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3744:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3744:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3717:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3780:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3791:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3776:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3796:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3769:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3769:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3544:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3555:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3563:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3571:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3582:4:8",
														"type": ""
													}
												],
												"src": "3434:375:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3943:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3953:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3965:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3961:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3953:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4026:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4031:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4022:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4022:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4035:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4018:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4018:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4006:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3988:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4075:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4048:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3904:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3915:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3934:4:8",
														"type": ""
													}
												],
												"src": "3814:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4171:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4217:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4229:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4219:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4219:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4219:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4192:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4201:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4213:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:32:8"
															},
															"nodeType": "YulIf",
															"src": "4181:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4242:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4261:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4255:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4246:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4324:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4333:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4336:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4326:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4326:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4326:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4293:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4314:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4307:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4307:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4300:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4300:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4290:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4283:40:8"
															},
															"nodeType": "YulIf",
															"src": "4280:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4349:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4359:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4137:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4148:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4160:6:8",
														"type": ""
													}
												],
												"src": "4093:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4512:275:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4522:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4542:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4536:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4536:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4567:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4562:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4629:77:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4654:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4659:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4650:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4650:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "4677:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4685:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4673:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4673:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4689:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4669:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4669:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4663:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4663:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4643:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4643:53:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4643:53:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4588:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4585:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4599:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4601:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4610:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4613:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4606:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4606:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4601:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4581:3:8",
																"statements": []
															},
															"src": "4577:129:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4715:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4729:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4734:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:16:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4719:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4757:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:13:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4750:13:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4772:9:8",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "4779:2:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4772:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4488:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4493:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4504:3:8",
														"type": ""
													}
												],
												"src": "4375:412:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$225(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"944": [
									{
										"length": 32,
										"start": 303
									},
									{
										"length": 32,
										"start": 1088
									},
									{
										"length": 32,
										"start": 1224
									},
									{
										"length": 32,
										"start": 1368
									},
									{
										"length": 32,
										"start": 2133
									},
									{
										"length": 32,
										"start": 2174
									},
									{
										"length": 32,
										"start": 2534
									}
								],
								"947": [
									{
										"length": 32,
										"start": 405
									},
									{
										"length": 32,
										"start": 1141
									},
									{
										"length": 32,
										"start": 1182
									},
									{
										"length": 32,
										"start": 1429
									},
									{
										"length": 32,
										"start": 2080
									},
									{
										"length": 32,
										"start": 2216
									},
									{
										"length": 32,
										"start": 2587
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e5575f3560e01c80636ff1c9bc116100885780638da5cb5b116100635780638da5cb5b146101e55780639cd441da146101f6578063dc5fa6c514610209578063f2fde38b14610212575f80fd5b80636ff1c9bc146101b7578063715018a6146101ca57806376d5f25f146101d2575f80fd5b806315770f92116100c357806315770f921461016957806319e36f3b1461017257806356d9be4c1461017b5780635f64b55b14610190575f80fd5b8063054d50d4146100e95780630902f1ac1461010f5780630fc63d101461012a575b5f80fd5b6100fc6100f7366004610db2565b610225565b6040519081526020015b60405180910390f35b60025460035460408051928352602083019190915201610106565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610106565b6100fc60045481565b6100fc60035481565b61018e610189366004610ddb565b6102ba565b005b6101517f000000000000000000000000000000000000000000000000000000000000000081565b61018e6101c5366004610e0f565b61054e565b61018e6106cd565b61018e6101e0366004610ddb565b6106e0565b6001546001600160a01b0316610151565b61018e610204366004610ddb565b610929565b6100fc60025481565b61018e610220366004610e0f565b610a90565b5f835f0361024657604051631f2a200560e01b815260040160405180910390fd5b821580610251575081155b1561026f57604051636180f03f60e11b815260040160405180910390fd5b5f61027c6103e586610e3e565b90505f6102898483610e3e565b90505f826102996103e888610e3e565b6102a39190610e55565b90506102af8183610e68565b979650505050505050565b6102c2610ad2565b60025415806102d15750600354155b156102ef57604051636180f03f60e11b815260040160405180910390fd5b815f0361030f57604051631f2a200560e01b815260040160405180910390fd5b805f0361032f57604051631f2a200560e01b815260040160405180910390fd5b5f61033c6103e584610e3e565b90505f6003548261034d9190610e3e565b90505f826103e86002546103619190610e3e565b61036b9190610e55565b90505f6103788284610e68565b90508481101561039b5760405163bb2875c360e01b815260040160405180910390fd5b6003548111156103be576040516328b35f2160e01b815260040160405180910390fd5b5f6127106103ce6103e884610e3e565b6103d89190610e68565b9050806103e58784610e87565b1115610404576040516397c7f53760e01b815260040160405180910390fd5b8660025f8282546104159190610e55565b925050819055508160035f82825461042d9190610e87565b9091555061046890506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308a610afa565b61049c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610b67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b28508a86604051610534929190918252602082015260400190565b60405180910390a4505050505061054a60015f55565b5050565b610556610b9d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316141580156105ca57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b156105e85760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa15801561062c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106509190610e9a565b9050805f0361067257604051631f2a200560e01b815260040160405180910390fd5b6106866001600160a01b0383163383610b67565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516106c191815260200190565b60405180910390a25050565b6106d5610b9d565b6106de5f610bca565b565b6106e8610ad2565b60025415806106f75750600354155b1561071557604051636180f03f60e11b815260040160405180910390fd5b815f0361073557604051631f2a200560e01b815260040160405180910390fd5b805f0361075557604051631f2a200560e01b815260040160405180910390fd5b5f6107626103e584610e3e565b90505f600254826107739190610e3e565b90505f826103e86003546107879190610e3e565b6107919190610e55565b90505f61079e8284610e68565b9050848110156107c15760405163bb2875c360e01b815260040160405180910390fd5b6002548111156107e4576040516328b35f2160e01b815260040160405180910390fd5b8560035f8282546107f59190610e55565b925050819055508060025f82825461080d9190610e87565b9091555061084890506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333089610afa565b61087c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610b67565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b28508985604051610914929190918252602082015260400190565b60405180910390a45050505061054a60015f55565b610931610ad2565b81158061093c575080155b1561095a57604051631f2a200560e01b815260040160405180910390fd5b5f6004545f036109755761096e8284610e55565b9050610992565b6002546004546109859085610e3e565b61098f9190610e68565b90505b8260025f8282546109a39190610e55565b925050819055508160035f8282546109bb9190610e55565b925050819055508060045f8282546109d39190610e55565b90915550610a0e90506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333086610afa565b610a436001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610afa565b604080518481526020810184905290810182905233907f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e9060600160405180910390a25061054a60015f55565b610a98610b9d565b6001600160a01b038116610ac657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610acf81610bca565b50565b60025f5403610af457604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6040516001600160a01b038481166024830152838116604483015260648201839052610b619186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610c1b565b50505050565b6040516001600160a01b03838116602483015260448201839052610b9891859182169063a9059cbb90606401610b2f565b505050565b6001546001600160a01b031633146106de5760405163118cdaa760e01b8152336004820152602401610abd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f610c2f6001600160a01b03841683610c7c565b905080515f14158015610c53575080806020019051810190610c519190610eb1565b155b15610b9857604051635274afe760e01b81526001600160a01b0384166004820152602401610abd565b6060610c8983835f610c92565b90505b92915050565b606081471015610cb75760405163cd78605960e01b8152306004820152602401610abd565b5f80856001600160a01b03168486604051610cd29190610ed0565b5f6040518083038185875af1925050503d805f8114610d0c576040519150601f19603f3d011682016040523d82523d5f602084013e610d11565b606091505b5091509150610d21868383610d2d565b925050505b9392505050565b606082610d4257610d3d82610d89565b610d26565b8151158015610d5957506001600160a01b0384163b155b15610d8257604051639996b31560e01b81526001600160a01b0385166004820152602401610abd565b5080610d26565b805115610d995780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f805f60608486031215610dc4575f80fd5b505081359360208301359350604090920135919050565b5f8060408385031215610dec575f80fd5b50508035926020909101359150565b6001600160a01b0381168114610acf575f80fd5b5f60208284031215610e1f575f80fd5b8135610d2681610dfb565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610c8c57610c8c610e2a565b80820180821115610c8c57610c8c610e2a565b5f82610e8257634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610c8c57610c8c610e2a565b5f60208284031215610eaa575f80fd5b5051919050565b5f60208284031215610ec1575f80fd5b81518015158114610d26575f80fd5b5f82515f5b81811015610eef5760208186018101518583015201610ed5565b505f92019182525091905056fea2646970667358221220caba3b37e685607a38327a7ed8498bfa43dc52a92b8703e63d74730e2bb0661f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FF1C9BC GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x76D5F25F EQ PUSH2 0x1D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15770F92 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x15770F92 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x18E PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x18E PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x151 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH2 0xFC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18E PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH0 DUP4 PUSH0 SUB PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x251 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x26F JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x27C PUSH2 0x3E5 DUP7 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x289 DUP5 DUP4 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x299 PUSH2 0x3E8 DUP9 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH2 0x2AF DUP2 DUP4 PUSH2 0xE68 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x2D1 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x30F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x32F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x33C PUSH2 0x3E5 DUP5 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 PUSH1 0x2 SLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x36B SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x378 DUP3 DUP5 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x40 MLOAD PUSH4 0x28B35F21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x3CE PUSH2 0x3E8 DUP5 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E5 DUP8 DUP5 PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH4 0x97C7F537 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x468 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP11 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x49C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP5 PUSH2 0xB67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP11 DUP7 PUSH1 0x40 MLOAD PUSH2 0x534 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x556 PUSH2 0xB9D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x686 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xB67 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x6DE PUSH0 PUSH2 0xBCA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x6F7 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x762 PUSH2 0x3E5 DUP5 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH2 0x787 SWAP2 SWAP1 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x791 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x79E DUP3 DUP5 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x28B35F21 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F5 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x848 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0x87C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0xB67 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x914 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x931 PUSH2 0xAD2 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x93C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH0 SUB PUSH2 0x975 JUMPI PUSH2 0x96E DUP3 DUP5 PUSH2 0xE55 JUMP JUMPDEST SWAP1 POP PUSH2 0x992 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x985 SWAP1 DUP6 PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x98F SWAP2 SWAP1 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0xE55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA0E SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP7 PUSH2 0xAFA JUMP JUMPDEST PUSH2 0xA43 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x54A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xBCA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB61 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB98 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0xB2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC2F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xC7C JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC51 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC89 DUP4 DUP4 PUSH0 PUSH2 0xC92 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD21 DUP7 DUP4 DUP4 PUSH2 0xD2D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xD42 JUMPI PUSH2 0xD3D DUP3 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xD26 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xD59 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xD82 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xABD JUMP JUMPDEST POP DUP1 PUSH2 0xD26 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD99 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xACF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD26 DUP2 PUSH2 0xDFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xE82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC8C JUMPI PUSH2 0xC8C PUSH2 0xE2A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD26 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEEF JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xED5 JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xBA EXTCODESIZE CALLDATACOPY 0xE6 DUP6 PUSH1 0x7A CODESIZE ORIGIN PUSH27 0x7ED8498BFA43DC52A92B8703E63D74730E2BB0661F64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "793:9592:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9130:530;;;;;;:::i;:::-;;:::i;:::-;;;481:25:8;;;469:2;454:18;9130:530:7;;;;;;;;8606:154;8713:8;;8744;;8606:154;;;691:25:8;;;747:2;732:18;;725:34;;;;664:18;8606:154:7;517:248:8;1315:30:7;;;;;;;;-1:-1:-1;;;;;948:32:8;;;930:51;;918:2;903:18;1315:30:7;770:217:8;1630:29:7;;;;;;1517:23;;;;;;5299:1556;;;;;;:::i;:::-;;:::i;:::-;;1352:30;;;;;9898:484;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;7159:1208:7:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;3948:985:7;;;;;;:::i;:::-;;:::i;1439:23::-;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;9130:530:7:-;9266:17;9300:8;9312:1;9300:13;9296:38;;9322:12;;-1:-1:-1;;;9322:12:7;;;;;;;;;;;9296:38;9349:14;;;:33;;-1:-1:-1;9367:15:7;;9349:33;9345:59;;;9391:13;;-1:-1:-1;;;9391:13:7;;;;;;;;;;;9345:59;9417:23;9443:24;1016:3;9443:8;:24;:::i;:::-;9417:50;-1:-1:-1;9478:17:7;9498:28;9516:10;9417:50;9498:28;:::i;:::-;9478:48;-1:-1:-1;9537:19:7;9591:15;9560:27;1110:4;9560:9;:27;:::i;:::-;9559:47;;;;:::i;:::-;9537:69;-1:-1:-1;9629:23:7;9537:69;9629:9;:23;:::i;:::-;9617:35;9130:530;-1:-1:-1;;;;;;;9130:530:7:o;5299:1556::-;2356:21:6;:19;:21::i;:::-;2910:8:7::1;::::0;:13;;:30:::1;;-1:-1:-1::0;2927:8:7::1;::::0;:13;2910:30:::1;2906:56;;;2949:13;;-1:-1:-1::0;;;2949:13:7::1;;;;;;;;;;;2906:56;5471:9:::2;5484:1;5471:14:::0;5467:39:::2;;5494:12;;-1:-1:-1::0;;;5494:12:7::2;;;;;;;;;;;5467:39;5521:12;5537:1;5521:17:::0;5517:42:::2;;5547:12;;-1:-1:-1::0;;;5547:12:7::2;;;;;;;;;;;5517:42;5639:23;5665:25;1016:3;5665:9:::0;:25:::2;:::i;:::-;5639:51;;5701:17;5739:8;;5721:15;:26;;;;:::i;:::-;5701:46;;5758:19;5811:15;1110:4;5781:8;;:26;;;;:::i;:::-;5780:46;;;;:::i;:::-;5758:68:::0;-1:-1:-1;5837:18:7::2;5858:23;5758:68:::0;5858:9;:23:::2;:::i;:::-;5837:44;;5943:12;5930:10;:25;5926:85;;;5979:20;;-1:-1:-1::0;;;5979:20:7::2;;;;;;;;;;;5926:85;6097:8;;6084:10;:21;6080:82;;;6129:21;;-1:-1:-1::0;;;6129:21:7::2;;;;;;;;;;;6080:82;6242:19;1269:5;6265:29;1215:4;6265:10:::0;:29:::2;:::i;:::-;6264:49;;;;:::i;:::-;6242:71:::0;-1:-1:-1;6242:71:7;6328:25:::2;6341:12:::0;6328:10;:25:::2;:::i;:::-;:39;6324:98;;;6391:19;;-1:-1:-1::0;;;6391:19:7::2;;;;;;;;;;;6324:98;6474:9;6462:8;;:21;;;;;;;:::i;:::-;;;;;;;;6506:10;6494:8;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6562:61:7::2;::::0;-1:-1:-1;;;;;;6562:6:7::2;:23;6586:10;6606:4;6613:9:::0;6562:23:::2;:61::i;:::-;6634:43;-1:-1:-1::0;;;;;6634:6:7::2;:19;6654:10;6666::::0;6634:19:::2;:43::i;:::-;6829:6;-1:-1:-1::0;;;;;6695:152:7::2;6799:6;-1:-1:-1::0;;;;;6695:152:7::2;6717:10;-1:-1:-1::0;;;;;6695:152:7::2;;6742:9;6766:10;6695:152;;;;;;691:25:8::0;;;747:2;732:18;;725:34;679:2;664:18;;517:248;6695:152:7::2;;;;;;;;5429:1426;;;;;2398:20:6::0;1713:1;2924:7;:21;2744:208;2398:20;5299:1556:7;;:::o;9898:484::-;1531:13:0;:11;:13::i;:::-;10013:6:7::1;-1:-1:-1::0;;;;;9987:33:7::1;9995:5;-1:-1:-1::0;;;;;9987:33:7::1;;;:83;;;;;10063:6;-1:-1:-1::0;;;;;10037:33:7::1;10045:5;-1:-1:-1::0;;;;;10037:33:7::1;;;9987:83;9969:161;;;10104:14;;-1:-1:-1::0;;;10104:14:7::1;;;;;;;;;;;9969:161;10168:30;::::0;-1:-1:-1;;;10168:30:7;;10192:4:::1;10168:30;::::0;::::1;930:51:8::0;10150:15:7::1;::::0;-1:-1:-1;;;;;10168:15:7;::::1;::::0;::::1;::::0;903:18:8;;10168:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10150:48;;10213:7;10224:1;10213:12:::0;10209:37:::1;;10234:12;;-1:-1:-1::0;;;10234:12:7::1;;;;;;;;;;;10209:37;10267:39;-1:-1:-1::0;;;;;10267:18:7;::::1;10286:10;10298:7:::0;10267:18:::1;:39::i;:::-;10358:5;-1:-1:-1::0;;;;;10332:42:7::1;;10366:7;10332:42;;;;481:25:8::0;;469:2;454:18;;335:177;10332:42:7::1;;;;;;;;9958:424;9898:484:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7159:1208:7:-;2356:21:6;:19;:21::i;:::-;2910:8:7::1;::::0;:13;;:30:::1;;-1:-1:-1::0;2927:8:7::1;::::0;:13;2910:30:::1;2906:56;;;2949:13;;-1:-1:-1::0;;;2949:13:7::1;;;;;;;;;;;2906:56;7331:9:::2;7344:1;7331:14:::0;7327:39:::2;;7354:12;;-1:-1:-1::0;;;7354:12:7::2;;;;;;;;;;;7327:39;7381:12;7397:1;7381:17:::0;7377:42:::2;;7407:12;;-1:-1:-1::0;;;7407:12:7::2;;;;;;;;;;;7377:42;7468:23;7494:25;1016:3;7494:9:::0;:25:::2;:::i;:::-;7468:51;;7530:17;7568:8;;7550:15;:26;;;;:::i;:::-;7530:46;;7587:19;7640:15;1110:4;7610:8;;:26;;;;:::i;:::-;7609:46;;;;:::i;:::-;7587:68:::0;-1:-1:-1;7666:18:7::2;7687:23;7587:68:::0;7687:9;:23:::2;:::i;:::-;7666:44;;7772:12;7759:10;:25;7755:85;;;7808:20;;-1:-1:-1::0;;;7808:20:7::2;;;;;;;;;;;7755:85;7869:8;;7856:10;:21;7852:82;;;7901:21;;-1:-1:-1::0;;;7901:21:7::2;;;;;;;;;;;7852:82;7986:9;7974:8;;:21;;;;;;;:::i;:::-;;;;;;;;8018:10;8006:8;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8074:61:7::2;::::0;-1:-1:-1;;;;;;8074:6:7::2;:23;8098:10;8118:4;8125:9:::0;8074:23:::2;:61::i;:::-;8146:43;-1:-1:-1::0;;;;;8146:6:7::2;:19;8166:10;8178::::0;8146:19:::2;:43::i;:::-;8341:6;-1:-1:-1::0;;;;;8207:152:7::2;8311:6;-1:-1:-1::0;;;;;8207:152:7::2;8229:10;-1:-1:-1::0;;;;;8207:152:7::2;;8254:9;8278:10;8207:152;;;;;;691:25:8::0;;;747:2;732:18;;725:34;679:2;664:18;;517:248;8207:152:7::2;;;;;;;;7289:1078;;;;2398:20:6::0;1713:1;2924:7;:21;2744:208;3948:985:7;2356:21:6;:19;:21::i;:::-;4093:12:7;;;:28:::1;;-1:-1:-1::0;4109:12:7;;4093:28:::1;4089:80;;;4145:12;;-1:-1:-1::0;;;4145:12:7::1;;;;;;;;;;;4089:80;4257:17;4289:14;;4307:1;4289:19:::0;4285:265:::1;;4378:17;4388:7:::0;4378;:17:::1;:::i;:::-;4366:29;;4285:265;;;4530:8;::::0;4512:14:::1;::::0;4502:24:::1;::::0;:7;:24:::1;:::i;:::-;4501:37;;;;:::i;:::-;4489:49;;4285:265;4602:7;4590:8;;:19;;;;;;;:::i;:::-;;;;;;;;4632:7;4620:8;;:19;;;;;;;:::i;:::-;;;;;;;;4668:9;4650:14;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4723:59:7::1;::::0;-1:-1:-1;;;;;;4723:6:7::1;:23;4747:10;4767:4;4774:7:::0;4723:23:::1;:59::i;:::-;4793;-1:-1:-1::0;;;;;4793:6:7::1;:23;4817:10;4837:4;4844:7:::0;4793:23:::1;:59::i;:::-;4870:55;::::0;;3312:25:8;;;3368:2;3353:18;;3346:34;;;3396:18;;;3389:34;;;4885:10:7::1;::::0;4870:55:::1;::::0;3300:2:8;3285:18;4870:55:7::1;;;;;;;4051:882;2398:20:6::0;1713:1;2924:7;:21;2744:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;930:51:8::0;903:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2431:307:6:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:6;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1702:188:3:-;1829:53;;-1:-1:-1;;;;;3692:15:8;;;1829:53:3;;;3674:34:8;3744:15;;;3724:18;;;3717:43;3776:18;;;3769:34;;;1802:81:3;;1822:5;;1844:18;;;;;3609::8;;1829:53:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:3;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1412:43;;-1:-1:-1;;;;;4006:32:8;;;1412:43:3;;;3988:51:8;4055:18;;;4048:34;;;1385:71:3;;1405:5;;1427:14;;;;;3961:18:8;;1412:43:3;3814:274:8;1385:71:3;1303:160;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;930:51:8;903:18;;1901:40:0;770:217:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;4059:629:3:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:3;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:3;;-1:-1:-1;;;;;948:32:8;;4631:40:3;;;930:51:8;903:18;;4631:40:3;770:217:8;2705:151:4;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:4;;3394:4;3359:41;;;930:51:8;903:18;;3359:41:4;770:217:8;3303:108:4;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:4;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:4;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:4;;-1:-1:-1;;;;;948:32:8;;5121:24:4;;;930:51:8;903:18;;5121:24:4;770:217:8;5041:119:4;-1:-1:-1;5180:10:4;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:4;;;;;;;;;;;14:316:8;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:8;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:8;305:18;;;292:32;;14:316;-1:-1:-1;14:316:8:o;992:248::-;1060:6;1068;1121:2;1109:9;1100:7;1096:23;1092:32;1089:52;;;1137:1;1134;1127:12;1089:52;-1:-1:-1;;1160:23:8;;;1230:2;1215:18;;;1202:32;;-1:-1:-1;992:248:8:o;1245:139::-;-1:-1:-1;;;;;1328:31:8;;1318:42;;1308:70;;1374:1;1371;1364:12;1389:269;1462:6;1515:2;1503:9;1494:7;1490:23;1486:32;1483:52;;;1531:1;1528;1521:12;1483:52;1570:9;1557:23;1589:39;1622:5;1589:39;:::i;2131:127::-;2192:10;2187:3;2183:20;2180:1;2173:31;2223:4;2220:1;2213:15;2247:4;2244:1;2237:15;2263:168;2336:9;;;2367;;2384:15;;;2378:22;;2364:37;2354:71;;2405:18;;:::i;2436:125::-;2501:9;;;2522:10;;;2519:36;;;2535:18;;:::i;2566:217::-;2606:1;2632;2622:132;;2676:10;2671:3;2667:20;2664:1;2657:31;2711:4;2708:1;2701:15;2739:4;2736:1;2729:15;2622:132;-1:-1:-1;2768:9:8;;2566:217::o;2788:128::-;2855:9;;;2876:11;;;2873:37;;;2890:18;;:::i;2921:184::-;2991:6;3044:2;3032:9;3023:7;3019:23;3015:32;3012:52;;;3060:1;3057;3050:12;3012:52;-1:-1:-1;3083:16:8;;2921:184;-1:-1:-1;2921:184:8:o;4093:277::-;4160:6;4213:2;4201:9;4192:7;4188:23;4184:32;4181:52;;;4229:1;4226;4219:12;4181:52;4261:9;4255:16;4314:5;4307:13;4300:21;4293:5;4290:32;4280:60;;4336:1;4333;4326:12;4375:412;4504:3;4542:6;4536:13;4567:1;4577:129;4591:6;4588:1;4585:13;4577:129;;;4689:4;4673:14;;;4669:25;;4663:32;4650:11;;;4643:53;4606:12;4577:129;;;-1:-1:-1;4761:1:8;4725:16;;4750:13;;;-1:-1:-1;4725:16:8;4375:412;-1:-1:-1;4375:412:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "778000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"emergencyWithdraw(address)": "infinite",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getReserves()": "4452",
								"owner()": "2352",
								"renounceOwnership()": "infinite",
								"reserveA()": "2349",
								"reserveB()": "2328",
								"swapTokenAForTokenB(uint256,uint256)": "infinite",
								"swapTokenBForTokenA(uint256,uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"totalLiquidity()": "2306",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3237,
									"end": 3671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3237,
									"end": 3671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3328,
									"end": 3338,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 3328,
									"end": 3338,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3373,
									"end": 3400,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3400,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3400,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3400,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3431,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3373,
									"end": 3431,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3404,
									"end": 3431,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3404,
									"end": 3431,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3404,
									"end": 3431,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3431,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3373,
									"end": 3431,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3480,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3480,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 3369,
									"end": 3480,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3468,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3480,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 3369,
									"end": 3480,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3524,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3494,
									"end": 3524,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3507,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3494,
									"end": 3524,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3524,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3490,
									"end": 3580,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3490,
									"end": 3580,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BD969EB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3548,
									"end": 3568,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3490,
									"end": 3580,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3490,
									"end": 3580,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3592,
									"end": 3622,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3622,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3622,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3622,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3592,
									"end": 3622,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3633,
									"end": 3663,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3633,
									"end": 3663,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 3633,
									"end": 3663,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "947"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "944"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 793,
									"end": 10385,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220caba3b37e685607a38327a7ed8498bfa43dc52a92b8703e63d74730e2bb0661f64736f6c63430008140033",
									".code": [
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "6FF1C9BC"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "9CD441DA"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "DC5FA6C5"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "6FF1C9BC"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "76D5F25F"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "15770F92"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "15770F92"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "19E36F3B"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "56D9BE4C"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "5F64B55B"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "54D50D4"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "902F1AC"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "FC63D10"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 793,
											"end": 10385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9130,
											"end": 9660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9130,
											"end": 9660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 481,
											"end": 506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8713,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8713,
											"end": 8721,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8752,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8744,
											"end": 8752,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 691,
											"end": 716,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 747,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 732,
											"end": 750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 664,
											"end": 682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8606,
											"end": 8760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 517,
											"end": 765,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 948,
											"end": 980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 948,
											"end": 980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 930,
											"end": 981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1540,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5299,
											"end": 6855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5299,
											"end": 6855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1382,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 9898,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 9898,
											"end": 10382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7159,
											"end": 8367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7159,
											"end": 8367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3948,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3948,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1462,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9313,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9296,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9296,
											"end": 9334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9296,
											"end": 9334,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9296,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9349,
											"end": 9382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9382,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 9349,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9345,
											"end": 9404,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9345,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9345,
											"end": 9404,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6180F03F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9345,
											"end": 9404,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9345,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1016,
											"end": 1019,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 9443,
											"end": 9451,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 9443,
											"end": 9467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 9443,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9467,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9498,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 9516,
											"end": 9526,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9417,
											"end": 9467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9498,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 9498,
											"end": 9526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9498,
											"end": 9526,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 9498,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9478,
											"end": 9526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9537,
											"end": 9556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 9560,
											"end": 9569,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 9560,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9587,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 9560,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 9559,
											"end": 9606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 9559,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9537,
											"end": 9606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9629,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9537,
											"end": 9606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9638,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 9629,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9652,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9629,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9617,
											"end": 9652,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9660,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9130,
											"end": 9660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2910,
											"end": 2918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2927,
											"end": 2935,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6180F03F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5480,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5485,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5467,
											"end": 5506,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5467,
											"end": 5506,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5494,
											"end": 5506,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5467,
											"end": 5506,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5467,
											"end": 5506,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5533,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5517,
											"end": 5559,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5559,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5517,
											"end": 5559,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5690,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1016,
											"end": 1019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5690,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5665,
											"end": 5690,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5690,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5665,
											"end": 5690,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5690,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5690,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5718,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5739,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5736,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5721,
											"end": 5747,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5721,
											"end": 5747,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5747,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5826,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1114,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 5781,
											"end": 5789,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5781,
											"end": 5789,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5781,
											"end": 5807,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5781,
											"end": 5807,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5780,
											"end": 5826,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5780,
											"end": 5826,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5837,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5881,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5758,
											"end": 5826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5881,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5858,
											"end": 5881,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5881,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5858,
											"end": 5881,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5881,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5881,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5955,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5955,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 6011,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 6011,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5926,
											"end": 6011,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB2875C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5999,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 6011,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5926,
											"end": 6011,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6094,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6105,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6162,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6162,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6080,
											"end": 6162,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28B35F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6129,
											"end": 6150,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6162,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6080,
											"end": 6162,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6265,
											"end": 6294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1215,
											"end": 1219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 6265,
											"end": 6275,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6265,
											"end": 6294,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6294,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6265,
											"end": 6294,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 6264,
											"end": 6313,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6264,
											"end": 6313,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6242,
											"end": 6313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6338,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6328,
											"end": 6353,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6328,
											"end": 6353,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6367,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6422,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6422,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6324,
											"end": 6422,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "97C7F537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6410,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6422,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6324,
											"end": 6422,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6483,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6462,
											"end": 6470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6462,
											"end": 6483,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6462,
											"end": 6483,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6516,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6502,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6494,
											"end": 6502,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6494,
											"end": 6516,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6494,
											"end": 6516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6516,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6562,
											"end": 6623,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6562,
											"end": 6568,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": 6562,
											"end": 6585,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6586,
											"end": 6596,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6610,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6562,
											"end": 6623,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6623,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6562,
											"end": 6623,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6677,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6634,
											"end": 6640,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": 6634,
											"end": 6653,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6664,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6653,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6634,
											"end": 6677,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6677,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 6634,
											"end": 6677,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 6835,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6805,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6727,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "DBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850"
										},
										{
											"begin": 6742,
											"end": 6751,
											"modifierDepth": 2,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6776,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 747,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 732,
											"end": 750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 679,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 664,
											"end": 682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 765,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6847,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 6855,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 6855,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 6855,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 6855,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 6855,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 6855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9995,
											"end": 10000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10020,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10020,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10069,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10037,
											"end": 10070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10045,
											"end": 10050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10037,
											"end": 10070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10070,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10070,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 9987,
											"end": 10070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9969,
											"end": 10130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1AB6DC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10118,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9969,
											"end": 10130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10198,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10168,
											"end": 10198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10192,
											"end": 10196,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10168,
											"end": 10198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10150,
											"end": 10165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10168,
											"end": 10183,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 10168,
											"end": 10183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10198,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 10168,
											"end": 10198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 10168,
											"end": 10198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10213,
											"end": 10220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10224,
											"end": 10225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 10209,
											"end": 10246,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10234,
											"end": 10246,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10209,
											"end": 10246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 10209,
											"end": 10246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10285,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10286,
											"end": 10296,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10298,
											"end": 10305,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 10267,
											"end": 10306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 10267,
											"end": 10306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10358,
											"end": 10363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 10366,
											"end": 10373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 481,
											"end": 506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 481,
											"end": 506,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 454,
											"end": 472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 335,
											"end": 512,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10374,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 10382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7159,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2910,
											"end": 2918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2923,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2927,
											"end": 2935,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 2940,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2910,
											"end": 2940,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6180F03F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2906,
											"end": 2962,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7340,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7345,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7345,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7366,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7327,
											"end": 7366,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7366,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7366,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 7327,
											"end": 7366,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7393,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7398,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 7377,
											"end": 7419,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7419,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 7377,
											"end": 7419,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1016,
											"end": 1019,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7494,
											"end": 7519,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7519,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 7494,
											"end": 7519,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7519,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7519,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7547,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7576,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7568,
											"end": 7576,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7565,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7550,
											"end": 7576,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7550,
											"end": 7576,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7576,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7576,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7655,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1114,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 7610,
											"end": 7618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7610,
											"end": 7618,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7610,
											"end": 7636,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 7610,
											"end": 7636,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7609,
											"end": 7655,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7609,
											"end": 7655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7587,
											"end": 7655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7666,
											"end": 7684,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7587,
											"end": 7655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7687,
											"end": 7696,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7687,
											"end": 7710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 7687,
											"end": 7710,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7687,
											"end": 7710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 7687,
											"end": 7710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7710,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7710,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7784,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7769,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7784,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7840,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7755,
											"end": 7840,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB2875C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7828,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7840,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 7755,
											"end": 7840,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7877,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7869,
											"end": 7877,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 7866,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 7877,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7934,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7852,
											"end": 7934,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "28B35F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7922,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7852,
											"end": 7934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 7995,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7974,
											"end": 7982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 7974,
											"end": 7995,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8018,
											"end": 8028,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8006,
											"end": 8014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8006,
											"end": 8028,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 8006,
											"end": 8028,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8028,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8074,
											"end": 8135,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8074,
											"end": 8135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8074,
											"end": 8080,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": 8074,
											"end": 8097,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8108,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8122,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 8074,
											"end": 8135,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8135,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8074,
											"end": 8135,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8189,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8152,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": 8146,
											"end": 8165,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8176,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8188,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8146,
											"end": 8189,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8146,
											"end": 8189,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8146,
											"end": 8189,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8347,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8311,
											"end": 8317,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8239,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "DBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850"
										},
										{
											"begin": 8254,
											"end": 8263,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8288,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 691,
											"end": 716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 691,
											"end": 716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 747,
											"end": 749,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 732,
											"end": 750,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 759,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 679,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 664,
											"end": 682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 664,
											"end": 682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 765,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8359,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 8367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 8367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 8367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 8367,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3948,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 4093,
											"end": 4121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4169,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4089,
											"end": 4169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4157,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4089,
											"end": 4169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4308,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4388,
											"end": 4395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4378,
											"end": 4395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4378,
											"end": 4395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4366,
											"end": 4395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4530,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4530,
											"end": 4538,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4512,
											"end": 4526,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4502,
											"end": 4526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 4502,
											"end": 4526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 4502,
											"end": 4526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4501,
											"end": 4538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 4501,
											"end": 4538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4285,
											"end": 4550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4602,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4590,
											"end": 4598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4590,
											"end": 4609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4620,
											"end": 4628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4620,
											"end": 4639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4620,
											"end": 4639,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4650,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4650,
											"end": 4677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4650,
											"end": 4677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4650,
											"end": 4677,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4723,
											"end": 4782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "944"
										},
										{
											"begin": 4723,
											"end": 4746,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4757,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4771,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4774,
											"end": 4781,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4723,
											"end": 4782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 4723,
											"end": 4782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "947"
										},
										{
											"begin": 4793,
											"end": 4816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4827,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4841,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4851,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 4793,
											"end": 4852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4793,
											"end": 4852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4925,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3312,
											"end": 3337,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3337,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3346,
											"end": 3380,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3346,
											"end": 3380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3346,
											"end": 3380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4895,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 4870,
											"end": 4925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3302,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4925,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4051,
											"end": 4933,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3707,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3707,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3760,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3609,
											"end": 3627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4039,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 3979,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3961,
											"end": 3979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3814,
											"end": 4088,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 770,
											"end": 987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 980,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 948,
											"end": 980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 770,
											"end": 987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 770,
											"end": 987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 948,
											"end": 980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 930,
											"end": 981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 770,
											"end": 987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14,
											"end": 330,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 91,
											"end": 97,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 107,
											"end": 113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 162,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 148,
											"end": 157,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 139,
											"end": 146,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 135,
											"end": 158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 131,
											"end": 163,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 128,
											"end": 180,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 128,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 176,
											"end": 177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 166,
											"end": 178,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 128,
											"end": 180,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 199,
											"end": 222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 199,
											"end": 222,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 199,
											"end": 222,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 269,
											"end": 271,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 254,
											"end": 272,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 254,
											"end": 272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 241,
											"end": 273,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 241,
											"end": 273,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 320,
											"end": 322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 305,
											"end": 323,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 305,
											"end": 323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 324,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1240,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 992,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1123,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1107,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1096,
											"end": 1119,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1141,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1089,
											"end": 1141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1139,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1141,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1089,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1183,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1183,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 992,
											"end": 1240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1384,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1245,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1359,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1360,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1308,
											"end": 1378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1658,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1389,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1513,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1518,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1535,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1483,
											"end": 1535,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1483,
											"end": 1535,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1483,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1622,
											"end": 1627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1589,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2258,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2131,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2192,
											"end": 2202,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2183,
											"end": 2203,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2223,
											"end": 2227,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2213,
											"end": 2228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2251,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2431,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2263,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2376,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2399,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2384,
											"end": 2399,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2400,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2401,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2405,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2405,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2561,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2436,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2519,
											"end": 2555,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2535,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2783,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2566,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2622,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2671,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2716,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2622,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2566,
											"end": 2783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2916,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 2788,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2887,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2873,
											"end": 2910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2890,
											"end": 2908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3105,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2921,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3046,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 3105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4093,
											"end": 4370,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4093,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4199,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4184,
											"end": 4216,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4271,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4314,
											"end": 4319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4320,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4322,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4280,
											"end": 4340,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4333,
											"end": 4334,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 4375,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4585,
											"end": 4598,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4669,
											"end": 4694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4669,
											"end": 4694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4650,
											"end": 4661,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4650,
											"end": 4661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4650,
											"end": 4661,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4643,
											"end": 4696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4577,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4741,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4763,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4375,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/dexRishabh.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getReserves()": "0902f1ac",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swapTokenAForTokenB(uint256,uint256)": "56d9be4c",
							"swapTokenBForTokenA(uint256,uint256)": "76d5f25f",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"totalLiquidity()": "15770f92",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveSlippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientReserve\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoLiquidity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenAForTokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenBForTokenA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Production-Ready DEX\",\"details\":\"Implements constant product formula (x*y=k) with 0.3% trading fee.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"EmergencyWithdraw(address,uint256)\":{\"params\":{\"amount\":\"Amount withdrawn\",\"token\":\"Token withdrawn\"}},\"LiquidityAdded(address,uint256,uint256,uint256)\":{\"params\":{\"amountA\":\"Amount of Token A added\",\"amountB\":\"Amount of Token B added\",\"liquidity\":\"Liquidity shares minted\",\"provider\":\"Address providing liquidity\"}},\"Swapped(address,uint256,uint256,address,address)\":{\"params\":{\"amountIn\":\"Amount of input tokens\",\"amountOut\":\"Amount of output tokens received\",\"sender\":\"Address initiating the swap\",\"tokenIn\":\"Address of input token\",\"tokenOut\":\"Address of output token\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"details\":\"Follows Checks-Effects-Interactions patternUses SafeERC20 for secure token transfers\",\"params\":{\"amountA\":\"Amount of Token A to add\",\"amountB\":\"Amount of Token B to add\"}},\"constructor\":{\"details\":\"Validates addresses and ensures tokens are different\",\"params\":{\"tokenAAddress\":\"Address of first token\",\"tokenBAddress\":\"Address of second token\"}},\"emergencyWithdraw(address)\":{\"details\":\"Only allows withdrawal of tokenA or tokenBShould only be used in emergency situations\",\"params\":{\"token\":\"Token to withdraw\"}},\"getAmountOut(uint256,uint256,uint256)\":{\"details\":\"Useful for frontends to calculate expected output before swapping\",\"params\":{\"amountIn\":\"Input token amount\",\"reserveIn\":\"Reserve of input token\",\"reserveOut\":\"Reserve of output token\"},\"returns\":{\"amountOut\":\"Expected output amount\"}},\"getReserves()\":{\"details\":\"View function for external integrations\",\"returns\":{\"_reserveA\":\"Current reserve of Token A\",\"_reserveB\":\"Current reserve of Token B\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swapTokenAForTokenB(uint256,uint256)\":{\"details\":\"Implements Uniswap V2 constant product formula with 0.3% feePrevents MEV attacks through slippage checks\",\"params\":{\"amountInA\":\"Exact amount of Token A being sent\",\"amountOutMin\":\"Minimum amount of Token B to accept (slippage protection)\"}},\"swapTokenBForTokenA(uint256,uint256)\":{\"details\":\"Mirror function of swapTokenAForTokenB for reverse swaps\",\"params\":{\"amountInB\":\"Exact amount of Token B being sent\",\"amountOutMin\":\"Minimum amount of Token A to accept (slippage protection)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MyHyperOptimizedDEX\",\"version\":1},\"userdoc\":{\"events\":{\"EmergencyWithdraw(address,uint256)\":{\"notice\":\"Emitted when emergency withdrawal occurs\"},\"LiquidityAdded(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is added\"},\"Swapped(address,uint256,uint256,address,address)\":{\"notice\":\"Emitted when a swap occurs\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256,uint256)\":{\"notice\":\"Adds liquidity to the pool\"},\"constructor\":{\"notice\":\"Initializes the DEX with two ERC20 tokens\"},\"emergencyWithdraw(address)\":{\"notice\":\"Emergency withdrawal of tokens (owner only)\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates output amount for a given input (view function)\"},\"getReserves()\":{\"notice\":\"Gets current reserves for both tokens\"},\"reserveA()\":{\"notice\":\"Reserve of Token A in the pool\"},\"reserveB()\":{\"notice\":\"Reserve of Token B in the pool\"},\"swapTokenAForTokenB(uint256,uint256)\":{\"notice\":\"Swaps Token A for Token B with MEV protection\"},\"swapTokenBForTokenA(uint256,uint256)\":{\"notice\":\"Swaps Token B for Token A with MEV protection\"},\"totalLiquidity()\":{\"notice\":\"Total liquidity shares (for future LP token implementation)\"}},\"notice\":\"A production-grade, gas-optimized, and hardened AMM with MEV protection.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/dexRishabh.sol\":\"MyHyperOptimizedDEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contract/dexRishabh.sol\":{\"keccak256\":\"0xc7f43cfb6517138041f70c4d16fafc090c55832d354ca82a5e35aeaca0b1280a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f1ba91779715b2cbdddf9cb08fd6a0c1273e1684adc5e43c008f352b11ebcc0\",\"dweb:/ipfs/QmchCPoPEu4r3fwokPERojXcvitL3em7bnT8Js5zuaV4gx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "contract/dexRishabh.sol:MyHyperOptimizedDEX",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contract/dexRishabh.sol:MyHyperOptimizedDEX",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 950,
								"contract": "contract/dexRishabh.sol:MyHyperOptimizedDEX",
								"label": "reserveA",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contract/dexRishabh.sol:MyHyperOptimizedDEX",
								"label": "reserveB",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 956,
								"contract": "contract/dexRishabh.sol:MyHyperOptimizedDEX",
								"label": "totalLiquidity",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EmergencyWithdraw(address,uint256)": {
								"notice": "Emitted when emergency withdrawal occurs"
							},
							"LiquidityAdded(address,uint256,uint256,uint256)": {
								"notice": "Emitted when liquidity is added"
							},
							"Swapped(address,uint256,uint256,address,address)": {
								"notice": "Emitted when a swap occurs"
							}
						},
						"kind": "user",
						"methods": {
							"addLiquidity(uint256,uint256)": {
								"notice": "Adds liquidity to the pool"
							},
							"constructor": {
								"notice": "Initializes the DEX with two ERC20 tokens"
							},
							"emergencyWithdraw(address)": {
								"notice": "Emergency withdrawal of tokens (owner only)"
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates output amount for a given input (view function)"
							},
							"getReserves()": {
								"notice": "Gets current reserves for both tokens"
							},
							"reserveA()": {
								"notice": "Reserve of Token A in the pool"
							},
							"reserveB()": {
								"notice": "Reserve of Token B in the pool"
							},
							"swapTokenAForTokenB(uint256,uint256)": {
								"notice": "Swaps Token A for Token B with MEV protection"
							},
							"swapTokenBForTokenA(uint256,uint256)": {
								"notice": "Swaps Token B for Token A with MEV protection"
							},
							"totalLiquidity()": {
								"notice": "Total liquidity shares (for future LP token implementation)"
							}
						},
						"notice": "A production-grade, gas-optimized, and hardened AMM with MEV protection.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							826
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 827,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 826,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								826
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 826,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 826,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 827,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							895
						]
					},
					"id": 896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 829,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 832,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1674:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 835,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1720:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 837,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1763:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 836,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 840,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:6"
									},
									"src": "1850:37:6"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1907:38:6",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "1917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "1927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:6"
											}
										]
									},
									"id": 848,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:6"
									},
									"scope": 895,
									"src": "1893:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "2346:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "2356:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:6"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 855,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2398:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 859,
									"name": "nonReentrant",
									"nameLocation": "2331:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:6"
									},
									"src": "2322:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2470:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2558:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 863,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "2554:86:6",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "2578:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 865,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "2599:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "2592:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:6"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 895,
									"src": "2431:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2782:170:6",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2924:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "2934:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:6"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 895,
									"src": "2744:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "3195:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 890,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3223:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 888,
												"id": 892,
												"nodeType": "Return",
												"src": "3205:25:6"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:6"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "3189:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:6"
									},
									"scope": 895,
									"src": "3131:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 896,
							"src": "886:2353:6",
							"usedErrors": [
								840
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:6"
				},
				"id": 6
			},
			"contract/dexRishabh.sol": {
				"ast": {
					"absolutePath": "contract/dexRishabh.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							826
						],
						"ExcessiveSlippage": [
							915
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"IdenticalAddresses": [
							905
						],
						"InsufficientOutput": [
							911
						],
						"InsufficientReserve": [
							917
						],
						"InvalidToken": [
							913
						],
						"MyHyperOptimizedDEX": [
							1535
						],
						"NoLiquidity": [
							909
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							895
						],
						"SafeERC20": [
							551
						],
						"ZeroAddress": [
							903
						],
						"ZeroAmount": [
							907
						]
					},
					"id": 1536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 897,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
							"id": 898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 896,
							"src": "60:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 226,
							"src": "127:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"id": 900,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 148,
							"src": "191:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
							"id": 901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 552,
							"src": "251:71:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "d92e233d",
							"id": 903,
							"name": "ZeroAddress",
							"nameLocation": "358:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 902,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "369:2:7"
							},
							"src": "352:20:7"
						},
						{
							"errorSelector": "bd969eb0",
							"id": 905,
							"name": "IdenticalAddresses",
							"nameLocation": "380:18:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 904,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "398:2:7"
							},
							"src": "374:27:7"
						},
						{
							"errorSelector": "1f2a2005",
							"id": 907,
							"name": "ZeroAmount",
							"nameLocation": "409:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 906,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "419:2:7"
							},
							"src": "403:19:7"
						},
						{
							"errorSelector": "c301e07e",
							"id": 909,
							"name": "NoLiquidity",
							"nameLocation": "430:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 908,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "441:2:7"
							},
							"src": "424:20:7"
						},
						{
							"errorSelector": "bb2875c3",
							"id": 911,
							"name": "InsufficientOutput",
							"nameLocation": "452:18:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 910,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "470:2:7"
							},
							"src": "446:27:7"
						},
						{
							"errorSelector": "c1ab6dc1",
							"id": 913,
							"name": "InvalidToken",
							"nameLocation": "481:12:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 912,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "493:2:7"
							},
							"src": "475:21:7"
						},
						{
							"errorSelector": "97c7f537",
							"id": 915,
							"name": "ExcessiveSlippage",
							"nameLocation": "504:17:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 914,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "521:2:7"
							},
							"src": "498:26:7"
						},
						{
							"errorSelector": "28b35f21",
							"id": 917,
							"name": "InsufficientReserve",
							"nameLocation": "532:19:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 916,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "551:2:7"
							},
							"src": "526:28:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 919,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"825:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 895,
										"src": "825:15:7"
									},
									"id": 920,
									"nodeType": "InheritanceSpecifier",
									"src": "825:15:7"
								},
								{
									"baseName": {
										"id": 921,
										"name": "Ownable",
										"nameLocations": [
											"842:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "842:7:7"
									},
									"id": 922,
									"nodeType": "InheritanceSpecifier",
									"src": "842:7:7"
								}
							],
							"canonicalName": "MyHyperOptimizedDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "558:233:7",
								"text": " @title MyHyperOptimizedDEX\n @author Production-Ready DEX\n @notice A production-grade, gas-optimized, and hardened AMM with MEV protection.\n @dev Implements constant product formula (x*y=k) with 0.3% trading fee."
							},
							"fullyImplemented": true,
							"id": 1535,
							"linearizedBaseContracts": [
								1535,
								147,
								826,
								895
							],
							"name": "MyHyperOptimizedDEX",
							"nameLocation": "802:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 926,
									"libraryName": {
										"id": 923,
										"name": "SafeERC20",
										"nameLocations": [
											"863:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "863:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:7",
									"typeName": {
										"id": 925,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 924,
											"name": "IERC20",
											"nameLocations": [
												"877:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "877:6:7"
										},
										"referencedDeclaration": 225,
										"src": "877:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "918:51:7",
										"text": "@notice Trading fee numerator (0.3% = 997/1000)"
									},
									"id": 930,
									"mutability": "constant",
									"name": "FEE_NUMERATOR",
									"nameLocation": "1000:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "975:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 928,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "975:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "393937",
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1016:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_997_by_1",
											"typeString": "int_const 997"
										},
										"value": "997"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "1026:35:7",
										"text": "@notice Trading fee denominator"
									},
									"id": 934,
									"mutability": "constant",
									"name": "FEE_DENOMINATOR",
									"nameLocation": "1092:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1067:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1067:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1110:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1121:44:7",
										"text": "@notice Maximum slippage tolerance (10%)"
									},
									"id": 938,
									"mutability": "constant",
									"name": "MAX_SLIPPAGE_BPS",
									"nameLocation": "1196:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1171:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 936,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 937,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1215:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 941,
									"mutability": "constant",
									"name": "BPS_DENOMINATOR",
									"nameLocation": "1251:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1226:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 939,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1226:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 940,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1269:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 944,
									"mutability": "immutable",
									"name": "tokenA",
									"nameLocation": "1339:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1315:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 943,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 942,
											"name": "IERC20",
											"nameLocations": [
												"1315:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1315:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1315:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 947,
									"mutability": "immutable",
									"name": "tokenB",
									"nameLocation": "1376:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1352:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 946,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 945,
											"name": "IERC20",
											"nameLocations": [
												"1352:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1352:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1352:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1391:42:7",
										"text": "@notice Reserve of Token A in the pool"
									},
									"functionSelector": "dc5fa6c5",
									"id": 950,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "1454:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1439:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1439:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1469:42:7",
										"text": "@notice Reserve of Token B in the pool"
									},
									"functionSelector": "19e36f3b",
									"id": 953,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "1532:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1517:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1517:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1553:71:7",
										"text": "@notice Total liquidity shares (for future LP token implementation)"
									},
									"functionSelector": "15770f92",
									"id": 956,
									"mutability": "mutable",
									"name": "totalLiquidity",
									"nameLocation": "1645:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "1630:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1691:292:7",
										"text": "@notice Emitted when a swap occurs\n @param sender Address initiating the swap\n @param amountIn Amount of input tokens\n @param amountOut Amount of output tokens received\n @param tokenIn Address of input token\n @param tokenOut Address of output token"
									},
									"eventSelector": "dbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850",
									"id": 969,
									"name": "Swapped",
									"nameLocation": "1995:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2029:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2013:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2054:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2046:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2081:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2073:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "2117:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2101:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "2151:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2135:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:164:7"
									},
									"src": "1989:178:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "2175:242:7",
										"text": "@notice Emitted when liquidity is added\n @param provider Address providing liquidity\n @param amountA Amount of Token A added\n @param amountB Amount of Token B added\n @param liquidity Liquidity shares minted"
									},
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 980,
									"name": "LiquidityAdded",
									"nameLocation": "2429:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "2470:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2454:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2497:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2489:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2523:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2515:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2549:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2541:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:122:7"
									},
									"src": "2423:143:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "2574:130:7",
										"text": "@notice Emitted when emergency withdrawal occurs\n @param token Token withdrawn\n @param amount Amount withdrawn"
									},
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 987,
									"name": "EmergencyWithdraw",
									"nameLocation": "2716:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2750:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2734:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2757:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:39:7"
									},
									"src": "2710:63:7"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "2895:87:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 990,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "2910:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2922:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2910:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2927:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2939:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2927:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2910:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "2906:56:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 997,
															"name": "NoLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "2949:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2949:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 999,
													"nodeType": "RevertStatement",
													"src": "2942:20:7"
												}
											},
											{
												"id": 1001,
												"nodeType": "PlaceholderStatement",
												"src": "2973:1:7"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "2807:58:7",
										"text": "@dev Ensures pool has liquidity before swap operations"
									},
									"id": 1003,
									"name": "hasLiquidity",
									"nameLocation": "2880:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:2:7"
									},
									"src": "2871:111:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "3358:313:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "tokenAAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "3373:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3398:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3390:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1018,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3390:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3390:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3373:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1023,
															"name": "tokenBAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "3404:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3429:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3421:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1024,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3421:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3421:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3404:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3373:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"nodeType": "IfStatement",
												"src": "3369:111:7",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "3433:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1030,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "3455:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3455:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1032,
															"nodeType": "RevertStatement",
															"src": "3448:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1035,
														"name": "tokenAAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "3494:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1036,
														"name": "tokenBAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3511:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3494:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "3490:90:7",
												"trueBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "3526:54:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1038,
																	"name": "IdenticalAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "3548:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3548:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1040,
															"nodeType": "RevertStatement",
															"src": "3541:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3592:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1045,
																"name": "tokenAAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "3608:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1044,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3601:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3601:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3592:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "3592:30:7"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1049,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3633:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1051,
																"name": "tokenBAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "3649:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1050,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3642:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3642:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "3633:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "3633:30:7"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "2990:241:7",
										"text": " @notice Initializes the DEX with two ERC20 tokens\n @param tokenAAddress Address of first token\n @param tokenBAddress Address of second token\n @dev Validates addresses and ensures tokens are different"
									},
									"id": 1056,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1011,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3328:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3332:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3328:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1013,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1010,
												"name": "Ownable",
												"nameLocations": [
													"3320:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3320:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3320:19:7"
										},
										{
											"arguments": [],
											"id": 1015,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1014,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"3340:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 895,
												"src": "3340:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3340:17:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "tokenAAddress",
												"nameLocation": "3267:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3259:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "tokenBAddress",
												"nameLocation": "3299:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3291:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3248:71:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3358:0:7"
									},
									"scope": 1535,
									"src": "3237:434:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4051:882:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4093:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4104:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4093:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1069,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4120:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4109:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4093:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "4089:80:7",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "4123:46:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1073,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "4145:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4145:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1075,
															"nodeType": "RevertStatement",
															"src": "4138:19:7"
														}
													]
												}
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "4265:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4257:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1080,
												"nodeType": "VariableDeclarationStatement",
												"src": "4257:17:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4289:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4307:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4289:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "4413:137:7",
													"statements": [
														{
															"expression": {
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1091,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "4489:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1092,
																					"name": "amountA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1059,
																					"src": "4502:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1093,
																					"name": "totalLiquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "4512:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4502:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4501:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1096,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "4530:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4501:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4489:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ExpressionStatement",
															"src": "4489:49:7"
														}
													]
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "4285:265:7",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "4310:97:7",
													"statements": [
														{
															"expression": {
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1084,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "4366:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "amountA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "4378:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1086,
																		"name": "amountB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "4388:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4378:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4366:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "4366:29:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "4590:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1103,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "4602:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4590:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "4590:19:7"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4620:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1107,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "4632:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "4620:19:7"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1110,
														"name": "totalLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "4650:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1111,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4668:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4650:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "4650:27:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4747:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4751:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4747:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1121,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4767:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4759:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4759:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4759:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4774:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1114,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "4723:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4730:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4723:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "4723:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4817:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4821:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4817:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1133,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4837:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4829:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4829:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4829:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1135,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4844:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1126,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4793:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4800:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "4793:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "4793:59:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4885:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4889:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4885:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4897:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1142,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4906:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1143,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "4915:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1138,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4870:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "EmitStatement",
												"src": "4865:60:7"
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "3679:263:7",
										"text": " @notice Adds liquidity to the pool\n @param amountA Amount of Token A to add\n @param amountB Amount of Token B to add\n @dev Follows Checks-Effects-Interactions pattern\n @dev Uses SafeERC20 for secure token transfers"
									},
									"functionSelector": "9cd441da",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1063,
												"name": "nonReentrant",
												"nameLocations": [
													"4038:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "4038:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4038:12:7"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "3957:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3988:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3980:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "4014:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4006:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:59:7"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:7"
									},
									"scope": 1535,
									"src": "3948:985:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "5429:1426:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "5471:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5484:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5471:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1165,
												"nodeType": "IfStatement",
												"src": "5467:39:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1162,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5494:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5494:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1164,
													"nodeType": "RevertStatement",
													"src": "5487:19:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1166,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "5521:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5537:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5521:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "5517:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1169,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5547:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5547:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1171,
													"nodeType": "RevertStatement",
													"src": "5540:19:7"
												}
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "5647:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "5639:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5639:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "5665:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1176,
														"name": "FEE_NUMERATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "5677:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5665:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5639:51:7"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "5709:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "5701:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5701:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1181,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "5721:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1182,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5739:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5721:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5701:46:7"
											},
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "5766:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "5758:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5758:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1187,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5781:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1188,
																	"name": "FEE_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "5792:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5781:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1190,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5780:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1191,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "5811:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5780:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:68:7"
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "amountOutB",
														"nameLocation": "5845:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "5837:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5837:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1199,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1196,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5858:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1197,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5870:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5858:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5837:44:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1200,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "5930:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1201,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "5943:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5930:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "5926:85:7",
												"trueBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "5957:54:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1203,
																	"name": "InsufficientOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "5979:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5979:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1205,
															"nodeType": "RevertStatement",
															"src": "5972:27:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1208,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "6084:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1209,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "6097:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6084:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "6080:82:7",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "6107:55:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1211,
																	"name": "InsufficientReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "6129:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6129:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "6122:28:7"
														}
													]
												}
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "maxSlippage",
														"nameLocation": "6250:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "6242:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1218,
																	"name": "amountOutB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "6265:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1219,
																	"name": "MAX_SLIPPAGE_BPS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "6278:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6265:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1221,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6264:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1222,
														"name": "BPS_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "6298:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6264:49:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6242:71:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1225,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6328:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1226,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "6341:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6328:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1228,
														"name": "maxSlippage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "6356:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6328:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "6324:98:7",
												"trueBody": {
													"id": 1233,
													"nodeType": "Block",
													"src": "6369:53:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1230,
																	"name": "ExcessiveSlippage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6391:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6391:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1232,
															"nodeType": "RevertStatement",
															"src": "6384:26:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "6462:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1236,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "6474:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6462:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "6462:21:7"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "6494:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1240,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "6506:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6494:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "6494:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6586:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6590:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6586:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1250,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6606:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6598:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6598:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6598:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "6613:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1243,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "6562:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6569:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "6562:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6562:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "6562:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6654:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6658:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6654:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6666:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1255,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "6634:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6641:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "6634:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6634:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "6634:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1264,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6717:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6721:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6717:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "6742:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1267,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "6766:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1270,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "6799:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1268,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6791:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1274,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "6829:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6821:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1272,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6821:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6821:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1263,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "6695:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6695:152:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "EmitStatement",
												"src": "6690:157:7"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "4941:352:7",
										"text": " @notice Swaps Token A for Token B with MEV protection\n @param amountInA Exact amount of Token A being sent\n @param amountOutMin Minimum amount of Token B to accept (slippage protection)\n @dev Implements Uniswap V2 constant product formula with 0.3% fee\n @dev Prevents MEV attacks through slippage checks"
									},
									"functionSelector": "56d9be4c",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1154,
												"name": "nonReentrant",
												"nameLocations": [
													"5403:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "5403:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5403:12:7"
										},
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "hasLiquidity",
												"nameLocations": [
													"5416:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1003,
												"src": "5416:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5416:12:7"
										}
									],
									"name": "swapTokenAForTokenB",
									"nameLocation": "5308:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "amountInA",
												"nameLocation": "5346:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "5338:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5374:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "5366:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:66:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5429:0:7"
									},
									"scope": 1535,
									"src": "5299:1556:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "7289:1078:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "amountInB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "7331:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7344:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7331:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "7327:39:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1294,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7354:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7354:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1296,
													"nodeType": "RevertStatement",
													"src": "7347:19:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "7381:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7397:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7381:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1304,
												"nodeType": "IfStatement",
												"src": "7377:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1301,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7407:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7407:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1303,
													"nodeType": "RevertStatement",
													"src": "7400:19:7"
												}
											},
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "7476:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "7468:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7468:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1307,
														"name": "amountInB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "7494:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1308,
														"name": "FEE_NUMERATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "7506:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7494:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7468:51:7"
											},
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7538:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "7530:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7530:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "7550:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1314,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "7568:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7550:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7530:46:7"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7595:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "7587:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7587:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1319,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "7610:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1320,
																	"name": "FEE_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "7621:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7610:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1322,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7609:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1323,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "7640:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7609:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7587:68:7"
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "amountOutA",
														"nameLocation": "7674:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "7666:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7666:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1331,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1328,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "7687:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1329,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "7699:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7687:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7666:44:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1332,
														"name": "amountOutA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "7759:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1333,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "7772:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7759:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "7755:85:7",
												"trueBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "7786:54:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1335,
																	"name": "InsufficientOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "7808:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7808:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "RevertStatement",
															"src": "7801:27:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "amountOutA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "7856:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1341,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "7869:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7856:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1347,
												"nodeType": "IfStatement",
												"src": "7852:82:7",
												"trueBody": {
													"id": 1346,
													"nodeType": "Block",
													"src": "7879:55:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1343,
																	"name": "InsufficientReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "7901:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7901:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1345,
															"nodeType": "RevertStatement",
															"src": "7894:28:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "7974:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1349,
														"name": "amountInB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "7986:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7974:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "7974:21:7"
											},
											{
												"expression": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1352,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "8006:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1353,
														"name": "amountOutA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "8018:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "8006:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8098:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8102:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8098:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8118:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8110:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8110:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8110:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1365,
															"name": "amountInB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "8125:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1356,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "8074:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8081:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "8074:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "8074:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8166:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8170:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8166:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "amountOutA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "8178:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1368,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "8146:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8153:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8146:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8146:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "8146:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1377,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8229:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8233:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8229:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "amountInB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "8254:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1380,
															"name": "amountOutA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "8278:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1383,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "8311:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8303:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1381,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8303:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8303:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1387,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "8341:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8333:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8333:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8333:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1376,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "8207:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8207:152:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "8202:157:7"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "6863:290:7",
										"text": " @notice Swaps Token B for Token A with MEV protection\n @param amountInB Exact amount of Token B being sent\n @param amountOutMin Minimum amount of Token A to accept (slippage protection)\n @dev Mirror function of swapTokenAForTokenB for reverse swaps"
									},
									"functionSelector": "76d5f25f",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1286,
												"name": "nonReentrant",
												"nameLocations": [
													"7263:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "7263:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7263:12:7"
										},
										{
											"id": 1289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1288,
												"name": "hasLiquidity",
												"nameLocations": [
													"7276:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1003,
												"src": "7276:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7276:12:7"
										}
									],
									"name": "swapTokenBForTokenA",
									"nameLocation": "7168:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "amountInB",
												"nameLocation": "7206:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "7198:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7198:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "7234:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "7226:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7187:66:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7289:0:7"
									},
									"scope": 1535,
									"src": "7159:1208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "8690:70:7",
										"statements": [
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1400,
														"name": "_reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "8701:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1401,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "8713:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8701:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "8701:20:7"
											},
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1404,
														"name": "_reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "8732:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "8744:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8732:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "8732:20:7"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "8375:225:7",
										"text": " @notice Gets current reserves for both tokens\n @return _reserveA Current reserve of Token A\n @return _reserveB Current reserve of Token B\n @dev View function for external integrations"
									},
									"functionSelector": "0902f1ac",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "8615:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8626:2:7"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_reserveA",
												"nameLocation": "8660:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "8652:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_reserveB",
												"nameLocation": "8679:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "8671:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8651:38:7"
									},
									"scope": 1535,
									"src": "8606:154:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "9285:375:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1421,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "9300:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9312:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9300:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1427,
												"nodeType": "IfStatement",
												"src": "9296:38:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1424,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "9322:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9322:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1426,
													"nodeType": "RevertStatement",
													"src": "9315:19:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1428,
															"name": "reserveIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "9349:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9362:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9349:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1431,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "9367:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9381:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9367:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9349:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "9345:59:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1435,
															"name": "NoLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "9391:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9391:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1437,
													"nodeType": "RevertStatement",
													"src": "9384:20:7"
												}
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "9425:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "9417:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9417:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "9443:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1442,
														"name": "FEE_NUMERATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "9454:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9443:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9417:50:7"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "9486:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "9478:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "9498:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1448,
														"name": "reserveOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "9516:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9498:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9478:48:7"
											},
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "9545:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "9537:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9537:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1453,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1414,
																	"src": "9560:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1454,
																	"name": "FEE_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "9572:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9560:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1456,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9559:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1457,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "9591:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9559:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9537:69:7"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1460,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "9617:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1461,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "9629:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1462,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "9641:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9629:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9617:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "9617:35:7"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "8768:356:7",
										"text": " @notice Calculates output amount for a given input (view function)\n @param amountIn Input token amount\n @param reserveIn Reserve of input token\n @param reserveOut Reserve of output token\n @return amountOut Expected output amount\n @dev Useful for frontends to calculate expected output before swapping"
									},
									"functionSelector": "054d50d4",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "9139:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "9170:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "9162:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9162:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "9197:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "9189:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9189:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "9225:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "9217:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9151:91:7"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "9274:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "9266:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9265:19:7"
									},
									"scope": 1535,
									"src": "9130:530:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "9958:424:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1478,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "9995:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9987:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9987:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9987:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1482,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "10013:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10005:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10005:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10005:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9987:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1487,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "10045:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10037:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10037:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10037:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1491,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "10063:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10055:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10055:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10055:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "10037:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9987:83:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "9969:161:7",
												"trueBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "10082:48:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1495,
																	"name": "InvalidToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "10104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10104:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1497,
															"nodeType": "RevertStatement",
															"src": "10097:21:7"
														}
													]
												}
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "10158:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "10150:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10150:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1506,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10192:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1535",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10184:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10184:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10184:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1502,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "10168:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10174:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "10168:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10168:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10150:48:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1510,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "10213:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10224:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10213:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "10209:37:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1513,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "10234:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10234:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1515,
													"nodeType": "RevertStatement",
													"src": "10227:19:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10286:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10290:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10286:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "10298:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1517,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "10267:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10273:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "10267:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10267:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "10267:39:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1528,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "10358:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10350:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10350:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10350:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1530,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "10366:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1525,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "10332:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10332:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "EmitStatement",
												"src": "10327:47:7"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "9668:224:7",
										"text": " @notice Emergency withdrawal of tokens (owner only)\n @param token Token to withdraw\n @dev Only allows withdrawal of tokenA or tokenB\n @dev Should only be used in emergency situations"
									},
									"functionSelector": "6ff1c9bc",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "onlyOwner",
												"nameLocations": [
													"9948:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9948:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9948:9:7"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "9907:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9932:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "9925:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "IERC20",
														"nameLocations": [
															"9925:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "9925:6:7"
													},
													"referencedDeclaration": 225,
													"src": "9925:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9924:14:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9958:0:7"
									},
									"scope": 1535,
									"src": "9898:484:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1536,
							"src": "793:9592:7",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567,
								840,
								903,
								905,
								907,
								909,
								911,
								913,
								915,
								917
							],
							"usedEvents": [
								24,
								969,
								980,
								987
							]
						}
					],
					"src": "33:10352:7"
				},
				"id": 7
			}
		}
	}
}