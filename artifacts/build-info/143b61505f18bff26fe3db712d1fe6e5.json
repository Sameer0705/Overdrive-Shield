{
	"id": "143b61505f18bff26fe3db712d1fe6e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/MyDEX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// LOCKED PRAGMA: Uses a specific, secure compiler version for stability.\r\npragma solidity 0.8.20;\r\n\r\n// --- Imports: All battle-tested OpenZeppelin libraries ---\r\nimport \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n// --- CUSTOM ERRORS (GAS OPTIMIZATION) ---\r\n// Using custom errors instead of `require(..., \"string\")`\r\n// saves significant gas on both deployment and runtime.\r\nerror ZeroAddress();\r\nerror IdenticalAddresses();\r\nerror ZeroAmount();\r\nerror NoLiquidity();\r\nerror InsufficientOutput();\r\nerror InvalidToken();\r\n\r\n/**\r\n * @title MyHyperOptimizedDEX\r\n * @author (Your Name)\r\n * @notice A production-grade, gas-optimized, and hardened AMM.\r\n */\r\ncontract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {\r\n    // --- LIBRARIES ---\r\n    using SafeERC20 for IERC20;\r\n\r\n    // --- STATE VARIABLES ---\r\n    // `immutable` saves gas by storing these in code, not storage.\r\n    IERC20 public immutable tokenA;\r\n    IERC20 public immutable tokenB;\r\n\r\n    uint256 public reserveA;\r\n    uint256 public reserveB;\r\n\r\n    // --- EVENTS ---\r\n    event Swapped(\r\n        address indexed sender,\r\n        uint amountIn,\r\n        uint amountOut,\r\n        address indexed tokenIn,\r\n        address indexed tokenOut\r\n    );\r\n    event LiquidityAdded(\r\n        address indexed sender,\r\n        uint amountA,\r\n        uint amountB\r\n    );\r\n\r\n    // --- MODIFIERS ---\r\n    modifier hasLiquidity() {\r\n        if (reserveA == 0 || reserveB == 0) revert NoLiquidity();\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address tokenAAddress,\r\n        address tokenBAddress\r\n    ) Ownable(msg.sender) ReentrancyGuard() {\r\n        if (tokenAAddress == address(0) || tokenBAddress == address(0)) {\r\n            revert ZeroAddress();\r\n        }\r\n        if (tokenAAddress == tokenBAddress) {\r\n            revert IdenticalAddresses();\r\n        }\r\n\r\n        tokenA = IERC20(tokenAAddress);\r\n        tokenB = IERC20(tokenBAddress);\r\n    }\r\n\r\n    function addLiquidity(\r\n        uint256 amountA,\r\n        uint256 amountB\r\n    ) external nonReentrant {\r\n        if (amountA == 0 || amountB == 0) {\r\n            revert ZeroAmount();\r\n        }\r\n\r\n        // --- EFFECTS ---\r\n        reserveA += amountA;\r\n        reserveB += amountB;\r\n\r\n        // --- INTERACTIONS (Hardened) ---\r\n        tokenA.safeTransferFrom(msg.sender, address(this), amountA);\r\n        tokenB.safeTransferFrom(msg.sender, address(this), amountB);\r\n\r\n        emit LiquidityAdded(msg.sender, amountA, amountB);\r\n    }\r\n\r\n    /**\r\n     * @notice Swaps Token A for Token B with slippage protection.\r\n     * @param amountInA The exact amount of Token A being sent.\r\n     * @param amountOutMin The *minimum* amount of Token B the user\r\n     * is willing to accept. This prevents MEV.\r\n     */\r\n    function swapTokenAForTokenB(\r\n        uint256 amountInA,\r\n        uint256 amountOutMin\r\n    ) external nonReentrant hasLiquidity {\r\n        if (amountInA == 0) revert ZeroAmount();\r\n        if (amountOutMin == 0) revert ZeroAmount();\r\n\r\n        // --- HARDENING: Uniswap V2 Math (with 0.3% fee) ---\r\n        uint256 amountInWithFee = amountInA * 997;\r\n        uint256 numerator = amountInWithFee * reserveB;\r\n        uint256 denominator = (reserveA * 1000) + amountInWithFee;\r\n        uint256 amountOutB = numerator / denominator;\r\n\r\n        // --- HARDENING: Slippage Check (This is the MEV-fix) ---\r\n        if (amountOutB < amountOutMin) {\r\n            revert InsufficientOutput();\r\n        }\r\n\r\n        // --- EFFECTS (Checks-Effects-Interactions) ---\r\n        reserveA += amountInA;\r\n        reserveB -= amountOutB;\r\n\r\n        // --- INTERACTIONS (HardDENED) ---\r\n        tokenA.safeTransferFrom(msg.sender, address(this), amountInA);\r\n        tokenB.safeTransfer(msg.sender, amountOutB);\r\n\r\n        emit Swapped(\r\n            msg.sender,\r\n            amountInA,\r\n            amountOutB,\r\n            address(tokenA),\r\n            address(tokenB)\r\n        );\r\n    }\r\n\r\n    // --- Admin Function (Hardened) ---\r\n    function emergencyWithdraw(IERC20 token) external onlyOwner {\r\n        if (\r\n            address(token) != address(tokenA) &&\r\n            address(token) != address(tokenB)\r\n        ) {\r\n            revert InvalidToken();\r\n        }\r\n        token.safeTransfer(msg.sender, token.balanceOf(address(this)));\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.0.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH25 0x1E87617BAD24B06A24D760C8C02433B16BB4D02032E19D6B1F STATICCALL OR 0xE4 CALLCODE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH25 0x1E87617BAD24B06A24D760C8C02433B16BB4D02032E19D6B1F STATICCALL OR 0xE4 CALLCODE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006781e87617bad24b06a24d760c8c02433b16bb4d02032e19d6b1ffa17e4f2f764736f6c63430008140033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/MyDEX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB9 0xA8 POP 0xBA GAS 0xEC 0xB7 0xC7 PUSH9 0x63E89124D1DA9577CD LOG2 0xA5 0x1F 0xCB 0xFB 0xD1 GT 0xCB 0xE7 DUP9 ADD GASPRICE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB9 0xA8 POP 0xBA GAS 0xEC 0xB7 0xC7 PUSH9 0x63E89124D1DA9577CD LOG2 0xA5 0x1F 0xCB 0xFB 0xD1 GT 0xCB 0xE7 DUP9 ADD GASPRICE 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015b9a850ba5aecb7c76863e89124d1da9577cda2a51fcbfbd111cbe788013acc64736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/MyDEX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/MyDEX.sol": {
				"MyHyperOptimizedDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenBAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IdenticalAddresses",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientOutput",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoLiquidity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenAForTokenB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "(Your Name)",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"swapTokenAForTokenB(uint256,uint256)": {
								"params": {
									"amountInA": "The exact amount of Token A being sent.",
									"amountOutMin": "The *minimum* amount of Token B the user is willing to accept. This prevents MEV."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MyHyperOptimizedDEX",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyDEX.sol\":904:4523  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contract/MyDEX.sol\":1729:2163  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  sstore\n    /* \"contract/MyDEX.sol\":1820:1830  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX.sol\":1865:1892  tokenAAddress == address(0) */\n  dup3\n  and\n  iszero\n  dup1\n    /* \"contract/MyDEX.sol\":1865:1923  tokenAAddress == address(0) || tokenBAddress == address(0) */\n  tag_15\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX.sol\":1896:1923  tokenBAddress == address(0) */\n  dup2\n  and\n  iszero\n    /* \"contract/MyDEX.sol\":1865:1923  tokenAAddress == address(0) || tokenBAddress == address(0) */\ntag_15:\n    /* \"contract/MyDEX.sol\":1861:1972  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\n  iszero\n  tag_16\n  jumpi\n    /* \"contract/MyDEX.sol\":1947:1960  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/MyDEX.sol\":1861:1972  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\ntag_16:\n    /* \"contract/MyDEX.sol\":2003:2016  tokenBAddress */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX.sol\":1986:2016  tokenAAddress == tokenBAddress */\n  and\n    /* \"contract/MyDEX.sol\":1986:1999  tokenAAddress */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX.sol\":1986:2016  tokenAAddress == tokenBAddress */\n  and\n  sub\n    /* \"contract/MyDEX.sol\":1982:2072  if (tokenAAddress == tokenBAddress) {... */\n  tag_17\n  jumpi\n    /* \"contract/MyDEX.sol\":2040:2060  IdenticalAddresses() */\n  mload(0x40)\n  shl(0xe4, 0x0bd969eb)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/MyDEX.sol\":1982:2072  if (tokenAAddress == tokenBAddress) {... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX.sol\":2084:2114  tokenA = IERC20(tokenAAddress) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contract/MyDEX.sol\":2125:2155  tokenB = IERC20(tokenBAddress) */\n  and\n  0xa0\n  mstore\n    /* \"contract/MyDEX.sol\":904:4523  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_23:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_25:\n    /* \"#utility.yul\":375:415   */\n  tag_26\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_27\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_21:\n    /* \"contract/MyDEX.sol\":904:4523  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n  0x00\n  assignImmutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract/MyDEX.sol\":904:4523  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56d9be4c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/MyDEX.sol\":1130:1160  IERC20 public immutable tokenA */\n    tag_3:\n      tag_14\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":174:225   */\n      dup2\n      mstore\n        /* \"#utility.yul\":162:164   */\n      0x20\n        /* \"#utility.yul\":147:165   */\n      add\n        /* \"contract/MyDEX.sol\":1130:1160  IERC20 public immutable tokenA */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyDEX.sol\":1236:1259  uint256 public reserveB */\n    tag_4:\n      tag_18\n      sload(0x03)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":382:407   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":370:372   */\n      0x20\n        /* \"#utility.yul\":355:373   */\n      add\n        /* \"contract/MyDEX.sol\":1236:1259  uint256 public reserveB */\n      tag_16\n        /* \"#utility.yul\":236:413   */\n      jump\n        /* \"contract/MyDEX.sol\":2987:4158  function swapTokenAForTokenB(... */\n    tag_5:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contract/MyDEX.sol\":1167:1197  IERC20 public immutable tokenB */\n    tag_6:\n      tag_14\n      immutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n      dup2\n      jump\n        /* \"contract/MyDEX.sol\":4208:4520  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_22\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_14)\n        /* \"contract/MyDEX.sol\":2171:2710  function addLiquidity(... */\n    tag_10:\n      tag_22\n      tag_40\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contract/MyDEX.sol\":1206:1229  uint256 public reserveA */\n    tag_11:\n      tag_18\n      sload(0x02)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_22\n      tag_46\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contract/MyDEX.sol\":2987:4158  function swapTokenAForTokenB(... */\n    tag_25:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_50\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_51\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_50:\n        /* \"contract/MyDEX.sol\":1649:1657  reserveA */\n      sload(0x02)\n        /* \"contract/MyDEX.sol\":1649:1662  reserveA == 0 */\n      iszero\n      dup1\n        /* \"contract/MyDEX.sol\":1649:1679  reserveA == 0 || reserveB == 0 */\n      tag_53\n      jumpi\n      pop\n        /* \"contract/MyDEX.sol\":1666:1674  reserveB */\n      sload(0x03)\n        /* \"contract/MyDEX.sol\":1666:1679  reserveB == 0 */\n      iszero\n        /* \"contract/MyDEX.sol\":1649:1679  reserveA == 0 || reserveB == 0 */\n    tag_53:\n        /* \"contract/MyDEX.sol\":1645:1701  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n      iszero\n      tag_54\n      jumpi\n        /* \"contract/MyDEX.sol\":1688:1701  NoLiquidity() */\n      mload(0x40)\n      shl(0xe1, 0x6180f03f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":1645:1701  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n    tag_54:\n        /* \"contract/MyDEX.sol\":3132:3141  amountInA */\n      dup2\n        /* \"contract/MyDEX.sol\":3145:3146  0 */\n      0x00\n        /* \"contract/MyDEX.sol\":3132:3146  amountInA == 0 */\n      sub\n        /* \"contract/MyDEX.sol\":3128:3167  if (amountInA == 0) revert ZeroAmount() */\n      tag_56\n      jumpi\n        /* \"contract/MyDEX.sol\":3155:3167  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":3128:3167  if (amountInA == 0) revert ZeroAmount() */\n    tag_56:\n        /* \"contract/MyDEX.sol\":3182:3194  amountOutMin */\n      dup1\n        /* \"contract/MyDEX.sol\":3198:3199  0 */\n      0x00\n        /* \"contract/MyDEX.sol\":3182:3199  amountOutMin == 0 */\n      sub\n        /* \"contract/MyDEX.sol\":3178:3220  if (amountOutMin == 0) revert ZeroAmount() */\n      tag_57\n      jumpi\n        /* \"contract/MyDEX.sol\":3208:3220  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":3178:3220  if (amountOutMin == 0) revert ZeroAmount() */\n    tag_57:\n        /* \"contract/MyDEX.sol\":3296:3319  uint256 amountInWithFee */\n      0x00\n        /* \"contract/MyDEX.sol\":3322:3337  amountInA * 997 */\n      tag_58\n        /* \"contract/MyDEX.sol\":3322:3331  amountInA */\n      dup4\n        /* \"contract/MyDEX.sol\":3334:3337  997 */\n      0x03e5\n        /* \"contract/MyDEX.sol\":3322:3337  amountInA * 997 */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contract/MyDEX.sol\":3296:3337  uint256 amountInWithFee = amountInA * 997 */\n      swap1\n      pop\n        /* \"contract/MyDEX.sol\":3348:3365  uint256 numerator */\n      0x00\n        /* \"contract/MyDEX.sol\":3386:3394  reserveB */\n      sload(0x03)\n        /* \"contract/MyDEX.sol\":3368:3383  amountInWithFee */\n      dup3\n        /* \"contract/MyDEX.sol\":3368:3394  amountInWithFee * reserveB */\n      tag_60\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n        /* \"contract/MyDEX.sol\":3348:3394  uint256 numerator = amountInWithFee * reserveB */\n      swap1\n      pop\n        /* \"contract/MyDEX.sol\":3405:3424  uint256 denominator */\n      0x00\n        /* \"contract/MyDEX.sol\":3447:3462  amountInWithFee */\n      dup3\n        /* \"contract/MyDEX.sol\":3428:3436  reserveA */\n      sload(0x02)\n        /* \"contract/MyDEX.sol\":3439:3443  1000 */\n      0x03e8\n        /* \"contract/MyDEX.sol\":3428:3443  reserveA * 1000 */\n      tag_61\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_61:\n        /* \"contract/MyDEX.sol\":3427:3462  (reserveA * 1000) + amountInWithFee */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contract/MyDEX.sol\":3405:3462  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      swap1\n      pop\n        /* \"contract/MyDEX.sol\":3473:3491  uint256 amountOutB */\n      0x00\n        /* \"contract/MyDEX.sol\":3494:3517  numerator / denominator */\n      tag_64\n        /* \"contract/MyDEX.sol\":3405:3462  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      dup3\n        /* \"contract/MyDEX.sol\":3494:3503  numerator */\n      dup5\n        /* \"contract/MyDEX.sol\":3494:3517  numerator / denominator */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contract/MyDEX.sol\":3473:3517  uint256 amountOutB = numerator / denominator */\n      swap1\n      pop\n        /* \"contract/MyDEX.sol\":3615:3627  amountOutMin */\n      dup5\n        /* \"contract/MyDEX.sol\":3602:3612  amountOutB */\n      dup2\n        /* \"contract/MyDEX.sol\":3602:3627  amountOutB < amountOutMin */\n      lt\n        /* \"contract/MyDEX.sol\":3598:3683  if (amountOutB < amountOutMin) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contract/MyDEX.sol\":3651:3671  InsufficientOutput() */\n      mload(0x40)\n      shl(0xe0, 0xbb2875c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":3598:3683  if (amountOutB < amountOutMin) {... */\n    tag_66:\n        /* \"contract/MyDEX.sol\":3765:3774  amountInA */\n      dup6\n        /* \"contract/MyDEX.sol\":3753:3761  reserveA */\n      0x02\n      0x00\n        /* \"contract/MyDEX.sol\":3753:3774  reserveA += amountInA */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyDEX.sol\":3797:3807  amountOutB */\n      dup1\n        /* \"contract/MyDEX.sol\":3785:3793  reserveB */\n      0x03\n      0x00\n        /* \"contract/MyDEX.sol\":3785:3807  reserveB -= amountOutB */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/MyDEX.sol\":3865:3926  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      tag_70\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":3865:3871  tokenA */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n        /* \"contract/MyDEX.sol\":3865:3888  tokenA.safeTransferFrom */\n      and\n        /* \"contract/MyDEX.sol\":3889:3899  msg.sender */\n      caller\n        /* \"contract/MyDEX.sol\":3909:3913  this */\n      address\n        /* \"contract/MyDEX.sol\":3916:3925  amountInA */\n      dup10\n        /* \"contract/MyDEX.sol\":3865:3888  tokenA.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX.sol\":3865:3926  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      jump\t// in\n    tag_70:\n        /* \"contract/MyDEX.sol\":3937:3980  tokenB.safeTransfer(msg.sender, amountOutB) */\n      tag_72\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":3937:3943  tokenB */\n      immutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n        /* \"contract/MyDEX.sol\":3937:3956  tokenB.safeTransfer */\n      and\n        /* \"contract/MyDEX.sol\":3957:3967  msg.sender */\n      caller\n        /* \"contract/MyDEX.sol\":3969:3979  amountOutB */\n      dup4\n        /* \"contract/MyDEX.sol\":3937:3956  tokenB.safeTransfer */\n      tag_73\n        /* \"contract/MyDEX.sol\":3937:3980  tokenB.safeTransfer(msg.sender, amountOutB) */\n      jump\t// in\n    tag_72:\n        /* \"contract/MyDEX.sol\":4132:4138  tokenB */\n      immutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":3998:4150  Swapped(... */\n      and\n        /* \"contract/MyDEX.sol\":4102:4108  tokenA */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":3998:4150  Swapped(... */\n      and\n        /* \"contract/MyDEX.sol\":4020:4030  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":3998:4150  Swapped(... */\n      and\n      0xdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850\n        /* \"contract/MyDEX.sol\":4045:4054  amountInA */\n      dup10\n        /* \"contract/MyDEX.sol\":4069:4079  amountOutB */\n      dup6\n        /* \"contract/MyDEX.sol\":3998:4150  Swapped(... */\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2521:2546   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      dup3\n      add\n        /* \"#utility.yul\":2555:2589   */\n      mstore\n        /* \"#utility.yul\":2509:2511   */\n      0x40\n        /* \"#utility.yul\":2494:2512   */\n      add\n      swap1\n        /* \"#utility.yul\":2347:2595   */\n      jump\n        /* \"contract/MyDEX.sol\":3998:4150  Swapped(... */\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/MyDEX.sol\":3117:4158  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_76\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n    tag_76:\n        /* \"contract/MyDEX.sol\":2987:4158  function swapTokenAForTokenB(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX.sol\":4208:4520  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_80\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contract/MyDEX.sol\":4323:4329  tokenA */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4297:4330  address(token) != address(tokenA) */\n      and\n        /* \"contract/MyDEX.sol\":4305:4310  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4297:4330  address(token) != address(tokenA) */\n      and\n      eq\n      iszero\n        /* \"contract/MyDEX.sol\":4297:4380  address(token) != address(tokenA) &&... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"contract/MyDEX.sol\":4373:4379  tokenB */\n      immutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4347:4380  address(token) != address(tokenB) */\n      and\n        /* \"contract/MyDEX.sol\":4355:4360  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4347:4380  address(token) != address(tokenB) */\n      and\n      eq\n      iszero\n        /* \"contract/MyDEX.sol\":4297:4380  address(token) != address(tokenA) &&... */\n    tag_82:\n        /* \"contract/MyDEX.sol\":4279:4440  if (... */\n      iszero\n      tag_83\n      jumpi\n        /* \"contract/MyDEX.sol\":4414:4428  InvalidToken() */\n      mload(0x40)\n      shl(0xe0, 0xc1ab6dc1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":4279:4440  if (... */\n    tag_83:\n        /* \"contract/MyDEX.sol\":4481:4511  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contract/MyDEX.sol\":4505:4509  this */\n      address\n        /* \"contract/MyDEX.sol\":4481:4511  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"contract/MyDEX.sol\":4450:4512  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      tag_84\n      swap1\n        /* \"contract/MyDEX.sol\":4469:4479  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4481:4496  token.balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX.sol\":4481:4511  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":4450:4468  token.safeTransfer */\n      dup5\n      and\n      swap2\n        /* \"contract/MyDEX.sol\":4450:4512  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      swap1\n        /* \"contract/MyDEX.sol\":4450:4468  token.safeTransfer */\n      tag_73\n        /* \"contract/MyDEX.sol\":4450:4512  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_84:\n        /* \"contract/MyDEX.sol\":4208:4520  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_80\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_93\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract/MyDEX.sol\":2171:2710  function addLiquidity(... */\n    tag_41:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_97\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_51\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_97:\n        /* \"contract/MyDEX.sol\":2289:2301  amountA == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"contract/MyDEX.sol\":2289:2317  amountA == 0 || amountB == 0 */\n      tag_99\n      jumpi\n      pop\n        /* \"contract/MyDEX.sol\":2305:2317  amountB == 0 */\n      dup1\n      iszero\n        /* \"contract/MyDEX.sol\":2289:2317  amountA == 0 || amountB == 0 */\n    tag_99:\n        /* \"contract/MyDEX.sol\":2285:2365  if (amountA == 0 || amountB == 0) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contract/MyDEX.sol\":2341:2353  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX.sol\":2285:2365  if (amountA == 0 || amountB == 0) {... */\n    tag_100:\n        /* \"contract/MyDEX.sol\":2417:2424  amountA */\n      dup2\n        /* \"contract/MyDEX.sol\":2405:2413  reserveA */\n      0x02\n      0x00\n        /* \"contract/MyDEX.sol\":2405:2424  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyDEX.sol\":2447:2454  amountB */\n      dup1\n        /* \"contract/MyDEX.sol\":2435:2443  reserveB */\n      0x03\n      0x00\n        /* \"contract/MyDEX.sol\":2435:2454  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_102:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/MyDEX.sol\":2511:2570  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_103\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":2511:2517  tokenA */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n        /* \"contract/MyDEX.sol\":2511:2534  tokenA.safeTransferFrom */\n      and\n        /* \"contract/MyDEX.sol\":2535:2545  msg.sender */\n      caller\n        /* \"contract/MyDEX.sol\":2555:2559  this */\n      address\n        /* \"contract/MyDEX.sol\":2562:2569  amountA */\n      dup6\n        /* \"contract/MyDEX.sol\":2511:2534  tokenA.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX.sol\":2511:2570  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      jump\t// in\n    tag_103:\n        /* \"contract/MyDEX.sol\":2581:2640  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_104\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX.sol\":2581:2587  tokenB */\n      immutable(\"0xd6ef8874b909555826a0bd255f0f90b2213baaf47b3be996a6aa5118a433e826\")\n        /* \"contract/MyDEX.sol\":2581:2604  tokenB.safeTransferFrom */\n      and\n        /* \"contract/MyDEX.sol\":2605:2615  msg.sender */\n      caller\n        /* \"contract/MyDEX.sol\":2625:2629  this */\n      address\n        /* \"contract/MyDEX.sol\":2632:2639  amountB */\n      dup5\n        /* \"contract/MyDEX.sol\":2581:2604  tokenB.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX.sol\":2581:2640  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      jump\t// in\n    tag_104:\n        /* \"contract/MyDEX.sol\":2658:2702  LiquidityAdded(msg.sender, amountA, amountB) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2521:2546   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      dup2\n      add\n        /* \"#utility.yul\":2555:2589   */\n      dup4\n      swap1\n      mstore\n        /* \"contract/MyDEX.sol\":2673:2683  msg.sender */\n      caller\n      swap2\n        /* \"contract/MyDEX.sol\":2658:2702  LiquidityAdded(msg.sender, amountA, amountB) */\n      0xac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45\n      swap2\n        /* \"#utility.yul\":2494:2512   */\n      add\n        /* \"contract/MyDEX.sol\":2658:2702  LiquidityAdded(msg.sender, amountA, amountB) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_76\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_80\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_84\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_94\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_51:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3047:3062   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3029:3063   */\n      mstore\n        /* \"#utility.yul\":3099:3114   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":3079:3097   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":3072:3115   */\n      mstore\n        /* \"#utility.yul\":3131:3149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3124:3158   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_116\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2964:2982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_117:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_119\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_73:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3361:3393   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3343:3394   */\n      mstore\n        /* \"#utility.yul\":3410:3428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3403:3437   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_121\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3316:3334   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      tag_117\n        /* \"#utility.yul\":3169:3443   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n    tag_121:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_119:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_134\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_135\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_136:\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_143\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_144\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_142:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_152\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_151)\n    tag_152:\n      0x60\n      swap2\n      pop\n    tag_151:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_153\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_154\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_145:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_154:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_157\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4828  _revert */\n      tag_158\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_145)\n    tag_156:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_160:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_161:\n      pop\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_145)\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_158:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts@5.0.0/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":418:666   */\n    tag_24:\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":494:500   */\n      dup1\n        /* \"#utility.yul\":547:549   */\n      0x40\n        /* \"#utility.yul\":535:544   */\n      dup4\n        /* \"#utility.yul\":526:533   */\n      dup6\n        /* \"#utility.yul\":522:545   */\n      sub\n        /* \"#utility.yul\":518:550   */\n      slt\n        /* \"#utility.yul\":515:567   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":560:561   */\n      dup1\n        /* \"#utility.yul\":553:565   */\n      revert\n        /* \"#utility.yul\":515:567   */\n    tag_172:\n      pop\n      pop\n        /* \"#utility.yul\":586:609   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":641:659   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":628:660   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":418:666   */\n      jump\t// out\n        /* \"#utility.yul\":671:810   */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":754:785   */\n      dup2\n      and\n        /* \"#utility.yul\":744:786   */\n      dup2\n      eq\n        /* \"#utility.yul\":734:804   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":797:798   */\n      dup1\n        /* \"#utility.yul\":790:802   */\n      revert\n        /* \"#utility.yul\":815:1084   */\n    tag_31:\n        /* \"#utility.yul\":888:894   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":929:938   */\n      dup3\n        /* \"#utility.yul\":920:927   */\n      dup5\n        /* \"#utility.yul\":916:939   */\n      sub\n        /* \"#utility.yul\":912:944   */\n      slt\n        /* \"#utility.yul\":909:961   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":954:955   */\n      dup1\n        /* \"#utility.yul\":947:959   */\n      revert\n        /* \"#utility.yul\":909:961   */\n    tag_176:\n        /* \"#utility.yul\":996:1005   */\n      dup2\n        /* \"#utility.yul\":983:1006   */\n      calldataload\n        /* \"#utility.yul\":1015:1054   */\n      tag_145\n        /* \"#utility.yul\":1048:1053   */\n      dup2\n        /* \"#utility.yul\":1015:1054   */\n      tag_166\n      jump\t// in\n        /* \"#utility.yul\":1557:1684   */\n    tag_167:\n        /* \"#utility.yul\":1618:1628   */\n      0x4e487b71\n        /* \"#utility.yul\":1613:1616   */\n      0xe0\n        /* \"#utility.yul\":1609:1629   */\n      shl\n        /* \"#utility.yul\":1606:1607   */\n      0x00\n        /* \"#utility.yul\":1599:1630   */\n      mstore\n        /* \"#utility.yul\":1649:1653   */\n      0x11\n        /* \"#utility.yul\":1646:1647   */\n      0x04\n        /* \"#utility.yul\":1639:1654   */\n      mstore\n        /* \"#utility.yul\":1673:1677   */\n      0x24\n        /* \"#utility.yul\":1670:1671   */\n      0x00\n        /* \"#utility.yul\":1663:1678   */\n      revert\n        /* \"#utility.yul\":1689:1857   */\n    tag_59:\n        /* \"#utility.yul\":1762:1771   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1793:1802   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1810:1825   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1804:1826   */\n      dup5\n      eq\n        /* \"#utility.yul\":1790:1827   */\n      or\n        /* \"#utility.yul\":1780:1851   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1831:1849   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":1862:1987   */\n    tag_63:\n        /* \"#utility.yul\":1927:1936   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1948:1958   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1945:1981   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":1992:2209   */\n    tag_65:\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2058:2059   */\n      dup3\n        /* \"#utility.yul\":2048:2180   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2102:2112   */\n      0x4e487b71\n        /* \"#utility.yul\":2097:2100   */\n      0xe0\n        /* \"#utility.yul\":2093:2113   */\n      shl\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2114   */\n      mstore\n        /* \"#utility.yul\":2137:2141   */\n      0x12\n        /* \"#utility.yul\":2134:2135   */\n      0x04\n        /* \"#utility.yul\":2127:2142   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2048:2180   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":2194:2203   */\n      div\n      swap1\n        /* \"#utility.yul\":1992:2209   */\n      jump\t// out\n        /* \"#utility.yul\":2214:2342   */\n    tag_69:\n        /* \"#utility.yul\":2281:2290   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2302:2313   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2299:2336   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2316:2334   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":2600:2784   */\n    tag_89:\n        /* \"#utility.yul\":2670:2676   */\n      0x00\n        /* \"#utility.yul\":2723:2725   */\n      0x20\n        /* \"#utility.yul\":2711:2720   */\n      dup3\n        /* \"#utility.yul\":2702:2709   */\n      dup5\n        /* \"#utility.yul\":2698:2721   */\n      sub\n        /* \"#utility.yul\":2694:2726   */\n      slt\n        /* \"#utility.yul\":2691:2743   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2739:2740   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      dup1\n        /* \"#utility.yul\":2729:2741   */\n      revert\n        /* \"#utility.yul\":2691:2743   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2762:2778   */\n      mload\n      swap2\n        /* \"#utility.yul\":2600:2784   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3725   */\n    tag_138:\n        /* \"#utility.yul\":3515:3521   */\n      0x00\n        /* \"#utility.yul\":3568:3570   */\n      0x20\n        /* \"#utility.yul\":3556:3565   */\n      dup3\n        /* \"#utility.yul\":3547:3554   */\n      dup5\n        /* \"#utility.yul\":3543:3566   */\n      sub\n        /* \"#utility.yul\":3539:3571   */\n      slt\n        /* \"#utility.yul\":3536:3588   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3581:3582   */\n      dup1\n        /* \"#utility.yul\":3574:3586   */\n      revert\n        /* \"#utility.yul\":3536:3588   */\n    tag_200:\n        /* \"#utility.yul\":3616:3625   */\n      dup2\n        /* \"#utility.yul\":3610:3626   */\n      mload\n        /* \"#utility.yul\":3669:3674   */\n      dup1\n        /* \"#utility.yul\":3662:3675   */\n      iszero\n        /* \"#utility.yul\":3655:3676   */\n      iszero\n        /* \"#utility.yul\":3648:3653   */\n      dup2\n        /* \"#utility.yul\":3645:3677   */\n      eq\n        /* \"#utility.yul\":3635:3695   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3688:3689   */\n      dup1\n        /* \"#utility.yul\":3681:3693   */\n      revert\n        /* \"#utility.yul\":3730:4142   */\n    tag_149:\n        /* \"#utility.yul\":3859:3862   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3891:3904   */\n      mload\n        /* \"#utility.yul\":3922:3923   */\n      0x00\n        /* \"#utility.yul\":3932:4061   */\n    tag_203:\n        /* \"#utility.yul\":3946:3952   */\n      dup2\n        /* \"#utility.yul\":3943:3944   */\n      dup2\n        /* \"#utility.yul\":3940:3953   */\n      lt\n        /* \"#utility.yul\":3932:4061   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":4044:4048   */\n      0x20\n        /* \"#utility.yul\":4028:4042   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":4024:4049   */\n      dup2\n      add\n        /* \"#utility.yul\":4018:4050   */\n      mload\n        /* \"#utility.yul\":4005:4016   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3998:4051   */\n      mstore\n        /* \"#utility.yul\":3961:3973   */\n      add\n        /* \"#utility.yul\":3932:4061   */\n      jump(tag_203)\n    tag_205:\n      pop\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4080:4096   */\n      swap3\n      add\n        /* \"#utility.yul\":4105:4118   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4080:4096   */\n      swap2\n        /* \"#utility.yul\":3730:4142   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220781c05cdb05913b6c109aeeabcc8322ed6a6c5c321fe1c61953aa889b797c7e564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:699:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:8"
															},
															"nodeType": "YulIf",
															"src": "304:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:8",
														"type": ""
													}
												],
												"src": "196:293:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "605:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "678:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "683:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "687:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "640:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "564:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "586:4:8",
														"type": ""
													}
												],
												"src": "494:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610c46380380610c4683398101604081905261002e91610151565b60015f55338061005757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610060816100e5565b506001600160a01b038216158061007e57506001600160a01b038116155b1561009c5760405163d92e233d60e01b815260040160405180910390fd5b806001600160a01b0316826001600160a01b0316036100ce57604051630bd969eb60e41b815260040160405180910390fd5b6001600160a01b039182166080521660a052610182565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811461014c575f80fd5b919050565b5f8060408385031215610162575f80fd5b61016b83610136565b915061017960208401610136565b90509250929050565b60805160a051610a6c6101da5f395f8181610114015281816102e30152818161030c01528181610402015261058a01525f818160a4015281816102ae01528181610336015281816103c501526105550152610a6c5ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063715018a611610063578063715018a6146101495780638da5cb5b146101515780639cd441da14610162578063dc5fa6c514610175578063f2fde38b1461017e575f80fd5b80630fc63d101461009f57806319e36f3b146100e357806356d9be4c146100fa5780635f64b55b1461010f5780636ff1c9bc14610136575b5f80fd5b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec60035481565b6040519081526020016100da565b61010d610108366004610915565b610191565b005b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b61010d610144366004610949565b6103bb565b61010d6104d5565b6001546001600160a01b03166100c6565b61010d610170366004610915565b6104e8565b6100ec60025481565b61010d61018c366004610949565b6105f6565b610199610635565b60025415806101a85750600354155b156101c657604051636180f03f60e11b815260040160405180910390fd5b815f036101e657604051631f2a200560e01b815260040160405180910390fd5b805f0361020657604051631f2a200560e01b815260040160405180910390fd5b5f610213836103e5610978565b90505f600354826102249190610978565b90505f826002546103e86102389190610978565b610242919061098f565b90505f61024f82846109a2565b9050848110156102725760405163bb2875c360e01b815260040160405180910390fd5b8560025f828254610283919061098f565b925050819055508060035f82825461029b91906109c1565b909155506102d690506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308961065d565b61030a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836106ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b285089856040516103a2929190918252602082015260400190565b60405180910390a4505050506103b760015f55565b5050565b6103c3610700565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561043757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b156104555760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526104d29033906001600160a01b038416906370a0823190602401602060405180830381865afa15801561049d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c191906109d4565b6001600160a01b03841691906106ca565b50565b6104dd610700565b6104e65f61072d565b565b6104f0610635565b8115806104fb575080155b1561051957604051631f2a200560e01b815260040160405180910390fd5b8160025f82825461052a919061098f565b925050819055508060035f828254610542919061098f565b9091555061057d90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561065d565b6105b26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461065d565b604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a26103b760015f55565b6105fe610700565b6001600160a01b03811661062c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6104d28161072d565b60025f540361065757604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6040516001600160a01b0384811660248301528381166044830152606482018390526106c49186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061077e565b50505050565b6040516001600160a01b038381166024830152604482018390526106fb91859182169063a9059cbb90606401610692565b505050565b6001546001600160a01b031633146104e65760405163118cdaa760e01b8152336004820152602401610623565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107926001600160a01b038416836107df565b905080515f141580156107b65750808060200190518101906107b491906109eb565b155b156106fb57604051635274afe760e01b81526001600160a01b0384166004820152602401610623565b60606107ec83835f6107f5565b90505b92915050565b60608147101561081a5760405163cd78605960e01b8152306004820152602401610623565b5f80856001600160a01b031684866040516108359190610a0a565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b5091509150610884868383610890565b925050505b9392505050565b6060826108a5576108a0826108ec565b610889565b81511580156108bc57506001600160a01b0384163b155b156108e557604051639996b31560e01b81526001600160a01b0385166004820152602401610623565b5080610889565b8051156108fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f8060408385031215610926575f80fd5b50508035926020909101359150565b6001600160a01b03811681146104d2575f80fd5b5f60208284031215610959575f80fd5b813561088981610935565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107ef576107ef610964565b808201808211156107ef576107ef610964565b5f826109bc57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156107ef576107ef610964565b5f602082840312156109e4575f80fd5b5051919050565b5f602082840312156109fb575f80fd5b81518015158114610889575f80fd5b5f82515f5b81811015610a295760208186018101518583015201610a0f565b505f92019182525091905056fea2646970667358221220781c05cdb05913b6c109aeeabcc8322ed6a6c5c321fe1c61953aa889b797c7e564736f6c63430008140033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC46 CODESIZE SUB DUP1 PUSH2 0xC46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE CALLER DUP1 PUSH2 0x57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60 DUP2 PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x7E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x9C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH4 0xBD969EB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x182 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B DUP4 PUSH2 0x136 JUMP JUMPDEST SWAP2 POP PUSH2 0x179 PUSH1 0x20 DUP5 ADD PUSH2 0x136 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xA6C PUSH2 0x1DA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x114 ADD MSTORE DUP2 DUP2 PUSH2 0x2E3 ADD MSTORE DUP2 DUP2 PUSH2 0x30C ADD MSTORE DUP2 DUP2 PUSH2 0x402 ADD MSTORE PUSH2 0x58A ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0xA4 ADD MSTORE DUP2 DUP2 PUSH2 0x2AE ADD MSTORE DUP2 DUP2 PUSH2 0x336 ADD MSTORE DUP2 DUP2 PUSH2 0x3C5 ADD MSTORE PUSH2 0x555 ADD MSTORE PUSH2 0xA6C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x213 DUP4 PUSH2 0x3E5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 SLOAD PUSH2 0x3E8 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24F DUP3 DUP5 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2D6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x30A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x700 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x4D2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x4E6 PUSH0 PUSH2 0x72D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x635 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x4FB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x57D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x5B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6C4 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x692 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EC DUP4 DUP4 PUSH0 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x884 DUP7 DUP4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x8A5 JUMPI PUSH2 0x8A0 DUP3 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST POP DUP1 PUSH2 0x889 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x889 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x889 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA0F JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x1C05CDB05913B6C109AEEABCC8322ED6A6C5C321FE1C61953A 0xA8 DUP10 0xB7 SWAP8 0xC7 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "904:3619:7:-:0;;;1729:434;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:6;1917:7;:21;1820:10:7;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:8;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1865:27:7;::::2;::::0;;:58:::2;;-1:-1:-1::0;;;;;;1896:27:7;::::2;::::0;1865:58:::2;1861:111;;;1947:13;;-1:-1:-1::0;;;1947:13:7::2;;;;;;;;;;;1861:111;2003:13;-1:-1:-1::0;;;;;1986:30:7::2;:13;-1:-1:-1::0;;;;;1986:30:7::2;::::0;1982:90:::2;;2040:20;;-1:-1:-1::0;;;2040:20:7::2;;;;;;;;;;;1982:90;-1:-1:-1::0;;;;;2084:30:7;;::::2;;::::0;2125::::2;;::::0;904:3619;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;904:3619:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_501": {
									"entryPoint": 1918,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1792,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_875": {
									"entryPoint": 1589,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_803": {
									"entryPoint": 2284,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1837,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1080": {
									"entryPoint": 1256,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1232": {
									"entryPoint": 955,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 2037,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 2015,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1237,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveA_930": {
									"entryPoint": null,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_932": {
									"entryPoint": null,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 1629,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 1738,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokenAForTokenB_1185": {
									"entryPoint": 401,
									"id": 1185,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenA_925": {
									"entryPoint": null,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_928": {
									"entryPoint": null,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1526,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 2192,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "129:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "139:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "151:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "162:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "147:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "147:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "139:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "196:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "212:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "217:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "208:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "208:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "221:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "204:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "192:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "192:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "174:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "174:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "174:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "98:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "120:4:8",
														"type": ""
													}
												],
												"src": "14:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "337:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "347:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "355:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "347:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "400:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "382:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "306:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "317:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "328:4:8",
														"type": ""
													}
												],
												"src": "236:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:161:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "551:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "563:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "553:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "553:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "526:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "535:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "522:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "522:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "547:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "518:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:32:8"
															},
															"nodeType": "YulIf",
															"src": "515:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "576:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "599:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "586:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "618:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "628:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "463:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "474:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "486:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "494:6:8",
														"type": ""
													}
												],
												"src": "418:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "724:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "788:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "797:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "800:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "790:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "790:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "747:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "773:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "778:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "769:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "769:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "782:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "765:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "765:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "744:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "744:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:50:8"
															},
															"nodeType": "YulIf",
															"src": "734:70:8"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "713:5:8",
														"type": ""
													}
												],
												"src": "671:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "899:185:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "945:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "957:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "920:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "916:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:32:8"
															},
															"nodeType": "YulIf",
															"src": "909:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "970:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "996:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "983:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "974:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1015:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1015:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1015:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1063:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1073:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "865:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "876:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "888:6:8",
														"type": ""
													}
												],
												"src": "815:269:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1200:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1200:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1257:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1278:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1282:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1265:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1265:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1170:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1181:4:8",
														"type": ""
													}
												],
												"src": "1089:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:185:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1413:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1415:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1415:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:32:8"
															},
															"nodeType": "YulIf",
															"src": "1377:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1451:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1442:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1516:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1483:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1483:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1531:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1541:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1333:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1344:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1356:6:8",
														"type": ""
													}
												],
												"src": "1297:255:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1589:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1606:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1613:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1618:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1639:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1639:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1663:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1557:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1741:116:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1751:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1769:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1751:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1829:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1831:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1831:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1831:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1800:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1793:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1793:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1807:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1814:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1823:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1810:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1810:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1804:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1804:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1790:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1790:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:45:8"
															},
															"nodeType": "YulIf",
															"src": "1780:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1720:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1723:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1729:7:8",
														"type": ""
													}
												],
												"src": "1689:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1920:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1934:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1927:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1951:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:10:8"
															},
															"nodeType": "YulIf",
															"src": "1945:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1893:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1896:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1902:3:8",
														"type": ""
													}
												],
												"src": "1862:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2069:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2090:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2097:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2102:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2093:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2093:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2083:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2083:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2083:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2137:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2127:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2165:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2155:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2058:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:9:8"
															},
															"nodeType": "YulIf",
															"src": "2048:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2189:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2201:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2194:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2189:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2023:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2026:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2032:1:8",
														"type": ""
													}
												],
												"src": "1992:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2263:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2273:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2285:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2288:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2273:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2314:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2316:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2316:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2305:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2311:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2302:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2302:11:8"
															},
															"nodeType": "YulIf",
															"src": "2299:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2245:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2248:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2254:4:8",
														"type": ""
													}
												],
												"src": "2214:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2476:119:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2486:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2509:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2486:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2528:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2521:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2577:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2562:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2582:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2555:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2555:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2437:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2448:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2456:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2467:4:8",
														"type": ""
													}
												],
												"src": "2347:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2681:103:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2711:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2723:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2694:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2694:32:8"
															},
															"nodeType": "YulIf",
															"src": "2691:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2752:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2762:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2647:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2658:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2670:6:8",
														"type": ""
													}
												],
												"src": "2600:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:218:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2956:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2968:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2956:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2991:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3009:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3018:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2995:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3036:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3059:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3029:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3094:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3079:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3111:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3072:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3146:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3124:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2899:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2910:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2918:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2926:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2937:4:8",
														"type": ""
													}
												],
												"src": "2789:375:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3298:145:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3308:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3320:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3308:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3350:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3381:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3386:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3377:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3377:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3390:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3373:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3373:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3343:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3414:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3425:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:18:8"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3259:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3270:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3278:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3289:4:8",
														"type": ""
													}
												],
												"src": "3169:274:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3526:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3572:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3581:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3584:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3574:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3547:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3543:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3568:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:32:8"
															},
															"nodeType": "YulIf",
															"src": "3536:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3597:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3610:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3601:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3679:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3688:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3691:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3681:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3648:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3669:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3662:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3662:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3655:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3655:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3645:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3645:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:40:8"
															},
															"nodeType": "YulIf",
															"src": "3635:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3704:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3714:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3704:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3492:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3503:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3515:6:8",
														"type": ""
													}
												],
												"src": "3448:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3867:275:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3877:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3897:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3891:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3881:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3913:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3922:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3917:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3984:77:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4009:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4014:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4005:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4005:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "4032:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4040:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4028:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4028:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4044:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4024:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4024:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4018:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4018:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3998:53:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3998:53:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3943:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3946:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3940:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3954:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3956:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3965:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3968:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3961:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3961:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3956:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3936:3:8",
																"statements": []
															},
															"src": "3932:129:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4070:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4084:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4089:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4080:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:16:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4074:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4112:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4116:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:13:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4105:13:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4127:9:8",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "4134:2:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3843:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3848:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3859:3:8",
														"type": ""
													}
												],
												"src": "3730:412:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$225(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"925": [
									{
										"length": 32,
										"start": 164
									},
									{
										"length": 32,
										"start": 686
									},
									{
										"length": 32,
										"start": 822
									},
									{
										"length": 32,
										"start": 965
									},
									{
										"length": 32,
										"start": 1365
									}
								],
								"928": [
									{
										"length": 32,
										"start": 276
									},
									{
										"length": 32,
										"start": 739
									},
									{
										"length": 32,
										"start": 780
									},
									{
										"length": 32,
										"start": 1026
									},
									{
										"length": 32,
										"start": 1418
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063715018a611610063578063715018a6146101495780638da5cb5b146101515780639cd441da14610162578063dc5fa6c514610175578063f2fde38b1461017e575f80fd5b80630fc63d101461009f57806319e36f3b146100e357806356d9be4c146100fa5780635f64b55b1461010f5780636ff1c9bc14610136575b5f80fd5b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec60035481565b6040519081526020016100da565b61010d610108366004610915565b610191565b005b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b61010d610144366004610949565b6103bb565b61010d6104d5565b6001546001600160a01b03166100c6565b61010d610170366004610915565b6104e8565b6100ec60025481565b61010d61018c366004610949565b6105f6565b610199610635565b60025415806101a85750600354155b156101c657604051636180f03f60e11b815260040160405180910390fd5b815f036101e657604051631f2a200560e01b815260040160405180910390fd5b805f0361020657604051631f2a200560e01b815260040160405180910390fd5b5f610213836103e5610978565b90505f600354826102249190610978565b90505f826002546103e86102389190610978565b610242919061098f565b90505f61024f82846109a2565b9050848110156102725760405163bb2875c360e01b815260040160405180910390fd5b8560025f828254610283919061098f565b925050819055508060035f82825461029b91906109c1565b909155506102d690506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308961065d565b61030a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836106ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b285089856040516103a2929190918252602082015260400190565b60405180910390a4505050506103b760015f55565b5050565b6103c3610700565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561043757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b156104555760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526104d29033906001600160a01b038416906370a0823190602401602060405180830381865afa15801561049d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c191906109d4565b6001600160a01b03841691906106ca565b50565b6104dd610700565b6104e65f61072d565b565b6104f0610635565b8115806104fb575080155b1561051957604051631f2a200560e01b815260040160405180910390fd5b8160025f82825461052a919061098f565b925050819055508060035f828254610542919061098f565b9091555061057d90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561065d565b6105b26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461065d565b604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a26103b760015f55565b6105fe610700565b6001600160a01b03811661062c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6104d28161072d565b60025f540361065757604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6040516001600160a01b0384811660248301528381166044830152606482018390526106c49186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061077e565b50505050565b6040516001600160a01b038381166024830152604482018390526106fb91859182169063a9059cbb90606401610692565b505050565b6001546001600160a01b031633146104e65760405163118cdaa760e01b8152336004820152602401610623565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107926001600160a01b038416836107df565b905080515f141580156107b65750808060200190518101906107b491906109eb565b155b156106fb57604051635274afe760e01b81526001600160a01b0384166004820152602401610623565b60606107ec83835f6107f5565b90505b92915050565b60608147101561081a5760405163cd78605960e01b8152306004820152602401610623565b5f80856001600160a01b031684866040516108359190610a0a565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b5091509150610884868383610890565b925050505b9392505050565b6060826108a5576108a0826108ec565b610889565b81511580156108bc57506001600160a01b0384163b155b156108e557604051639996b31560e01b81526001600160a01b0385166004820152602401610623565b5080610889565b8051156108fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f8060408385031215610926575f80fd5b50508035926020909101359150565b6001600160a01b03811681146104d2575f80fd5b5f60208284031215610959575f80fd5b813561088981610935565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107ef576107ef610964565b808201808211156107ef576107ef610964565b5f826109bc57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156107ef576107ef610964565b5f602082840312156109e4575f80fd5b5051919050565b5f602082840312156109fb575f80fd5b81518015158114610889575f80fd5b5f82515f5b81811015610a295760208186018101518583015201610a0f565b505f92019182525091905056fea2646970667358221220781c05cdb05913b6c109aeeabcc8322ed6a6c5c321fe1c61953aa889b797c7e564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x213 DUP4 PUSH2 0x3E5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 SLOAD PUSH2 0x3E8 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24F DUP3 DUP5 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2D6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x30A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x700 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x4D2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x4E6 PUSH0 PUSH2 0x72D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x635 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x4FB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x57D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x5B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6C4 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x692 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EC DUP4 DUP4 PUSH0 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x884 DUP7 DUP4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x8A5 JUMPI PUSH2 0x8A0 DUP3 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST POP DUP1 PUSH2 0x889 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x889 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x889 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA0F JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x1C05CDB05913B6C109AEEABCC8322ED6A6C5C321FE1C61953A 0xA8 DUP10 0xB7 SWAP8 0xC7 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "904:3619:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:30;;;;;;;;-1:-1:-1;;;;;192:32:8;;;174:51;;162:2;147:18;1130:30:7;;;;;;;;1236:23;;;;;;;;;382:25:8;;;370:2;355:18;1236:23:7;236:177:8;2987:1171:7;;;;;;:::i;:::-;;:::i;:::-;;1167:30;;;;;4208:312;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2171:539:7;;;;;;:::i;:::-;;:::i;1206:23::-;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;2987:1171:7:-;2356:21:6;:19;:21::i;:::-;1649:8:7::1;::::0;:13;;:30:::1;;-1:-1:-1::0;1666:8:7::1;::::0;:13;1649:30:::1;1645:56;;;1688:13;;-1:-1:-1::0;;;1688:13:7::1;;;;;;;;;;;1645:56;3132:9:::2;3145:1;3132:14:::0;3128:39:::2;;3155:12;;-1:-1:-1::0;;;3155:12:7::2;;;;;;;;;;;3128:39;3182:12;3198:1;3182:17:::0;3178:42:::2;;3208:12;;-1:-1:-1::0;;;3208:12:7::2;;;;;;;;;;;3178:42;3296:23;3322:15;:9:::0;3334:3:::2;3322:15;:::i;:::-;3296:41;;3348:17;3386:8;;3368:15;:26;;;;:::i;:::-;3348:46;;3405:19;3447:15;3428:8;;3439:4;3428:15;;;;:::i;:::-;3427:35;;;;:::i;:::-;3405:57:::0;-1:-1:-1;3473:18:7::2;3494:23;3405:57:::0;3494:9;:23:::2;:::i;:::-;3473:44;;3615:12;3602:10;:25;3598:85;;;3651:20;;-1:-1:-1::0;;;3651:20:7::2;;;;;;;;;;;3598:85;3765:9;3753:8;;:21;;;;;;;:::i;:::-;;;;;;;;3797:10;3785:8;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;3865:61:7::2;::::0;-1:-1:-1;;;;;;3865:6:7::2;:23;3889:10;3909:4;3916:9:::0;3865:23:::2;:61::i;:::-;3937:43;-1:-1:-1::0;;;;;3937:6:7::2;:19;3957:10;3969::::0;3937:19:::2;:43::i;:::-;4132:6;-1:-1:-1::0;;;;;3998:152:7::2;4102:6;-1:-1:-1::0;;;;;3998:152:7::2;4020:10;-1:-1:-1::0;;;;;3998:152:7::2;;4045:9;4069:10;3998:152;;;;;;2521:25:8::0;;;2577:2;2562:18;;2555:34;2509:2;2494:18;;2347:248;3998:152:7::2;;;;;;;;3117:1041;;;;2398:20:6::0;1713:1;2924:7;:21;2744:208;2398:20;2987:1171:7;;:::o;4208:312::-;1531:13:0;:11;:13::i;:::-;4323:6:7::1;-1:-1:-1::0;;;;;4297:33:7::1;4305:5;-1:-1:-1::0;;;;;4297:33:7::1;;;:83;;;;;4373:6;-1:-1:-1::0;;;;;4347:33:7::1;4355:5;-1:-1:-1::0;;;;;4347:33:7::1;;;4297:83;4279:161;;;4414:14;;-1:-1:-1::0;;;4414:14:7::1;;;;;;;;;;;4279:161;4481:30;::::0;-1:-1:-1;;;4481:30:7;;4505:4:::1;4481:30;::::0;::::1;174:51:8::0;4450:62:7::1;::::0;4469:10:::1;::::0;-1:-1:-1;;;;;4481:15:7;::::1;::::0;::::1;::::0;147:18:8;;4481:30:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4450:18:7;::::1;::::0;:62;:18:::1;:62::i;:::-;4208:312:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2171:539:7:-;2356:21:6;:19;:21::i;:::-;2289:12:7;;;:28:::1;;-1:-1:-1::0;2305:12:7;;2289:28:::1;2285:80;;;2341:12;;-1:-1:-1::0;;;2341:12:7::1;;;;;;;;;;;2285:80;2417:7;2405:8;;:19;;;;;;;:::i;:::-;;;;;;;;2447:7;2435:8;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;2511:59:7::1;::::0;-1:-1:-1;;;;;;2511:6:7::1;:23;2535:10;2555:4;2562:7:::0;2511:23:::1;:59::i;:::-;2581;-1:-1:-1::0;;;;;2581:6:7::1;:23;2605:10;2625:4;2632:7:::0;2581:23:::1;:59::i;:::-;2658:44;::::0;;2521:25:8;;;2577:2;2562:18;;2555:34;;;2673:10:7::1;::::0;2658:44:::1;::::0;2494:18:8;2658:44:7::1;;;;;;;2398:20:6::0;1713:1;2924:7;:21;2744:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;174:51:8::0;147:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;2431:307:6:-:0;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:6;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1702:188:3:-;1829:53;;-1:-1:-1;;;;;3047:15:8;;;1829:53:3;;;3029:34:8;3099:15;;;3079:18;;;3072:43;3131:18;;;3124:34;;;1802:81:3;;1822:5;;1844:18;;;;;2964::8;;1829:53:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:3;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1412:43;;-1:-1:-1;;;;;3361:32:8;;;1412:43:3;;;3343:51:8;3410:18;;;3403:34;;;1385:71:3;;1405:5;;1427:14;;;;;3316:18:8;;1412:43:3;3169:274:8;1385:71:3;1303:160;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;174:51:8;147:18;;1901:40:0;14:217:8;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;4059:629:3:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:3;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:3;;-1:-1:-1;;;;;192:32:8;;4631:40:3;;;174:51:8;147:18;;4631:40:3;14:217:8;2705:151:4;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:4;;3394:4;3359:41;;;174:51:8;147:18;;3359:41:4;14:217:8;3303:108:4;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:4;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:4;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:4;;-1:-1:-1;;;;;192:32:8;;5121:24:4;;;174:51:8;147:18;;5121:24:4;14:217:8;5041:119:4;-1:-1:-1;5180:10:4;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:4;;;;;;;;;;;418:248:8;486:6;494;547:2;535:9;526:7;522:23;518:32;515:52;;;563:1;560;553:12;515:52;-1:-1:-1;;586:23:8;;;656:2;641:18;;;628:32;;-1:-1:-1;418:248:8:o;671:139::-;-1:-1:-1;;;;;754:31:8;;744:42;;734:70;;800:1;797;790:12;815:269;888:6;941:2;929:9;920:7;916:23;912:32;909:52;;;957:1;954;947:12;909:52;996:9;983:23;1015:39;1048:5;1015:39;:::i;1557:127::-;1618:10;1613:3;1609:20;1606:1;1599:31;1649:4;1646:1;1639:15;1673:4;1670:1;1663:15;1689:168;1762:9;;;1793;;1810:15;;;1804:22;;1790:37;1780:71;;1831:18;;:::i;1862:125::-;1927:9;;;1948:10;;;1945:36;;;1961:18;;:::i;1992:217::-;2032:1;2058;2048:132;;2102:10;2097:3;2093:20;2090:1;2083:31;2137:4;2134:1;2127:15;2165:4;2162:1;2155:15;2048:132;-1:-1:-1;2194:9:8;;1992:217::o;2214:128::-;2281:9;;;2302:11;;;2299:37;;;2316:18;;:::i;2600:184::-;2670:6;2723:2;2711:9;2702:7;2698:23;2694:32;2691:52;;;2739:1;2736;2729:12;2691:52;-1:-1:-1;2762:16:8;;2600:184;-1:-1:-1;2600:184:8:o;3448:277::-;3515:6;3568:2;3556:9;3547:7;3543:23;3539:32;3536:52;;;3584:1;3581;3574:12;3536:52;3616:9;3610:16;3669:5;3662:13;3655:21;3648:5;3645:32;3635:60;;3691:1;3688;3681:12;3730:412;3859:3;3897:6;3891:13;3922:1;3932:129;3946:6;3943:1;3940:13;3932:129;;;4044:4;4028:14;;;4024:25;;4018:32;4005:11;;;3998:53;3961:12;3932:129;;;-1:-1:-1;4116:1:8;4080:16;;4105:13;;;-1:-1:-1;4080:16:8;3730:412;-1:-1:-1;3730:412:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "533600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"emergencyWithdraw(address)": "infinite",
								"owner()": "2341",
								"renounceOwnership()": "infinite",
								"reserveA()": "2360",
								"reserveB()": "2317",
								"swapTokenAForTokenB(uint256,uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1729,
									"end": 2163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1729,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1830,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1820,
									"end": 1830,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1865,
									"end": 1892,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1892,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1923,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1865,
									"end": 1923,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1923,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1923,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1923,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1865,
									"end": 1923,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1972,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1972,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1861,
									"end": 1972,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1947,
									"end": 1960,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1861,
									"end": 1972,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1861,
									"end": 1972,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2003,
									"end": 2016,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1986,
									"end": 2016,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1986,
									"end": 1999,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1986,
									"end": 2016,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1986,
									"end": 2016,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1982,
									"end": 2072,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1982,
									"end": 2072,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BD969EB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2060,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1982,
									"end": 2072,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1982,
									"end": 2072,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2084,
									"end": 2114,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2114,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2114,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2084,
									"end": 2114,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2155,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2155,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2125,
									"end": 2155,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "928"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "925"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 4523,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220781c05cdb05913b6c109aeeabcc8322ed6a6c5c321fe1c61953aa889b797c7e564736f6c63430008140033",
									".code": [
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "9CD441DA"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "DC5FA6C5"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "FC63D10"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "19E36F3B"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "56D9BE4C"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "5F64B55B"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "6FF1C9BC"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 904,
											"end": 4523,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "925"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 174,
											"end": 225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 382,
											"end": 407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 370,
											"end": 372,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 413,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2987,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2987,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "928"
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1197,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4208,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4208,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2171,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2171,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1657,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1662,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1649,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1666,
											"end": 1674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1666,
											"end": 1674,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1649,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1701,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1645,
											"end": 1701,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6180F03F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1701,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1645,
											"end": 1701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3132,
											"end": 3141,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3146,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3146,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3128,
											"end": 3167,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3167,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3167,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3128,
											"end": 3167,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3194,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3199,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3178,
											"end": 3220,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3220,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3220,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3178,
											"end": 3220,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3319,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E5"
										},
										{
											"begin": 3322,
											"end": 3337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3322,
											"end": 3337,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3322,
											"end": 3337,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3322,
											"end": 3337,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3337,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3337,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3386,
											"end": 3394,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3383,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3368,
											"end": 3394,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3368,
											"end": 3394,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3394,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3394,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3424,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3462,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3428,
											"end": 3436,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3428,
											"end": 3443,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3427,
											"end": 3462,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3427,
											"end": 3462,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3405,
											"end": 3462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3491,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3405,
											"end": 3462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3494,
											"end": 3517,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3517,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3494,
											"end": 3517,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3517,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3517,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3627,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3627,
											"modifierDepth": 2,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3683,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3683,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3598,
											"end": 3683,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB2875C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3671,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3683,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3598,
											"end": 3683,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3774,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3753,
											"end": 3761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3753,
											"end": 3774,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3774,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3807,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3785,
											"end": 3793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3785,
											"end": 3807,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3785,
											"end": 3807,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3807,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3865,
											"end": 3926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3871,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "925"
										},
										{
											"begin": 3865,
											"end": 3888,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3889,
											"end": 3899,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3913,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3888,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3865,
											"end": 3926,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3926,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3865,
											"end": 3926,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "928"
										},
										{
											"begin": 3937,
											"end": 3956,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3967,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3956,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3937,
											"end": 3980,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3980,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3937,
											"end": 3980,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4138,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "928"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4108,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "925"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4030,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "DBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850"
										},
										{
											"begin": 4045,
											"end": 4054,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4079,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2347,
											"end": 2595,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4150,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 4158,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 4158,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 4158,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 4158,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2987,
											"end": 4158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "925"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4305,
											"end": 4310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4330,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4330,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "928"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4380,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4380,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4380,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4297,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4440,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4279,
											"end": 4440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1AB6DC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4428,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4279,
											"end": 4440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4505,
											"end": 4509,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4450,
											"end": 4512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4479,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4481,
											"end": 4511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 4481,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4450,
											"end": 4512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4450,
											"end": 4512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2171,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2289,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2289,
											"end": 2317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2365,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2285,
											"end": 2365,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2353,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2285,
											"end": 2365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2405,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2405,
											"end": 2424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2424,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2454,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2435,
											"end": 2443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2435,
											"end": 2454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2435,
											"end": 2454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2511,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2511,
											"end": 2570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2511,
											"end": 2517,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "925"
										},
										{
											"begin": 2511,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2545,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2559,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2511,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2511,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2581,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "928"
										},
										{
											"begin": 2581,
											"end": 2604,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2615,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2625,
											"end": 2629,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2639,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2581,
											"end": 2640,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2581,
											"end": 2640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2683,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2673,
											"end": 2683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "AC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45"
										},
										{
											"begin": 2658,
											"end": 2702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2702,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3072,
											"end": 3115,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3169,
											"end": 3443,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 418,
											"end": 666,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 418,
											"end": 666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 547,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 544,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 518,
											"end": 550,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 567,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 515,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 515,
											"end": 567,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 553,
											"end": 565,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 567,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 515,
											"end": 567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 609,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 586,
											"end": 609,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 586,
											"end": 609,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 418,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 671,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 671,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 754,
											"end": 785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 754,
											"end": 785,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 744,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 744,
											"end": 786,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 734,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 734,
											"end": 804,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 790,
											"end": 802,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 815,
											"end": 1084,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 815,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 920,
											"end": 927,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 916,
											"end": 939,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 912,
											"end": 944,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 909,
											"end": 961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 909,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 909,
											"end": 961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 947,
											"end": 959,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 909,
											"end": 961,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 909,
											"end": 961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 996,
											"end": 1005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1015,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1684,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1557,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1630,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1677,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1857,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1689,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1804,
											"end": 1826,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1804,
											"end": 1826,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1780,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1780,
											"end": 1851,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1831,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1862,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2209,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1992,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2127,
											"end": 2142,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1992,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2342,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2214,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2316,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 2316,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2721,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2778,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3725,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3448,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3543,
											"end": 3566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3571,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3677,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3635,
											"end": 3695,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3681,
											"end": 3693,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3946,
											"end": 3952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3953,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 4142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.0/utils/Address.sol",
								"@openzeppelin/contracts@5.0.0/utils/Context.sol",
								"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
								"contract/MyDEX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swapTokenAForTokenB(uint256,uint256)": "56d9be4c",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoLiquidity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenAForTokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"(Your Name)\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swapTokenAForTokenB(uint256,uint256)\":{\"params\":{\"amountInA\":\"The exact amount of Token A being sent.\",\"amountOutMin\":\"The *minimum* amount of Token B the user is willing to accept. This prevents MEV.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MyHyperOptimizedDEX\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapTokenAForTokenB(uint256,uint256)\":{\"notice\":\"Swaps Token A for Token B with slippage protection.\"}},\"notice\":\"A production-grade, gas-optimized, and hardened AMM.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX.sol\":\"MyHyperOptimizedDEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.0/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts@5.0.0/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contract/MyDEX.sol\":{\"keccak256\":\"0xbaa488bc08c72050b4f6b0ae8e568380d3e88cc57145fb9f23c525609fc1f268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42bc9628c288c9216c179675d1cde96d6be6b60b31bbee4516ba6287c465b491\",\"dweb:/ipfs/QmPKomMNidx8XExpx1zk21nZWgbXd2QSryQLXqoksYx1iC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "contract/MyDEX.sol:MyHyperOptimizedDEX",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contract/MyDEX.sol:MyHyperOptimizedDEX",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 930,
								"contract": "contract/MyDEX.sol:MyHyperOptimizedDEX",
								"label": "reserveA",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 932,
								"contract": "contract/MyDEX.sol:MyHyperOptimizedDEX",
								"label": "reserveB",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapTokenAForTokenB(uint256,uint256)": {
								"notice": "Swaps Token A for Token B with slippage protection."
							}
						},
						"notice": "A production-grade, gas-optimized, and hardened AMM.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							826
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 827,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 826,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								826
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.0/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 826,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 826,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 827,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							895
						]
					},
					"id": 896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 829,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 895,
							"linearizedBaseContracts": [
								895
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 832,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1674:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 835,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1720:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 837,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 895,
									"src": "1763:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 836,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 840,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:6"
									},
									"src": "1850:37:6"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1907:38:6",
										"statements": [
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 843,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "1917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "1927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:6"
											}
										]
									},
									"id": 848,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:6"
									},
									"scope": 895,
									"src": "1893:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "2346:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "2356:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:6"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 855,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2398:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 859,
									"name": "nonReentrant",
									"nameLocation": "2331:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:6"
									},
									"src": "2322:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2470:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2558:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 863,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "2554:86:6",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "2578:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 865,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "2599:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "2592:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2714:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2724:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:6"
											}
										]
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:6"
									},
									"scope": 895,
									"src": "2431:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2782:170:6",
										"statements": [
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "2924:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "2934:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:6"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 895,
									"src": "2744:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "3195:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 889,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3212:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 890,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3223:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 888,
												"id": 892,
												"nodeType": "Return",
												"src": "3205:25:6"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:6"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "3189:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:6"
									},
									"scope": 895,
									"src": "3131:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 896,
							"src": "886:2353:6",
							"usedErrors": [
								840
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:6"
				},
				"id": 6
			},
			"contract/MyDEX.sol": {
				"ast": {
					"absolutePath": "contract/MyDEX.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							826
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"IdenticalAddresses": [
							905
						],
						"InsufficientOutput": [
							911
						],
						"InvalidToken": [
							913
						],
						"MyHyperOptimizedDEX": [
							1233
						],
						"NoLiquidity": [
							909
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							895
						],
						"SafeERC20": [
							551
						],
						"ZeroAddress": [
							903
						],
						"ZeroAmount": [
							907
						]
					},
					"id": 1234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 897,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol",
							"id": 898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 896,
							"src": "197:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 226,
							"src": "264:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.0.0/access/Ownable.sol",
							"id": 900,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 148,
							"src": "328:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol",
							"id": 901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 552,
							"src": "388:71:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "d92e233d",
							"id": 903,
							"name": "ZeroAddress",
							"nameLocation": "632:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 902,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "643:2:7"
							},
							"src": "626:20:7"
						},
						{
							"errorSelector": "bd969eb0",
							"id": 905,
							"name": "IdenticalAddresses",
							"nameLocation": "654:18:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 904,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "672:2:7"
							},
							"src": "648:27:7"
						},
						{
							"errorSelector": "1f2a2005",
							"id": 907,
							"name": "ZeroAmount",
							"nameLocation": "683:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 906,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "693:2:7"
							},
							"src": "677:19:7"
						},
						{
							"errorSelector": "c301e07e",
							"id": 909,
							"name": "NoLiquidity",
							"nameLocation": "704:11:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 908,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "715:2:7"
							},
							"src": "698:20:7"
						},
						{
							"errorSelector": "bb2875c3",
							"id": 911,
							"name": "InsufficientOutput",
							"nameLocation": "726:18:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 910,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "744:2:7"
							},
							"src": "720:27:7"
						},
						{
							"errorSelector": "c1ab6dc1",
							"id": 913,
							"name": "InvalidToken",
							"nameLocation": "755:12:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 912,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "767:2:7"
							},
							"src": "749:21:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 915,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"936:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 895,
										"src": "936:15:7"
									},
									"id": 916,
									"nodeType": "InheritanceSpecifier",
									"src": "936:15:7"
								},
								{
									"baseName": {
										"id": 917,
										"name": "Ownable",
										"nameLocations": [
											"953:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "953:7:7"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "953:7:7"
								}
							],
							"canonicalName": "MyHyperOptimizedDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 914,
								"nodeType": "StructuredDocumentation",
								"src": "774:128:7",
								"text": " @title MyHyperOptimizedDEX\n @author (Your Name)\n @notice A production-grade, gas-optimized, and hardened AMM."
							},
							"fullyImplemented": true,
							"id": 1233,
							"linearizedBaseContracts": [
								1233,
								147,
								826,
								895
							],
							"name": "MyHyperOptimizedDEX",
							"nameLocation": "913:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 922,
									"libraryName": {
										"id": 919,
										"name": "SafeERC20",
										"nameLocations": [
											"1000:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "1000:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "994:27:7",
									"typeName": {
										"id": 921,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 920,
											"name": "IERC20",
											"nameLocations": [
												"1014:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1014:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1014:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 925,
									"mutability": "immutable",
									"name": "tokenA",
									"nameLocation": "1154:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1130:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 924,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 923,
											"name": "IERC20",
											"nameLocations": [
												"1130:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1130:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1130:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 928,
									"mutability": "immutable",
									"name": "tokenB",
									"nameLocation": "1191:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1167:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 927,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 926,
											"name": "IERC20",
											"nameLocations": [
												"1167:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "1167:6:7"
										},
										"referencedDeclaration": 225,
										"src": "1167:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 930,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "1221:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1206:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 929,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1206:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 932,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "1251:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1236:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1236:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850",
									"id": 944,
									"name": "Swapped",
									"nameLocation": "1297:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1331:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1315:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1353:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1348:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1348:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1377:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1372:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1413:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1397:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1447:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1431:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:158:7"
									},
									"src": "1291:172:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45",
									"id": 952,
									"name": "LiquidityAdded",
									"nameLocation": "1475:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1516:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1500:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1538:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1533:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1561:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1556:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1556:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:86:7"
									},
									"src": "1469:107:7"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1634:87:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 954,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "1649:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1661:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1649:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 957,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "1666:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1678:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1666:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1649:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "1645:56:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 961,
															"name": "NoLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "1688:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1688:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 963,
													"nodeType": "RevertStatement",
													"src": "1681:20:7"
												}
											},
											{
												"id": 965,
												"nodeType": "PlaceholderStatement",
												"src": "1712:1:7"
											}
										]
									},
									"id": 967,
									"name": "hasLiquidity",
									"nameLocation": "1619:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:7"
									},
									"src": "1610:111:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "1850:313:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 980,
															"name": "tokenAAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1865:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1890:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1882:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1882:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1882:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1865:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 986,
															"name": "tokenBAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1896:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1921:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1913:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1913:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1896:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1865:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "1861:111:7",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "1925:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 993,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "1947:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1947:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "RevertStatement",
															"src": "1940:20:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "tokenAAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1986:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 999,
														"name": "tokenBAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2003:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1986:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1005,
												"nodeType": "IfStatement",
												"src": "1982:90:7",
												"trueBody": {
													"id": 1004,
													"nodeType": "Block",
													"src": "2018:54:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1001,
																	"name": "IdenticalAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "2040:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2040:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1003,
															"nodeType": "RevertStatement",
															"src": "2033:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2084:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1008,
																"name": "tokenAAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "2100:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1007,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2093:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2093:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "2084:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2084:30:7"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2125:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1014,
																"name": "tokenBAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "2141:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1013,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "2134:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2134:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "2125:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "2125:30:7"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1820:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1824:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1820:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 976,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 973,
												"name": "Ownable",
												"nameLocations": [
													"1812:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1812:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1812:19:7"
										},
										{
											"arguments": [],
											"id": 978,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 977,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"1832:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 895,
												"src": "1832:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1832:17:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "tokenAAddress",
												"nameLocation": "1759:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1751:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "tokenBAddress",
												"nameLocation": "1791:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1783:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1740:71:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:0:7"
									},
									"scope": 1233,
									"src": "1729:434:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "2274:436:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1028,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2289:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2300:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2289:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1031,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "2305:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2305:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2289:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "IfStatement",
												"src": "2285:80:7",
												"trueBody": {
													"id": 1038,
													"nodeType": "Block",
													"src": "2319:46:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1035,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "2341:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1037,
															"nodeType": "RevertStatement",
															"src": "2334:19:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2405:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1041,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "2417:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2405:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "2405:19:7"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2435:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1045,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2447:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2435:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "2435:19:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1051,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2535:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2539:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2535:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1055,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2555:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2547:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1053,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2547:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2547:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2562:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1048,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "2511:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2518:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "2511:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "2511:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1063,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2605:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2609:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2605:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1067,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2625:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2617:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2617:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2617:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "2632:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1060,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "2581:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2588:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "2581:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "2581:59:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1073,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2673:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2677:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2673:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "2685:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1076,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "2694:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1072,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2658:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "EmitStatement",
												"src": "2653:49:7"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1025,
												"name": "nonReentrant",
												"nameLocations": [
													"2261:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "2261:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2261:12:7"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2180:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "2203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2237:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "2229:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:59:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2274:0:7"
									},
									"scope": 1233,
									"src": "2171:539:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "3117:1041:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3132:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3145:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3132:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "3128:39:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1095,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3155:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3155:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1097,
													"nodeType": "RevertStatement",
													"src": "3148:19:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3182:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3198:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3182:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1105,
												"nodeType": "IfStatement",
												"src": "3178:42:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1102,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3208:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3208:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1104,
													"nodeType": "RevertStatement",
													"src": "3201:19:7"
												}
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "3304:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "3296:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3322:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "3322:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3296:41:7"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "3356:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "3348:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3368:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1115,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3386:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3368:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:46:7"
											},
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "3413:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "3405:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3405:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "3428:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3439:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "3428:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1123,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3427:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1124,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3447:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3427:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3405:57:7"
											},
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "amountOutB",
														"nameLocation": "3481:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1184,
														"src": "3473:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3473:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1129,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "3494:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1130,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "3506:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3494:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3473:44:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1133,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3602:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1134,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3615:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3602:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "3598:85:7",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "3629:54:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1136,
																	"name": "InsufficientOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "3651:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3651:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1138,
															"nodeType": "RevertStatement",
															"src": "3644:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "3753:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1142,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3765:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3753:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "3753:21:7"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "3785:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1146,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3797:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3785:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "3785:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3889:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3893:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3889:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3909:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3901:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3901:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3901:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "3916:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1149,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3865:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3872:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3865:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3865:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3957:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3961:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3957:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3969:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1161,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3937:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3944:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "3937:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3937:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3937:43:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4020:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4024:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4020:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "4045:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1173,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "4069:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1176,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "4102:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4094:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1174,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4094:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4094:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1180,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "4132:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4124:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1178,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4124:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4124:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1169,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3998:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3998:152:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "EmitStatement",
												"src": "3993:157:7"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "2718:263:7",
										"text": " @notice Swaps Token A for Token B with slippage protection.\n @param amountInA The exact amount of Token A being sent.\n @param amountOutMin The *minimum* amount of Token B the user\n is willing to accept. This prevents MEV."
									},
									"functionSelector": "56d9be4c",
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "nonReentrant",
												"nameLocations": [
													"3091:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "3091:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3091:12:7"
										},
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "hasLiquidity",
												"nameLocations": [
													"3104:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 967,
												"src": "3104:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3104:12:7"
										}
									],
									"name": "swapTokenAForTokenB",
									"nameLocation": "2996:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amountInA",
												"nameLocation": "3034:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3026:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3062:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3054:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3015:66:7"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3117:0:7"
									},
									"scope": 1233,
									"src": "2987:1171:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "4268:252:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1195,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4305:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4297:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4297:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4297:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1199,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "4323:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4315:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1197,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4315:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4315:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4297:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1204,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4355:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4347:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4347:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4347:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1208,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "4373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4365:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1206,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4365:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4365:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4347:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4297:83:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1216,
												"nodeType": "IfStatement",
												"src": "4279:161:7",
												"trueBody": {
													"id": 1215,
													"nodeType": "Block",
													"src": "4392:48:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1212,
																	"name": "InvalidToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "4414:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1214,
															"nodeType": "RevertStatement",
															"src": "4407:21:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4469:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4473:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4469:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1226,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4505:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																				"typeString": "contract MyHyperOptimizedDEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1233",
																				"typeString": "contract MyHyperOptimizedDEX"
																			}
																		],
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4497:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1224,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4497:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4497:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1222,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "4481:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4487:9:7",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "4481:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4481:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1217,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4450:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4456:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "4450:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4450:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "4450:62:7"
											}
										]
									},
									"functionSelector": "6ff1c9bc",
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1190,
												"name": "onlyOwner",
												"nameLocations": [
													"4258:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4258:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4258:9:7"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "4217:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "4235:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "IERC20",
														"nameLocations": [
															"4235:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4235:6:7"
													},
													"referencedDeclaration": 225,
													"src": "4235:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:14:7"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:7"
									},
									"scope": 1233,
									"src": "4208:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1234,
							"src": "904:3619:7",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567,
								840,
								903,
								905,
								907,
								909,
								911,
								913
							],
							"usedEvents": [
								24,
								944,
								952
							]
						}
					],
					"src": "108:4415:7"
				},
				"id": 7
			}
		}
	}
}