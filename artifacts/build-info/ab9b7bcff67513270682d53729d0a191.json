{
	"id": "ab9b7bcff67513270682d53729d0a191",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/MyDEX_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts@5.0.0/utils/ReentrancyGuard.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n\n// File: contract/MyDEX.sol\n\n\n// LOCKED PRAGMA: Uses a specific, secure compiler version for stability.\npragma solidity 0.8.24;\n\n// --- Imports: All battle-tested OpenZeppelin libraries ---\n\n\n\n\n\n// --- CUSTOM ERRORS (GAS OPTIMIZATION) ---\n// Using custom errors instead of `require(..., \"string\")`\n// saves significant gas on both deployment and runtime.\nerror ZeroAddress();\nerror IdenticalAddresses();\nerror ZeroAmount();\nerror NoLiquidity();\nerror InsufficientOutput();\nerror InvalidToken();\nerror TransferFailed(); // We won't use this, as SafeERC20 has its own.\n\n/**\n * @title MyHyperOptimizedDEX\n * @author (Your Name)\n * @notice A production-grade, gas-optimized, and hardened AMM.\n */\ncontract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {\n    // --- LIBRARIES ---\n    using SafeERC20 for IERC20;\n\n    // --- STATE VARIABLES ---\n    // `immutable` saves gas by storing these in code, not storage.\n    IERC20 public immutable tokenA;\n    IERC20 public immutable tokenB;\n\n    uint256 public reserveA;\n    uint256 public reserveB;\n\n    // --- EVENTS ---\n    event Swapped(\n        address indexed sender,\n        uint amountIn,\n        uint amountOut,\n        address indexed tokenIn,\n        address indexed tokenOut\n    );\n    event LiquidityAdded(\n        address indexed sender,\n        uint amountA,\n        uint amountB\n    );\n\n    // --- MODIFIERS ---\n    modifier hasLiquidity() {\n        if (reserveA == 0 || reserveB == 0) revert NoLiquidity();\n        _;\n    }\n\n    constructor(\n        address tokenAAddress,\n        address tokenBAddress\n    ) Ownable(msg.sender) ReentrancyGuard() {\n        if (tokenAAddress == address(0) || tokenBAddress == address(0)) {\n            revert ZeroAddress();\n        }\n        if (tokenAAddress == tokenBAddress) {\n            revert IdenticalAddresses();\n        }\n\n        tokenA = IERC20(tokenAAddress);\n        tokenB = IERC20(tokenBAddress);\n    }\n\n    function addLiquidity(\n        uint256 amountA,\n        uint256 amountB\n    ) external nonReentrant {\n        if (amountA == 0 || amountB == 0) {\n            revert ZeroAmount();\n        }\n\n        // --- EFFECTS ---\n        reserveA += amountA;\n        reserveB += amountB;\n\n        // --- INTERACTIONS (Hardened) ---\n        tokenA.safeTransferFrom(msg.sender, address(this), amountA);\n        tokenB.safeTransferFrom(msg.sender, address(this), amountB);\n\n        emit LiquidityAdded(msg.sender, amountA, amountB);\n    }\n\n    /**\n     * @notice Swaps Token A for Token B with slippage protection.\n     * @param amountInA The exact amount of Token A being sent.\n     * @param amountOutMin The *minimum* amount of Token B the user\n     * is willing to accept. This prevents MEV.\n     */\n    function swapTokenAForTokenB(\n        uint256 amountInA,\n        uint256 amountOutMin\n    ) external nonReentrant hasLiquidity {\n        if (amountInA == 0) revert ZeroAmount();\n        if (amountOutMin == 0) revert ZeroAmount();\n\n        // --- HARDENING: Uniswap V2 Math (with 0.3% fee) ---\n        uint256 amountInWithFee = amountInA * 997;\n        uint256 numerator = amountInWithFee * reserveB;\n        uint256 denominator = (reserveA * 1000) + amountInWithFee;\n        uint256 amountOutB = numerator / denominator;\n\n        // --- HARDENING: Slippage Check (This is the MEV-fix) ---\n        if (amountOutB < amountOutMin) {\n            revert InsufficientOutput();\n        }\n\n        // --- EFFECTS (Checks-Effects-Interactions) ---\n        reserveA += amountInA;\n        reserveB -= amountOutB;\n\n        // --- INTERACTIONS (Hardened) ---\n        tokenA.safeTransferFrom(msg.sender, address(this), amountInA);\n        tokenB.safeTransfer(msg.sender, amountOutB);\n\n        emit Swapped(\n            msg.sender,\n            amountInA,\n            amountOutB,\n            address(tokenA),\n            address(tokenB)\n        );\n    }\n\n    // --- Admin Function (Hardened) ---\n    function emergencyWithdraw(IERC20 token) external onlyOwner {\n        if (\n            address(token) != address(tokenA) &&\n            address(token) != address(tokenB)\n        ) {\n            revert InvalidToken();\n        }\n        token.safeTransfer(msg.sender, token.balanceOf(address(this)));\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contract/MyDEX_flattened.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyDEX_flattened.sol\":14168:20234  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/MyDEX_flattened.sol\":14168:20234  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220091dcc3a839cebd355dd45e9d7aea571c023c2de7ddd59eb9c1fe299795a694664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220091dcc3a839cebd355dd45e9d7aea571c023c2de7ddd59eb9c1fe299795a694664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SAR 0xCC GASPRICE DUP4 SWAP13 0xEB 0xD3 SSTORE 0xDD GASLIMIT 0xE9 0xD7 0xAE 0xA5 PUSH18 0xC023C2DE7DDD59EB9C1FE299795A69466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "14168:6066:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14168:6066:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220091dcc3a839cebd355dd45e9d7aea571c023c2de7ddd59eb9c1fe299795a694664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SAR 0xCC GASPRICE DUP4 SWAP13 0xEB 0xD3 SSTORE 0xDD GASLIMIT 0xE9 0xD7 0xAE 0xA5 PUSH18 0xC023C2DE7DDD59EB9C1FE299795A69466473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "14168:6066:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14168,
									"end": 20234,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220091dcc3a839cebd355dd45e9d7aea571c023c2de7ddd59eb9c1fe299795a694664736f6c63430008180033",
									".code": [
										{
											"begin": 14168,
											"end": 20234,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14168,
											"end": 20234,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract/MyDEX_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyHyperOptimizedDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenBAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IdenticalAddresses",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientOutput",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoLiquidity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swapTokenAForTokenB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "(Your Name)",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"swapTokenAForTokenB(uint256,uint256)": {
								"params": {
									"amountInA": "The exact amount of Token A being sent.",
									"amountOutMin": "The *minimum* amount of Token B the user is willing to accept. This prevents MEV."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MyHyperOptimizedDEX",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyDEX_flattened.sol\":26592:30093  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contract/MyDEX_flattened.sol\":27385:27806  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/MyDEX_flattened.sol\":1780:1781  1 */\n  0x01\n    /* \"contract/MyDEX_flattened.sol\":1984:1991  _status */\n  0x00\n    /* \"contract/MyDEX_flattened.sol\":1984:2005  _status = NOT_ENTERED */\n  sstore\n    /* \"contract/MyDEX_flattened.sol\":27473:27483  msg.sender */\n  caller\n  dup1\n    /* \"contract/MyDEX_flattened.sol\":8259:8354  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"contract/MyDEX_flattened.sol\":8312:8343  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contract/MyDEX_flattened.sol\":8340:8341  0 */\n  0x00\n    /* \"contract/MyDEX_flattened.sol\":8312:8343  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"contract/MyDEX_flattened.sol\":8312:8343  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/MyDEX_flattened.sol\":8259:8354  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"contract/MyDEX_flattened.sol\":8363:8395  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"contract/MyDEX_flattened.sol\":8382:8394  initialOwner */\n  dup2\n    /* \"contract/MyDEX_flattened.sol\":8363:8381  _transferOwnership */\n  tag_13\n    /* \"contract/MyDEX_flattened.sol\":8363:8395  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":27517:27544  tokenAAddress == address(0) */\n  dup3\n  and\n  iszero\n  dup1\n    /* \"contract/MyDEX_flattened.sol\":27517:27575  tokenAAddress == address(0) || tokenBAddress == address(0) */\n  tag_15\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":27548:27575  tokenBAddress == address(0) */\n  dup2\n  and\n  iszero\n    /* \"contract/MyDEX_flattened.sol\":27517:27575  tokenAAddress == address(0) || tokenBAddress == address(0) */\ntag_15:\n    /* \"contract/MyDEX_flattened.sol\":27513:27622  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\n  iszero\n  tag_16\n  jumpi\n    /* \"contract/MyDEX_flattened.sol\":27598:27611  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/MyDEX_flattened.sol\":27513:27622  if (tokenAAddress == address(0) || tokenBAddress == address(0)) {... */\ntag_16:\n    /* \"contract/MyDEX_flattened.sol\":27652:27665  tokenBAddress */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":27635:27665  tokenAAddress == tokenBAddress */\n  and\n    /* \"contract/MyDEX_flattened.sol\":27635:27648  tokenAAddress */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":27635:27665  tokenAAddress == tokenBAddress */\n  and\n  sub\n    /* \"contract/MyDEX_flattened.sol\":27631:27719  if (tokenAAddress == tokenBAddress) {... */\n  tag_17\n  jumpi\n    /* \"contract/MyDEX_flattened.sol\":27688:27708  IdenticalAddresses() */\n  mload(0x40)\n  shl(0xe4, 0x0bd969eb)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract/MyDEX_flattened.sol\":27631:27719  if (tokenAAddress == tokenBAddress) {... */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":27729:27759  tokenA = IERC20(tokenAAddress) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contract/MyDEX_flattened.sol\":27769:27799  tokenB = IERC20(tokenBAddress) */\n  and\n  0xa0\n  mstore\n    /* \"contract/MyDEX_flattened.sol\":26592:30093  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  jump(tag_21)\n    /* \"contract/MyDEX_flattened.sol\":9902:10089  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contract/MyDEX_flattened.sol\":10010:10027  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n  swap2\n  and\n  swap2\n    /* \"contract/MyDEX_flattened.sol\":10010:10027  _owner = newOwner */\n  swap1\n    /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n  dup3\n  swap1\n    /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contract/MyDEX_flattened.sol\":9975:9991  address oldOwner */\n  0x00\n  swap1\n    /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contract/MyDEX_flattened.sol\":9965:10089  {... */\n  pop\n    /* \"contract/MyDEX_flattened.sol\":9902:10089  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_20:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_23:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_25:\n    /* \"#utility.yul\":375:415   */\n  tag_26\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_20\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_27\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_20\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_21:\n    /* \"contract/MyDEX_flattened.sol\":26592:30093  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n  0x00\n  assignImmutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract/MyDEX_flattened.sol\":26592:30093  contract MyHyperOptimizedDEX is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0fc63d10\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x56d9be4c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":26812:26842  IERC20 public immutable tokenA */\n    tag_3:\n      tag_14\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":174:225   */\n      dup2\n      mstore\n        /* \"#utility.yul\":162:164   */\n      0x20\n        /* \"#utility.yul\":147:165   */\n      add\n        /* \"contract/MyDEX_flattened.sol\":26812:26842  IERC20 public immutable tokenA */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/MyDEX_flattened.sol\":26914:26937  uint256 public reserveB */\n    tag_4:\n      tag_18\n      sload(0x03)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":382:407   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":370:372   */\n      0x20\n        /* \"#utility.yul\":355:373   */\n      add\n        /* \"contract/MyDEX_flattened.sol\":26914:26937  uint256 public reserveB */\n      tag_16\n        /* \"#utility.yul\":236:413   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":28603:29740  function swapTokenAForTokenB(... */\n    tag_5:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contract/MyDEX_flattened.sol\":26848:26878  IERC20 public immutable tokenB */\n    tag_6:\n      tag_14\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n      dup2\n      jump\n        /* \"contract/MyDEX_flattened.sol\":29787:30091  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contract/MyDEX_flattened.sol\":9283:9384  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_22\n      tag_34\n      jump\t// in\n        /* \"contract/MyDEX_flattened.sol\":8628:8713  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"contract/MyDEX_flattened.sol\":8700:8706  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contract/MyDEX_flattened.sol\":8628:8713  function owner() public view virtual returns (address) {... */\n      jump(tag_14)\n        /* \"contract/MyDEX_flattened.sol\":27812:28334  function addLiquidity(... */\n    tag_10:\n      tag_22\n      tag_40\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contract/MyDEX_flattened.sol\":26885:26908  uint256 public reserveA */\n    tag_11:\n      tag_18\n      sload(0x02)\n      dup2\n      jump\n        /* \"contract/MyDEX_flattened.sol\":9533:9748  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_22\n      tag_46\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contract/MyDEX_flattened.sol\":28603:29740  function swapTokenAForTokenB(... */\n    tag_25:\n        /* \"contract/MyDEX_flattened.sol\":2423:2444  _nonReentrantBefore() */\n      tag_50\n        /* \"contract/MyDEX_flattened.sol\":2423:2442  _nonReentrantBefore */\n      tag_51\n        /* \"contract/MyDEX_flattened.sol\":2423:2444  _nonReentrantBefore() */\n      jump\t// in\n    tag_50:\n        /* \"contract/MyDEX_flattened.sol\":27309:27317  reserveA */\n      sload(0x02)\n        /* \"contract/MyDEX_flattened.sol\":27309:27322  reserveA == 0 */\n      iszero\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":27309:27339  reserveA == 0 || reserveB == 0 */\n      tag_53\n      jumpi\n      pop\n        /* \"contract/MyDEX_flattened.sol\":27326:27334  reserveB */\n      sload(0x03)\n        /* \"contract/MyDEX_flattened.sol\":27326:27339  reserveB == 0 */\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":27309:27339  reserveA == 0 || reserveB == 0 */\n    tag_53:\n        /* \"contract/MyDEX_flattened.sol\":27305:27361  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n      iszero\n      tag_54\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":27348:27361  NoLiquidity() */\n      mload(0x40)\n      shl(0xe1, 0x6180f03f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":27305:27361  if (reserveA == 0 || reserveB == 0) revert NoLiquidity() */\n    tag_54:\n        /* \"contract/MyDEX_flattened.sol\":28744:28753  amountInA */\n      dup2\n        /* \"contract/MyDEX_flattened.sol\":28757:28758  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28744:28758  amountInA == 0 */\n      sub\n        /* \"contract/MyDEX_flattened.sol\":28740:28779  if (amountInA == 0) revert ZeroAmount() */\n      tag_56\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":28767:28779  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":28740:28779  if (amountInA == 0) revert ZeroAmount() */\n    tag_56:\n        /* \"contract/MyDEX_flattened.sol\":28793:28805  amountOutMin */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":28809:28810  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28793:28810  amountOutMin == 0 */\n      sub\n        /* \"contract/MyDEX_flattened.sol\":28789:28831  if (amountOutMin == 0) revert ZeroAmount() */\n      tag_57\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":28819:28831  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":28789:28831  if (amountOutMin == 0) revert ZeroAmount() */\n    tag_57:\n        /* \"contract/MyDEX_flattened.sol\":28904:28927  uint256 amountInWithFee */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28930:28945  amountInA * 997 */\n      tag_58\n        /* \"contract/MyDEX_flattened.sol\":28930:28939  amountInA */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":28942:28945  997 */\n      0x03e5\n        /* \"contract/MyDEX_flattened.sol\":28930:28945  amountInA * 997 */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contract/MyDEX_flattened.sol\":28904:28945  uint256 amountInWithFee = amountInA * 997 */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":28955:28972  uint256 numerator */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28993:29001  reserveB */\n      sload(0x03)\n        /* \"contract/MyDEX_flattened.sol\":28975:28990  amountInWithFee */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":28975:29001  amountInWithFee * reserveB */\n      tag_60\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n        /* \"contract/MyDEX_flattened.sol\":28955:29001  uint256 numerator = amountInWithFee * reserveB */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29011:29030  uint256 denominator */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":29053:29068  amountInWithFee */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":29034:29042  reserveA */\n      sload(0x02)\n        /* \"contract/MyDEX_flattened.sol\":29045:29049  1000 */\n      0x03e8\n        /* \"contract/MyDEX_flattened.sol\":29034:29049  reserveA * 1000 */\n      tag_61\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_61:\n        /* \"contract/MyDEX_flattened.sol\":29033:29068  (reserveA * 1000) + amountInWithFee */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contract/MyDEX_flattened.sol\":29011:29068  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29078:29096  uint256 amountOutB */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":29099:29122  numerator / denominator */\n      tag_64\n        /* \"contract/MyDEX_flattened.sol\":29011:29068  uint256 denominator = (reserveA * 1000) + amountInWithFee */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":29099:29108  numerator */\n      dup5\n        /* \"contract/MyDEX_flattened.sol\":29099:29122  numerator / denominator */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contract/MyDEX_flattened.sol\":29078:29122  uint256 amountOutB = numerator / denominator */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29217:29229  amountOutMin */\n      dup5\n        /* \"contract/MyDEX_flattened.sol\":29204:29214  amountOutB */\n      dup2\n        /* \"contract/MyDEX_flattened.sol\":29204:29229  amountOutB < amountOutMin */\n      lt\n        /* \"contract/MyDEX_flattened.sol\":29200:29283  if (amountOutB < amountOutMin) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":29252:29272  InsufficientOutput() */\n      mload(0x40)\n      shl(0xe0, 0xbb2875c3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":29200:29283  if (amountOutB < amountOutMin) {... */\n    tag_66:\n        /* \"contract/MyDEX_flattened.sol\":29362:29371  amountInA */\n      dup6\n        /* \"contract/MyDEX_flattened.sol\":29350:29358  reserveA */\n      0x02\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":29350:29371  reserveA += amountInA */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29393:29403  amountOutB */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":29381:29389  reserveB */\n      0x03\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":29381:29403  reserveB -= amountOutB */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29457:29518  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      tag_70\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29457:29463  tokenA */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n        /* \"contract/MyDEX_flattened.sol\":29457:29480  tokenA.safeTransferFrom */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29481:29491  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":29501:29505  this */\n      address\n        /* \"contract/MyDEX_flattened.sol\":29508:29517  amountInA */\n      dup10\n        /* \"contract/MyDEX_flattened.sol\":29457:29480  tokenA.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX_flattened.sol\":29457:29518  tokenA.safeTransferFrom(msg.sender, address(this), amountInA) */\n      jump\t// in\n    tag_70:\n        /* \"contract/MyDEX_flattened.sol\":29528:29571  tokenB.safeTransfer(msg.sender, amountOutB) */\n      tag_72\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29528:29534  tokenB */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"contract/MyDEX_flattened.sol\":29528:29547  tokenB.safeTransfer */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29548:29558  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":29560:29570  amountOutB */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":29528:29547  tokenB.safeTransfer */\n      tag_73\n        /* \"contract/MyDEX_flattened.sol\":29528:29571  tokenB.safeTransfer(msg.sender, amountOutB) */\n      jump\t// in\n    tag_72:\n        /* \"contract/MyDEX_flattened.sol\":29716:29722  tokenB */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29587:29733  Swapped(... */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29687:29693  tokenA */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29587:29733  Swapped(... */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29608:29618  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29587:29733  Swapped(... */\n      and\n      0xdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850\n        /* \"contract/MyDEX_flattened.sol\":29632:29641  amountInA */\n      dup10\n        /* \"contract/MyDEX_flattened.sol\":29655:29665  amountOutB */\n      dup6\n        /* \"contract/MyDEX_flattened.sol\":29587:29733  Swapped(... */\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2521:2546   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      dup3\n      add\n        /* \"#utility.yul\":2555:2589   */\n      mstore\n        /* \"#utility.yul\":2509:2511   */\n      0x40\n        /* \"#utility.yul\":2494:2512   */\n      add\n      swap1\n        /* \"#utility.yul\":2347:2595   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":29587:29733  Swapped(... */\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/MyDEX_flattened.sol\":28730:29740  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/MyDEX_flattened.sol\":2465:2485  _nonReentrantAfter() */\n      tag_76\n        /* \"contract/MyDEX_flattened.sol\":1780:1781  1 */\n      0x01\n        /* \"contract/MyDEX_flattened.sol\":2991:2998  _status */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":2991:3012  _status = NOT_ENTERED */\n      sstore\n        /* \"contract/MyDEX_flattened.sol\":2811:3019  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":2465:2485  _nonReentrantAfter() */\n    tag_76:\n        /* \"contract/MyDEX_flattened.sol\":28603:29740  function swapTokenAForTokenB(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":29787:30091  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n    tag_32:\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      tag_79\n        /* \"contract/MyDEX_flattened.sol\":8521:8532  _checkOwner */\n      tag_80\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contract/MyDEX_flattened.sol\":29900:29906  tokenA */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29874:29907  address(token) != address(tokenA) */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29882:29887  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29874:29907  address(token) != address(tokenA) */\n      and\n      eq\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":29874:29956  address(token) != address(tokenA) &&... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"contract/MyDEX_flattened.sol\":29949:29955  tokenB */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29923:29956  address(token) != address(tokenB) */\n      and\n        /* \"contract/MyDEX_flattened.sol\":29931:29936  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":29923:29956  address(token) != address(tokenB) */\n      and\n      eq\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":29874:29956  address(token) != address(tokenA) &&... */\n    tag_82:\n        /* \"contract/MyDEX_flattened.sol\":29857:30013  if (... */\n      iszero\n      tag_83\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":29988:30002  InvalidToken() */\n      mload(0x40)\n      shl(0xe0, 0xc1ab6dc1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":29857:30013  if (... */\n    tag_83:\n        /* \"contract/MyDEX_flattened.sol\":30053:30083  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":30077:30081  this */\n      address\n        /* \"contract/MyDEX_flattened.sol\":30053:30083  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":30022:30084  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      tag_84\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":30041:30051  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":30053:30068  token.balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":30053:30083  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":30022:30040  token.safeTransfer */\n      dup5\n      and\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":30022:30084  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":30022:30040  token.safeTransfer */\n      tag_73\n        /* \"contract/MyDEX_flattened.sol\":30022:30084  token.safeTransfer(msg.sender, token.balanceOf(address(this))) */\n      jump\t// in\n    tag_84:\n        /* \"contract/MyDEX_flattened.sol\":29787:30091  function emergencyWithdraw(IERC20 token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":9283:9384  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      tag_91\n        /* \"contract/MyDEX_flattened.sol\":8521:8532  _checkOwner */\n      tag_80\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contract/MyDEX_flattened.sol\":9347:9377  _transferOwnership(address(0)) */\n      tag_93\n        /* \"contract/MyDEX_flattened.sol\":9374:9375  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":9347:9365  _transferOwnership */\n      tag_94\n        /* \"contract/MyDEX_flattened.sol\":9347:9377  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_93:\n        /* \"contract/MyDEX_flattened.sol\":9283:9384  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":27812:28334  function addLiquidity(... */\n    tag_41:\n        /* \"contract/MyDEX_flattened.sol\":2423:2444  _nonReentrantBefore() */\n      tag_97\n        /* \"contract/MyDEX_flattened.sol\":2423:2442  _nonReentrantBefore */\n      tag_51\n        /* \"contract/MyDEX_flattened.sol\":2423:2444  _nonReentrantBefore() */\n      jump\t// in\n    tag_97:\n        /* \"contract/MyDEX_flattened.sol\":27926:27938  amountA == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":27926:27954  amountA == 0 || amountB == 0 */\n      tag_99\n      jumpi\n      pop\n        /* \"contract/MyDEX_flattened.sol\":27942:27954  amountB == 0 */\n      dup1\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":27926:27954  amountA == 0 || amountB == 0 */\n    tag_99:\n        /* \"contract/MyDEX_flattened.sol\":27922:28000  if (amountA == 0 || amountB == 0) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":27977:27989  ZeroAmount() */\n      mload(0x40)\n      shl(0xe0, 0x1f2a2005)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":27922:28000  if (amountA == 0 || amountB == 0) {... */\n    tag_100:\n        /* \"contract/MyDEX_flattened.sol\":28049:28056  amountA */\n      dup2\n        /* \"contract/MyDEX_flattened.sol\":28037:28045  reserveA */\n      0x02\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28037:28056  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/MyDEX_flattened.sol\":28078:28085  amountB */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":28066:28074  reserveB */\n      0x03\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":28066:28085  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_102:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contract/MyDEX_flattened.sol\":28139:28198  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      tag_103\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":28139:28145  tokenA */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n        /* \"contract/MyDEX_flattened.sol\":28139:28162  tokenA.safeTransferFrom */\n      and\n        /* \"contract/MyDEX_flattened.sol\":28163:28173  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":28183:28187  this */\n      address\n        /* \"contract/MyDEX_flattened.sol\":28190:28197  amountA */\n      dup6\n        /* \"contract/MyDEX_flattened.sol\":28139:28162  tokenA.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX_flattened.sol\":28139:28198  tokenA.safeTransferFrom(msg.sender, address(this), amountA) */\n      jump\t// in\n    tag_103:\n        /* \"contract/MyDEX_flattened.sol\":28208:28267  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      tag_104\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":28208:28214  tokenB */\n      immutable(\"0x7375017ea568916b57e2ed473624235a6147b80f0dede68541a577eedcecf3b8\")\n        /* \"contract/MyDEX_flattened.sol\":28208:28231  tokenB.safeTransferFrom */\n      and\n        /* \"contract/MyDEX_flattened.sol\":28232:28242  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":28252:28256  this */\n      address\n        /* \"contract/MyDEX_flattened.sol\":28259:28266  amountB */\n      dup5\n        /* \"contract/MyDEX_flattened.sol\":28208:28231  tokenB.safeTransferFrom */\n      tag_71\n        /* \"contract/MyDEX_flattened.sol\":28208:28267  tokenB.safeTransferFrom(msg.sender, address(this), amountB) */\n      jump\t// in\n    tag_104:\n        /* \"contract/MyDEX_flattened.sol\":28283:28327  LiquidityAdded(msg.sender, amountA, amountB) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2521:2546   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":2577:2579   */\n      0x20\n        /* \"#utility.yul\":2562:2580   */\n      dup2\n      add\n        /* \"#utility.yul\":2555:2589   */\n      dup4\n      swap1\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":28298:28308  msg.sender */\n      caller\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":28283:28327  LiquidityAdded(msg.sender, amountA, amountB) */\n      0xac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45\n      swap2\n        /* \"#utility.yul\":2494:2512   */\n      add\n        /* \"contract/MyDEX_flattened.sol\":28283:28327  LiquidityAdded(msg.sender, amountA, amountB) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contract/MyDEX_flattened.sol\":2465:2485  _nonReentrantAfter() */\n      tag_76\n        /* \"contract/MyDEX_flattened.sol\":1780:1781  1 */\n      0x01\n        /* \"contract/MyDEX_flattened.sol\":2991:2998  _status */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":2991:3012  _status = NOT_ENTERED */\n      sstore\n        /* \"contract/MyDEX_flattened.sol\":2811:3019  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":9533:9748  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      tag_108\n        /* \"contract/MyDEX_flattened.sol\":8521:8532  _checkOwner */\n      tag_80\n        /* \"contract/MyDEX_flattened.sol\":8521:8534  _checkOwner() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":9617:9639  newOwner == address(0) */\n      dup2\n      and\n        /* \"contract/MyDEX_flattened.sol\":9613:9704  if (newOwner == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":9662:9693  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":9690:9691  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":9662:9693  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":9662:9693  OwnableInvalidOwner(address(0)) */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":9613:9704  if (newOwner == address(0)) {... */\n    tag_110:\n        /* \"contract/MyDEX_flattened.sol\":9713:9741  _transferOwnership(newOwner) */\n      tag_84\n        /* \"contract/MyDEX_flattened.sol\":9732:9740  newOwner */\n      dup2\n        /* \"contract/MyDEX_flattened.sol\":9713:9731  _transferOwnership */\n      tag_94\n        /* \"contract/MyDEX_flattened.sol\":9713:9741  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contract/MyDEX_flattened.sol\":2498:2805  function _nonReentrantBefore() private {... */\n    tag_51:\n        /* \"contract/MyDEX_flattened.sol\":1822:1823  2 */\n      0x02\n        /* \"contract/MyDEX_flattened.sol\":2625:2632  _status */\n      sload(0x00)\n        /* \"contract/MyDEX_flattened.sol\":2625:2643  _status == ENTERED */\n      sub\n        /* \"contract/MyDEX_flattened.sol\":2621:2707  if (_status == ENTERED) {... */\n      tag_114\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":2666:2696  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/MyDEX_flattened.sol\":2621:2707  if (_status == ENTERED) {... */\n    tag_114:\n        /* \"contract/MyDEX_flattened.sol\":1822:1823  2 */\n      0x02\n        /* \"contract/MyDEX_flattened.sol\":2781:2788  _status */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":2781:2798  _status = ENTERED */\n      sstore\n        /* \"contract/MyDEX_flattened.sol\":2498:2805  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":21830:22018  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"contract/MyDEX_flattened.sol\":21957:22010  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3047:3062   */\n      dup5\n      dup2\n      and\n        /* \"contract/MyDEX_flattened.sol\":21957:22010  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3029:3063   */\n      mstore\n        /* \"#utility.yul\":3099:3114   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":3079:3097   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":3072:3115   */\n      mstore\n        /* \"#utility.yul\":3131:3149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3124:3158   */\n      dup4\n      swap1\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":21930:22011  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_116\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":21950:21955  token */\n      dup7\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":21972:21990  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2964:2982   */\n      0x84\n      add\n        /* \"contract/MyDEX_flattened.sol\":21957:22010  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_117:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/MyDEX_flattened.sol\":21930:21949  _callOptionalReturn */\n      tag_119\n        /* \"contract/MyDEX_flattened.sol\":21930:22011  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_116:\n        /* \"contract/MyDEX_flattened.sol\":21830:22018  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":21431:21591  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_73:\n        /* \"contract/MyDEX_flattened.sol\":21540:21583  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3361:3393   */\n      dup4\n      dup2\n      and\n        /* \"contract/MyDEX_flattened.sol\":21540:21583  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3343:3394   */\n      mstore\n        /* \"#utility.yul\":3410:3428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3403:3437   */\n      dup4\n      swap1\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":21513:21584  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_121\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":21533:21538  token */\n      dup6\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":21555:21569  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3316:3334   */\n      0x64\n      add\n        /* \"contract/MyDEX_flattened.sol\":21540:21583  abi.encodeCall(token.transfer, (to, value)) */\n      tag_117\n        /* \"#utility.yul\":3169:3443   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":21513:21584  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n    tag_121:\n        /* \"contract/MyDEX_flattened.sol\":21431:21591  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":8786:8948  function _checkOwner() internal view virtual {... */\n    tag_80:\n        /* \"contract/MyDEX_flattened.sol\":8700:8706  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contract/MyDEX_flattened.sol\":6882:6892  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":8845:8868  owner() != _msgSender() */\n      eq\n        /* \"contract/MyDEX_flattened.sol\":8841:8942  if (owner() != _msgSender()) {... */\n      tag_93\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":8891:8931  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":6882:6892  msg.sender */\n      caller\n        /* \"contract/MyDEX_flattened.sol\":8891:8931  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":8891:8931  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":9902:10089  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_94:\n        /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":10010:10027  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n      swap2\n      and\n      swap2\n        /* \"contract/MyDEX_flattened.sol\":10010:10027  _owner = newOwner */\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":9994:10000  _owner */\n      dup3\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":9975:9991  address oldOwner */\n      0x00\n      swap1\n        /* \"contract/MyDEX_flattened.sol\":10042:10082  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contract/MyDEX_flattened.sol\":9965:10089  {... */\n      pop\n        /* \"contract/MyDEX_flattened.sol\":9902:10089  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":24187:24816  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_119:\n        /* \"contract/MyDEX_flattened.sol\":24606:24629  bytes memory returndata */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":24632:24665  address(token).functionCall(data) */\n      tag_134\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":24632:24659  address(token).functionCall */\n      dup5\n      and\n        /* \"contract/MyDEX_flattened.sol\":24660:24664  data */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":24632:24659  address(token).functionCall */\n      tag_135\n        /* \"contract/MyDEX_flattened.sol\":24632:24665  address(token).functionCall(data) */\n      jump\t// in\n    tag_134:\n        /* \"contract/MyDEX_flattened.sol\":24606:24665  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":24679:24689  returndata */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":24679:24696  returndata.length */\n      mload\n        /* \"contract/MyDEX_flattened.sol\":24700:24701  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":24679:24701  returndata.length != 0 */\n      eq\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":24679:24736  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"contract/MyDEX_flattened.sol\":24717:24727  returndata */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":24706:24736  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contract/MyDEX_flattened.sol\":24705:24736  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":24679:24736  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_136:\n        /* \"contract/MyDEX_flattened.sol\":24675:24810  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":24759:24799  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      dup5\n      and\n        /* \"contract/MyDEX_flattened.sol\":24759:24799  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":24759:24799  SafeERC20FailedOperation(address(token)) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":16678:16829  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_135:\n        /* \"contract/MyDEX_flattened.sol\":16753:16765  bytes memory */\n      0x60\n        /* \"contract/MyDEX_flattened.sol\":16784:16822  functionCallWithValue(target, data, 0) */\n      tag_143\n        /* \"contract/MyDEX_flattened.sol\":16806:16812  target */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":16814:16818  data */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":16820:16821  0 */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":16784:16805  functionCallWithValue */\n      tag_144\n        /* \"contract/MyDEX_flattened.sol\":16784:16822  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_143:\n        /* \"contract/MyDEX_flattened.sol\":16777:16822  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"contract/MyDEX_flattened.sol\":16678:16829  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_142:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":17153:17545  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_144:\n        /* \"contract/MyDEX_flattened.sol\":17252:17264  bytes memory */\n      0x60\n        /* \"contract/MyDEX_flattened.sol\":17304:17309  value */\n      dup2\n        /* \"contract/MyDEX_flattened.sol\":17280:17301  address(this).balance */\n      selfbalance\n        /* \"contract/MyDEX_flattened.sol\":17280:17309  address(this).balance < value */\n      lt\n        /* \"contract/MyDEX_flattened.sol\":17276:17384  if (address(this).balance < value) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":17332:17373  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"contract/MyDEX_flattened.sol\":17367:17371  this */\n      address\n        /* \"contract/MyDEX_flattened.sol\":17332:17373  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":17332:17373  AddressInsufficientBalance(address(this)) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":17276:17384  if (address(this).balance < value) {... */\n    tag_146:\n        /* \"contract/MyDEX_flattened.sol\":17394:17406  bool success */\n      0x00\n        /* \"contract/MyDEX_flattened.sol\":17408:17431  bytes memory returndata */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":17435:17441  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":17435:17446  target.call */\n      and\n        /* \"contract/MyDEX_flattened.sol\":17454:17459  value */\n      dup5\n        /* \"contract/MyDEX_flattened.sol\":17461:17465  data */\n      dup7\n        /* \"contract/MyDEX_flattened.sol\":17435:17466  target.call{value: value}(data) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_152\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_151)\n    tag_152:\n      0x60\n      swap2\n      pop\n    tag_151:\n      pop\n        /* \"contract/MyDEX_flattened.sol\":17393:17466  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contract/MyDEX_flattened.sol\":17483:17538  verifyCallResultFromTarget(target, success, returndata) */\n      tag_153\n        /* \"contract/MyDEX_flattened.sol\":17510:17516  target */\n      dup7\n        /* \"contract/MyDEX_flattened.sol\":17518:17525  success */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":17527:17537  returndata */\n      dup4\n        /* \"contract/MyDEX_flattened.sol\":17483:17509  verifyCallResultFromTarget */\n      tag_154\n        /* \"contract/MyDEX_flattened.sol\":17483:17538  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_153:\n        /* \"contract/MyDEX_flattened.sol\":17476:17538  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contract/MyDEX_flattened.sol\":17153:17545  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_145:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/MyDEX_flattened.sol\":18598:19180  function verifyCallResultFromTarget(... */\n    tag_154:\n        /* \"contract/MyDEX_flattened.sol\":18742:18754  bytes memory */\n      0x60\n        /* \"contract/MyDEX_flattened.sol\":18771:18778  success */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":18766:19174  if (!success) {... */\n      tag_156\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":18794:18813  _revert(returndata) */\n      tag_157\n        /* \"contract/MyDEX_flattened.sol\":18802:18812  returndata */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":18794:18801  _revert */\n      tag_158\n        /* \"contract/MyDEX_flattened.sol\":18794:18813  _revert(returndata) */\n      jump\t// in\n    tag_157:\n        /* \"contract/MyDEX_flattened.sol\":18766:19174  if (!success) {... */\n      jump(tag_145)\n    tag_156:\n        /* \"contract/MyDEX_flattened.sol\":19018:19035  returndata.length */\n      dup2\n      mload\n        /* \"contract/MyDEX_flattened.sol\":19018:19040  returndata.length == 0 */\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":19018:19067  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contract/MyDEX_flattened.sol\":19044:19062  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"contract/MyDEX_flattened.sol\":19044:19067  target.code.length == 0 */\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":19018:19067  returndata.length == 0 && target.code.length == 0 */\n    tag_160:\n        /* \"contract/MyDEX_flattened.sol\":19014:19133  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":19094:19118  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      dup6\n      and\n        /* \"contract/MyDEX_flattened.sol\":19094:19118  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":174:225   */\n      mstore\n        /* \"#utility.yul\":147:165   */\n      0x24\n      add\n        /* \"contract/MyDEX_flattened.sol\":19094:19118  AddressEmptyCode(target) */\n      tag_111\n        /* \"#utility.yul\":14:231   */\n      jump\n        /* \"contract/MyDEX_flattened.sol\":19014:19133  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_161:\n      pop\n        /* \"contract/MyDEX_flattened.sol\":19153:19163  returndata */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":19146:19163  return returndata */\n      jump(tag_145)\n        /* \"contract/MyDEX_flattened.sol\":19716:20232  function _revert(bytes memory returndata) private pure {... */\n    tag_158:\n        /* \"contract/MyDEX_flattened.sol\":19847:19864  returndata.length */\n      dup1\n      mload\n        /* \"contract/MyDEX_flattened.sol\":19847:19868  returndata.length > 0 */\n      iszero\n        /* \"contract/MyDEX_flattened.sol\":19843:20226  if (returndata.length > 0) {... */\n      tag_164\n      jumpi\n        /* \"contract/MyDEX_flattened.sol\":20075:20085  returndata */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":20069:20086  mload(returndata) */\n      mload\n        /* \"contract/MyDEX_flattened.sol\":20131:20146  returndata_size */\n      dup1\n        /* \"contract/MyDEX_flattened.sol\":20118:20128  returndata */\n      dup3\n        /* \"contract/MyDEX_flattened.sol\":20114:20116  32 */\n      0x20\n        /* \"contract/MyDEX_flattened.sol\":20110:20129  add(32, returndata) */\n      add\n        /* \"contract/MyDEX_flattened.sol\":20103:20147  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contract/MyDEX_flattened.sol\":19843:20226  if (returndata.length > 0) {... */\n    tag_164:\n        /* \"contract/MyDEX_flattened.sol\":20198:20215  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":418:666   */\n    tag_24:\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":494:500   */\n      dup1\n        /* \"#utility.yul\":547:549   */\n      0x40\n        /* \"#utility.yul\":535:544   */\n      dup4\n        /* \"#utility.yul\":526:533   */\n      dup6\n        /* \"#utility.yul\":522:545   */\n      sub\n        /* \"#utility.yul\":518:550   */\n      slt\n        /* \"#utility.yul\":515:567   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":560:561   */\n      dup1\n        /* \"#utility.yul\":553:565   */\n      revert\n        /* \"#utility.yul\":515:567   */\n    tag_172:\n      pop\n      pop\n        /* \"#utility.yul\":586:609   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":641:659   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":628:660   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":418:666   */\n      jump\t// out\n        /* \"#utility.yul\":671:810   */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":754:785   */\n      dup2\n      and\n        /* \"#utility.yul\":744:786   */\n      dup2\n      eq\n        /* \"#utility.yul\":734:804   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":800:801   */\n      0x00\n        /* \"#utility.yul\":797:798   */\n      dup1\n        /* \"#utility.yul\":790:802   */\n      revert\n        /* \"#utility.yul\":815:1084   */\n    tag_31:\n        /* \"#utility.yul\":888:894   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":929:938   */\n      dup3\n        /* \"#utility.yul\":920:927   */\n      dup5\n        /* \"#utility.yul\":916:939   */\n      sub\n        /* \"#utility.yul\":912:944   */\n      slt\n        /* \"#utility.yul\":909:961   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":957:958   */\n      0x00\n        /* \"#utility.yul\":954:955   */\n      dup1\n        /* \"#utility.yul\":947:959   */\n      revert\n        /* \"#utility.yul\":909:961   */\n    tag_176:\n        /* \"#utility.yul\":996:1005   */\n      dup2\n        /* \"#utility.yul\":983:1006   */\n      calldataload\n        /* \"#utility.yul\":1015:1054   */\n      tag_145\n        /* \"#utility.yul\":1048:1053   */\n      dup2\n        /* \"#utility.yul\":1015:1054   */\n      tag_166\n      jump\t// in\n        /* \"#utility.yul\":1557:1684   */\n    tag_167:\n        /* \"#utility.yul\":1618:1628   */\n      0x4e487b71\n        /* \"#utility.yul\":1613:1616   */\n      0xe0\n        /* \"#utility.yul\":1609:1629   */\n      shl\n        /* \"#utility.yul\":1606:1607   */\n      0x00\n        /* \"#utility.yul\":1599:1630   */\n      mstore\n        /* \"#utility.yul\":1649:1653   */\n      0x11\n        /* \"#utility.yul\":1646:1647   */\n      0x04\n        /* \"#utility.yul\":1639:1654   */\n      mstore\n        /* \"#utility.yul\":1673:1677   */\n      0x24\n        /* \"#utility.yul\":1670:1671   */\n      0x00\n        /* \"#utility.yul\":1663:1678   */\n      revert\n        /* \"#utility.yul\":1689:1857   */\n    tag_59:\n        /* \"#utility.yul\":1762:1771   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1793:1802   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1810:1825   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1804:1826   */\n      dup5\n      eq\n        /* \"#utility.yul\":1790:1827   */\n      or\n        /* \"#utility.yul\":1780:1851   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1831:1849   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":1862:1987   */\n    tag_63:\n        /* \"#utility.yul\":1927:1936   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1948:1958   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1945:1981   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":1992:2209   */\n    tag_65:\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2058:2059   */\n      dup3\n        /* \"#utility.yul\":2048:2180   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":2102:2112   */\n      0x4e487b71\n        /* \"#utility.yul\":2097:2100   */\n      0xe0\n        /* \"#utility.yul\":2093:2113   */\n      shl\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2114   */\n      mstore\n        /* \"#utility.yul\":2137:2141   */\n      0x12\n        /* \"#utility.yul\":2134:2135   */\n      0x04\n        /* \"#utility.yul\":2127:2142   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2048:2180   */\n    tag_190:\n      pop\n        /* \"#utility.yul\":2194:2203   */\n      div\n      swap1\n        /* \"#utility.yul\":1992:2209   */\n      jump\t// out\n        /* \"#utility.yul\":2214:2342   */\n    tag_69:\n        /* \"#utility.yul\":2281:2290   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2302:2313   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2299:2336   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":2316:2334   */\n      tag_142\n      tag_167\n      jump\t// in\n        /* \"#utility.yul\":2600:2784   */\n    tag_89:\n        /* \"#utility.yul\":2670:2676   */\n      0x00\n        /* \"#utility.yul\":2723:2725   */\n      0x20\n        /* \"#utility.yul\":2711:2720   */\n      dup3\n        /* \"#utility.yul\":2702:2709   */\n      dup5\n        /* \"#utility.yul\":2698:2721   */\n      sub\n        /* \"#utility.yul\":2694:2726   */\n      slt\n        /* \"#utility.yul\":2691:2743   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2739:2740   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      dup1\n        /* \"#utility.yul\":2729:2741   */\n      revert\n        /* \"#utility.yul\":2691:2743   */\n    tag_196:\n      pop\n        /* \"#utility.yul\":2762:2778   */\n      mload\n      swap2\n        /* \"#utility.yul\":2600:2784   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3725   */\n    tag_138:\n        /* \"#utility.yul\":3515:3521   */\n      0x00\n        /* \"#utility.yul\":3568:3570   */\n      0x20\n        /* \"#utility.yul\":3556:3565   */\n      dup3\n        /* \"#utility.yul\":3547:3554   */\n      dup5\n        /* \"#utility.yul\":3543:3566   */\n      sub\n        /* \"#utility.yul\":3539:3571   */\n      slt\n        /* \"#utility.yul\":3536:3588   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":3584:3585   */\n      0x00\n        /* \"#utility.yul\":3581:3582   */\n      dup1\n        /* \"#utility.yul\":3574:3586   */\n      revert\n        /* \"#utility.yul\":3536:3588   */\n    tag_200:\n        /* \"#utility.yul\":3616:3625   */\n      dup2\n        /* \"#utility.yul\":3610:3626   */\n      mload\n        /* \"#utility.yul\":3669:3674   */\n      dup1\n        /* \"#utility.yul\":3662:3675   */\n      iszero\n        /* \"#utility.yul\":3655:3676   */\n      iszero\n        /* \"#utility.yul\":3648:3653   */\n      dup2\n        /* \"#utility.yul\":3645:3677   */\n      eq\n        /* \"#utility.yul\":3635:3695   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3688:3689   */\n      dup1\n        /* \"#utility.yul\":3681:3693   */\n      revert\n        /* \"#utility.yul\":3730:4142   */\n    tag_149:\n        /* \"#utility.yul\":3859:3862   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3891:3904   */\n      mload\n        /* \"#utility.yul\":3922:3923   */\n      0x00\n        /* \"#utility.yul\":3932:4061   */\n    tag_203:\n        /* \"#utility.yul\":3946:3952   */\n      dup2\n        /* \"#utility.yul\":3943:3944   */\n      dup2\n        /* \"#utility.yul\":3940:3953   */\n      lt\n        /* \"#utility.yul\":3932:4061   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":4044:4048   */\n      0x20\n        /* \"#utility.yul\":4028:4042   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":4024:4049   */\n      dup2\n      add\n        /* \"#utility.yul\":4018:4050   */\n      mload\n        /* \"#utility.yul\":4005:4016   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3998:4051   */\n      mstore\n        /* \"#utility.yul\":3961:3973   */\n      add\n        /* \"#utility.yul\":3932:4061   */\n      jump(tag_203)\n    tag_205:\n      pop\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4080:4096   */\n      swap3\n      add\n        /* \"#utility.yul\":4105:4118   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":4080:4096   */\n      swap2\n        /* \"#utility.yul\":3730:4142   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205915e1655ce983d206618512406c702213fbfc59d78dc9b9c4e5d74ebd8e0c5e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1002": {
									"entryPoint": null,
									"id": 1002,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_310": {
									"entryPoint": 229,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:1",
										"nodeType": "YulBlock",
										"src": "0:699:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:1",
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nativeSrc": "84:22:1",
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nativeSrc": "93:13:1",
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:1",
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:1",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:1",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nativeSrc": "171:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nativeSrc": "171:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:1",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:1",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nativeSrc": "150:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:1",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nativeSrc": "146:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nativeSrc": "135:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nativeSrc": "125:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nativeSrc": "118:50:1",
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nativeSrc": "115:70:1",
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:1",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:1",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "294:195:1",
													"nodeType": "YulBlock",
													"src": "294:195:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:1",
																"nodeType": "YulBlock",
																"src": "340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:1",
																					"nodeType": "YulLiteral",
																					"src": "349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:1",
																					"nodeType": "YulLiteral",
																					"src": "352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:1"
																			},
																			"nativeSrc": "342:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:1"
																		},
																		"nativeSrc": "342:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nativeSrc": "311:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:1",
																		"nodeType": "YulLiteral",
																		"src": "336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nativeSrc": "307:32:1",
																"nodeType": "YulFunctionCall",
																"src": "307:32:1"
															},
															"nativeSrc": "304:52:1",
															"nodeType": "YulIf",
															"src": "304:52:1"
														},
														{
															"nativeSrc": "365:50:1",
															"nodeType": "YulAssignment",
															"src": "365:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:1"
																},
																"nativeSrc": "375:40:1",
																"nodeType": "YulFunctionCall",
																"src": "375:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:1"
																}
															]
														},
														{
															"nativeSrc": "424:59:1",
															"nodeType": "YulAssignment",
															"src": "424:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:1",
																				"nodeType": "YulLiteral",
																				"src": "479:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:1"
																		},
																		"nativeSrc": "464:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:1",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:1"
																},
																"nativeSrc": "434:49:1",
																"nodeType": "YulFunctionCall",
																"src": "434:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:1",
														"nodeType": "YulTypedName",
														"src": "252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:1",
														"nodeType": "YulTypedName",
														"src": "263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:1",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "196:293:1"
											},
											{
												"body": {
													"nativeSrc": "595:102:1",
													"nodeType": "YulBlock",
													"src": "595:102:1",
													"statements": [
														{
															"nativeSrc": "605:26:1",
															"nodeType": "YulAssignment",
															"src": "605:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:1",
																		"nodeType": "YulLiteral",
																		"src": "628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:1"
																},
																"nativeSrc": "613:18:1",
																"nodeType": "YulFunctionCall",
																"src": "613:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:1",
																								"nodeType": "YulLiteral",
																								"src": "678:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:1",
																								"nodeType": "YulLiteral",
																								"src": "683:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:1"
																						},
																						"nativeSrc": "674:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:1",
																						"nodeType": "YulLiteral",
																						"src": "687:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:1"
																				},
																				"nativeSrc": "670:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:1"
																		},
																		"nativeSrc": "658:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:1"
																},
																"nativeSrc": "640:51:1",
																"nodeType": "YulFunctionCall",
																"src": "640:51:1"
															},
															"nativeSrc": "640:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:1",
														"nodeType": "YulTypedName",
														"src": "564:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:1",
														"nodeType": "YulTypedName",
														"src": "586:4:1",
														"type": ""
													}
												],
												"src": "494:203:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051610c46380380610c4683398101604081905261002e91610151565b60015f55338061005757604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610060816100e5565b506001600160a01b038216158061007e57506001600160a01b038116155b1561009c5760405163d92e233d60e01b815260040160405180910390fd5b806001600160a01b0316826001600160a01b0316036100ce57604051630bd969eb60e41b815260040160405180910390fd5b6001600160a01b039182166080521660a052610182565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811461014c575f80fd5b919050565b5f8060408385031215610162575f80fd5b61016b83610136565b915061017960208401610136565b90509250929050565b60805160a051610a6c6101da5f395f8181610114015281816102e30152818161030c01528181610402015261058a01525f818160a4015281816102ae01528181610336015281816103c501526105550152610a6c5ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063715018a611610063578063715018a6146101495780638da5cb5b146101515780639cd441da14610162578063dc5fa6c514610175578063f2fde38b1461017e575f80fd5b80630fc63d101461009f57806319e36f3b146100e357806356d9be4c146100fa5780635f64b55b1461010f5780636ff1c9bc14610136575b5f80fd5b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec60035481565b6040519081526020016100da565b61010d610108366004610915565b610191565b005b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b61010d610144366004610949565b6103bb565b61010d6104d5565b6001546001600160a01b03166100c6565b61010d610170366004610915565b6104e8565b6100ec60025481565b61010d61018c366004610949565b6105f6565b610199610635565b60025415806101a85750600354155b156101c657604051636180f03f60e11b815260040160405180910390fd5b815f036101e657604051631f2a200560e01b815260040160405180910390fd5b805f0361020657604051631f2a200560e01b815260040160405180910390fd5b5f610213836103e5610978565b90505f600354826102249190610978565b90505f826002546103e86102389190610978565b610242919061098f565b90505f61024f82846109a2565b9050848110156102725760405163bb2875c360e01b815260040160405180910390fd5b8560025f828254610283919061098f565b925050819055508060035f82825461029b91906109c1565b909155506102d690506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308961065d565b61030a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836106ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b285089856040516103a2929190918252602082015260400190565b60405180910390a4505050506103b760015f55565b5050565b6103c3610700565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561043757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b156104555760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526104d29033906001600160a01b038416906370a0823190602401602060405180830381865afa15801561049d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c191906109d4565b6001600160a01b03841691906106ca565b50565b6104dd610700565b6104e65f61072d565b565b6104f0610635565b8115806104fb575080155b1561051957604051631f2a200560e01b815260040160405180910390fd5b8160025f82825461052a919061098f565b925050819055508060035f828254610542919061098f565b9091555061057d90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561065d565b6105b26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461065d565b604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a26103b760015f55565b6105fe610700565b6001600160a01b03811661062c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6104d28161072d565b60025f540361065757604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6040516001600160a01b0384811660248301528381166044830152606482018390526106c49186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061077e565b50505050565b6040516001600160a01b038381166024830152604482018390526106fb91859182169063a9059cbb90606401610692565b505050565b6001546001600160a01b031633146104e65760405163118cdaa760e01b8152336004820152602401610623565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107926001600160a01b038416836107df565b905080515f141580156107b65750808060200190518101906107b491906109eb565b155b156106fb57604051635274afe760e01b81526001600160a01b0384166004820152602401610623565b60606107ec83835f6107f5565b90505b92915050565b60608147101561081a5760405163cd78605960e01b8152306004820152602401610623565b5f80856001600160a01b031684866040516108359190610a0a565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b5091509150610884868383610890565b925050505b9392505050565b6060826108a5576108a0826108ec565b610889565b81511580156108bc57506001600160a01b0384163b155b156108e557604051639996b31560e01b81526001600160a01b0385166004820152602401610623565b5080610889565b8051156108fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f8060408385031215610926575f80fd5b50508035926020909101359150565b6001600160a01b03811681146104d2575f80fd5b5f60208284031215610959575f80fd5b813561088981610935565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107ef576107ef610964565b808201808211156107ef576107ef610964565b5f826109bc57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156107ef576107ef610964565b5f602082840312156109e4575f80fd5b5051919050565b5f602082840312156109fb575f80fd5b81518015158114610889575f80fd5b5f82515f5b81811015610a295760208186018101518583015201610a0f565b505f92019182525091905056fea26469706673582212205915e1655ce983d206618512406c702213fbfc59d78dc9b9c4e5d74ebd8e0c5e64736f6c63430008180033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC46 CODESIZE SUB DUP1 PUSH2 0xC46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE CALLER DUP1 PUSH2 0x57 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60 DUP2 PUSH2 0xE5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x7E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x9C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH4 0xBD969EB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x182 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16B DUP4 PUSH2 0x136 JUMP JUMPDEST SWAP2 POP PUSH2 0x179 PUSH1 0x20 DUP5 ADD PUSH2 0x136 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xA6C PUSH2 0x1DA PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x114 ADD MSTORE DUP2 DUP2 PUSH2 0x2E3 ADD MSTORE DUP2 DUP2 PUSH2 0x30C ADD MSTORE DUP2 DUP2 PUSH2 0x402 ADD MSTORE PUSH2 0x58A ADD MSTORE PUSH0 DUP2 DUP2 PUSH1 0xA4 ADD MSTORE DUP2 DUP2 PUSH2 0x2AE ADD MSTORE DUP2 DUP2 PUSH2 0x336 ADD MSTORE DUP2 DUP2 PUSH2 0x3C5 ADD MSTORE PUSH2 0x555 ADD MSTORE PUSH2 0xA6C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x213 DUP4 PUSH2 0x3E5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 SLOAD PUSH2 0x3E8 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24F DUP3 DUP5 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2D6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x30A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x700 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x4D2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x4E6 PUSH0 PUSH2 0x72D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x635 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x4FB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x57D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x5B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6C4 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x692 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EC DUP4 DUP4 PUSH0 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x884 DUP7 DUP4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x8A5 JUMPI PUSH2 0x8A0 DUP3 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST POP DUP1 PUSH2 0x889 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x889 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x889 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA0F JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ISZERO 0xE1 PUSH6 0x5CE983D20661 DUP6 SLT BLOCKHASH PUSH13 0x702213FBFC59D78DC9B9C4E5D7 0x4E 0xBD DUP15 0xC MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "26592:3501:0:-:0;;;27385:421;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1780:1;1984:7;:21;27473:10;;8259:95;;8312:31;;-1:-1:-1;;;8312:31:0;;8340:1;8312:31;;;640:51:1;613:18;;8312:31:0;;;;;;;8259:95;8363:32;8382:12;8363:18;:32::i;:::-;-1:-1:-1;;;;;;27517:27:0;::::2;::::0;;:58:::2;;-1:-1:-1::0;;;;;;27548:27:0;::::2;::::0;27517:58:::2;27513:109;;;27598:13;;-1:-1:-1::0;;;27598:13:0::2;;;;;;;;;;;27513:109;27652:13;-1:-1:-1::0;;;;;27635:30:0::2;:13;-1:-1:-1::0;;;;;27635:30:0::2;::::0;27631:88:::2;;27688:20;;-1:-1:-1::0;;;27688:20:0::2;;;;;;;;;;;27631:88;-1:-1:-1::0;;;;;27729:30:0;;::::2;;::::0;27769::::2;;::::0;26592:3501;;9902:187;9994:6;;;-1:-1:-1;;;;;10010:17:0;;;-1:-1:-1;;;;;;10010:17:0;;;;;;;10042:40;;9994:6;;;10010:17;9994:6;;10042:40;;9975:16;;10042:40;9965:124;9902:187;:::o;14:177:1:-;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;26592:3501:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_831": {
									"entryPoint": 1918,
									"id": 831,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_248": {
									"entryPoint": 1792,
									"id": 248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_48": {
									"entryPoint": 1589,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_597": {
									"entryPoint": 2284,
									"id": 597,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_310": {
									"entryPoint": 1837,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1063": {
									"entryPoint": 1256,
									"id": 1063,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_1215": {
									"entryPoint": 955,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_465": {
									"entryPoint": 2037,
									"id": 465,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_419": {
									"entryPoint": 2015,
									"id": 419,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_262": {
									"entryPoint": 1237,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveA_913": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_668": {
									"entryPoint": 1629,
									"id": 668,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_641": {
									"entryPoint": 1738,
									"id": 641,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokenAForTokenB_1168": {
									"entryPoint": 401,
									"id": 1168,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenA_908": {
									"entryPoint": null,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_290": {
									"entryPoint": 1526,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_557": {
									"entryPoint": 2192,
									"id": 557,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$145": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4144:1",
										"nodeType": "YulBlock",
										"src": "0:4144:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "129:102:1",
													"nodeType": "YulBlock",
													"src": "129:102:1",
													"statements": [
														{
															"nativeSrc": "139:26:1",
															"nodeType": "YulAssignment",
															"src": "139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "151:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "162:2:1",
																		"nodeType": "YulLiteral",
																		"src": "162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "147:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "147:3:1"
																},
																"nativeSrc": "147:18:1",
																"nodeType": "YulFunctionCall",
																"src": "147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "139:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "139:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "196:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "196:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "212:3:1",
																								"nodeType": "YulLiteral",
																								"src": "212:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "217:1:1",
																								"nodeType": "YulLiteral",
																								"src": "217:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "208:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "208:3:1"
																						},
																						"nativeSrc": "208:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "208:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "221:1:1",
																						"nodeType": "YulLiteral",
																						"src": "221:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:1"
																				},
																				"nativeSrc": "204:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "204:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "192:3:1"
																		},
																		"nativeSrc": "192:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "192:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "174:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "174:6:1"
																},
																"nativeSrc": "174:51:1",
																"nodeType": "YulFunctionCall",
																"src": "174:51:1"
															},
															"nativeSrc": "174:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "174:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed",
												"nativeSrc": "14:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "98:9:1",
														"nodeType": "YulTypedName",
														"src": "98:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "109:6:1",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "120:4:1",
														"nodeType": "YulTypedName",
														"src": "120:4:1",
														"type": ""
													}
												],
												"src": "14:217:1"
											},
											{
												"body": {
													"nativeSrc": "337:76:1",
													"nodeType": "YulBlock",
													"src": "337:76:1",
													"statements": [
														{
															"nativeSrc": "347:26:1",
															"nodeType": "YulAssignment",
															"src": "347:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "359:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:2:1",
																		"nodeType": "YulLiteral",
																		"src": "370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "355:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "355:3:1"
																},
																"nativeSrc": "355:18:1",
																"nodeType": "YulFunctionCall",
																"src": "355:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "347:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "347:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "389:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "400:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "400:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "382:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:1"
																},
																"nativeSrc": "382:25:1",
																"nodeType": "YulFunctionCall",
																"src": "382:25:1"
															},
															"nativeSrc": "382:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "382:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "236:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "306:9:1",
														"nodeType": "YulTypedName",
														"src": "306:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "317:6:1",
														"nodeType": "YulTypedName",
														"src": "317:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "328:4:1",
														"nodeType": "YulTypedName",
														"src": "328:4:1",
														"type": ""
													}
												],
												"src": "236:177:1"
											},
											{
												"body": {
													"nativeSrc": "505:161:1",
													"nodeType": "YulBlock",
													"src": "505:161:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "551:16:1",
																"nodeType": "YulBlock",
																"src": "551:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "560:1:1",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "563:1:1",
																					"nodeType": "YulLiteral",
																					"src": "563:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "553:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "553:6:1"
																			},
																			"nativeSrc": "553:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "553:12:1"
																		},
																		"nativeSrc": "553:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "553:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "526:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "526:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "535:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "535:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "522:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "522:3:1"
																		},
																		"nativeSrc": "522:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "522:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "547:2:1",
																		"nodeType": "YulLiteral",
																		"src": "547:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "518:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "518:3:1"
																},
																"nativeSrc": "518:32:1",
																"nodeType": "YulFunctionCall",
																"src": "518:32:1"
															},
															"nativeSrc": "515:52:1",
															"nodeType": "YulIf",
															"src": "515:52:1"
														},
														{
															"nativeSrc": "576:33:1",
															"nodeType": "YulAssignment",
															"src": "576:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "599:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "599:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "586:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "586:12:1"
																},
																"nativeSrc": "586:23:1",
																"nodeType": "YulFunctionCall",
																"src": "586:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:1"
																}
															]
														},
														{
															"nativeSrc": "618:42:1",
															"nodeType": "YulAssignment",
															"src": "618:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "645:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "656:2:1",
																				"nodeType": "YulLiteral",
																				"src": "656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "641:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:1"
																		},
																		"nativeSrc": "641:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "628:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:12:1"
																},
																"nativeSrc": "628:32:1",
																"nodeType": "YulFunctionCall",
																"src": "628:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "618:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "418:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "463:9:1",
														"nodeType": "YulTypedName",
														"src": "463:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "474:7:1",
														"nodeType": "YulTypedName",
														"src": "474:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "486:6:1",
														"nodeType": "YulTypedName",
														"src": "486:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "494:6:1",
														"nodeType": "YulTypedName",
														"src": "494:6:1",
														"type": ""
													}
												],
												"src": "418:248:1"
											},
											{
												"body": {
													"nativeSrc": "724:86:1",
													"nodeType": "YulBlock",
													"src": "724:86:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "788:16:1",
																"nodeType": "YulBlock",
																"src": "788:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:1:1",
																					"nodeType": "YulLiteral",
																					"src": "800:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:12:1"
																		},
																		"nativeSrc": "790:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "747:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "747:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "758:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "773:3:1",
																										"nodeType": "YulLiteral",
																										"src": "773:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "778:1:1",
																										"nodeType": "YulLiteral",
																										"src": "778:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "769:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "769:3:1"
																								},
																								"nativeSrc": "769:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "769:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "782:1:1",
																								"nodeType": "YulLiteral",
																								"src": "782:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "765:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "765:3:1"
																						},
																						"nativeSrc": "765:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "765:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "754:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nativeSrc": "754:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "754:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "744:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "744:2:1"
																		},
																		"nativeSrc": "744:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "744:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "737:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:1"
																},
																"nativeSrc": "737:50:1",
																"nodeType": "YulFunctionCall",
																"src": "737:50:1"
															},
															"nativeSrc": "734:70:1",
															"nodeType": "YulIf",
															"src": "734:70:1"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nativeSrc": "671:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "713:5:1",
														"nodeType": "YulTypedName",
														"src": "713:5:1",
														"type": ""
													}
												],
												"src": "671:139:1"
											},
											{
												"body": {
													"nativeSrc": "899:185:1",
													"nodeType": "YulBlock",
													"src": "899:185:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "945:16:1",
																"nodeType": "YulBlock",
																"src": "945:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:1",
																					"nodeType": "YulLiteral",
																					"src": "954:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:1:1",
																					"nodeType": "YulLiteral",
																					"src": "957:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "947:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:1"
																			},
																			"nativeSrc": "947:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:1"
																		},
																		"nativeSrc": "947:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "920:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "920:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "929:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "916:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:1"
																		},
																		"nativeSrc": "916:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "916:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:1",
																		"nodeType": "YulLiteral",
																		"src": "941:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "912:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:1"
																},
																"nativeSrc": "912:32:1",
																"nodeType": "YulFunctionCall",
																"src": "912:32:1"
															},
															"nativeSrc": "909:52:1",
															"nodeType": "YulIf",
															"src": "909:52:1"
														},
														{
															"nativeSrc": "970:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "970:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "996:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "996:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "983:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "983:12:1"
																},
																"nativeSrc": "983:23:1",
																"nodeType": "YulFunctionCall",
																"src": "983:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "974:5:1",
																	"nodeType": "YulTypedName",
																	"src": "974:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1048:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1048:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1015:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "1015:32:1"
																},
																"nativeSrc": "1015:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1015:39:1"
															},
															"nativeSrc": "1015:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "1015:39:1"
														},
														{
															"nativeSrc": "1063:15:1",
															"nodeType": "YulAssignment",
															"src": "1063:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1073:5:1",
																"nodeType": "YulIdentifier",
																"src": "1073:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1063:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$145",
												"nativeSrc": "815:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "865:9:1",
														"nodeType": "YulTypedName",
														"src": "865:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "876:7:1",
														"nodeType": "YulTypedName",
														"src": "876:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "888:6:1",
														"nodeType": "YulTypedName",
														"src": "888:6:1",
														"type": ""
													}
												],
												"src": "815:269:1"
											},
											{
												"body": {
													"nativeSrc": "1190:102:1",
													"nodeType": "YulBlock",
													"src": "1190:102:1",
													"statements": [
														{
															"nativeSrc": "1200:26:1",
															"nodeType": "YulAssignment",
															"src": "1200:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1212:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1223:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1208:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:1"
																},
																"nativeSrc": "1208:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1208:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1200:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1200:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1242:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1257:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1257:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1273:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1273:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1278:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1278:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1269:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:1"
																						},
																						"nativeSrc": "1269:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1269:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1282:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1282:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1265:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1265:3:1"
																				},
																				"nativeSrc": "1265:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1265:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1253:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:1"
																		},
																		"nativeSrc": "1253:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1253:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1235:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:1"
																},
																"nativeSrc": "1235:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1235:51:1"
															},
															"nativeSrc": "1235:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1235:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1089:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1159:9:1",
														"nodeType": "YulTypedName",
														"src": "1159:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1170:6:1",
														"nodeType": "YulTypedName",
														"src": "1170:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1181:4:1",
														"nodeType": "YulTypedName",
														"src": "1181:4:1",
														"type": ""
													}
												],
												"src": "1089:203:1"
											},
											{
												"body": {
													"nativeSrc": "1367:185:1",
													"nodeType": "YulBlock",
													"src": "1367:185:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1413:16:1",
																"nodeType": "YulBlock",
																"src": "1413:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1415:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:1"
																			},
																			"nativeSrc": "1415:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1415:12:1"
																		},
																		"nativeSrc": "1415:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1415:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1388:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1397:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1384:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:1"
																		},
																		"nativeSrc": "1384:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1380:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:1"
																},
																"nativeSrc": "1380:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1380:32:1"
															},
															"nativeSrc": "1377:52:1",
															"nodeType": "YulIf",
															"src": "1377:52:1"
														},
														{
															"nativeSrc": "1438:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1464:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1451:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1451:12:1"
																},
																"nativeSrc": "1451:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1451:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1442:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1442:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1516:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1516:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nativeSrc": "1483:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "1483:32:1"
																},
																"nativeSrc": "1483:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1483:39:1"
															},
															"nativeSrc": "1483:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "1483:39:1"
														},
														{
															"nativeSrc": "1531:15:1",
															"nodeType": "YulAssignment",
															"src": "1531:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1541:5:1",
																"nodeType": "YulIdentifier",
																"src": "1541:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1297:255:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1333:9:1",
														"nodeType": "YulTypedName",
														"src": "1333:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1344:7:1",
														"nodeType": "YulTypedName",
														"src": "1344:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1356:6:1",
														"nodeType": "YulTypedName",
														"src": "1356:6:1",
														"type": ""
													}
												],
												"src": "1297:255:1"
											},
											{
												"body": {
													"nativeSrc": "1589:95:1",
													"nodeType": "YulBlock",
													"src": "1589:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1606:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1606:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1613:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1613:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1618:10:1",
																				"nodeType": "YulLiteral",
																				"src": "1618:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1609:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:1"
																		},
																		"nativeSrc": "1609:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1609:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1599:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:1"
																},
																"nativeSrc": "1599:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1599:31:1"
															},
															"nativeSrc": "1599:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1599:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1646:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1646:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1649:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1649:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1639:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1639:6:1"
																},
																"nativeSrc": "1639:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1639:15:1"
															},
															"nativeSrc": "1639:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1639:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1673:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1673:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1663:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:1"
																},
																"nativeSrc": "1663:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1663:15:1"
															},
															"nativeSrc": "1663:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1663:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1557:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1557:127:1"
											},
											{
												"body": {
													"nativeSrc": "1741:116:1",
													"nodeType": "YulBlock",
													"src": "1741:116:1",
													"statements": [
														{
															"nativeSrc": "1751:20:1",
															"nodeType": "YulAssignment",
															"src": "1751:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1766:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1769:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1769:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1762:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1762:3:1"
																},
																"nativeSrc": "1762:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1762:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1751:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1829:22:1",
																"nodeType": "YulBlock",
																"src": "1829:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1831:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1831:16:1"
																			},
																			"nativeSrc": "1831:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1831:18:1"
																		},
																		"nativeSrc": "1831:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1831:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1800:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "1800:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1793:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1793:6:1"
																				},
																				"nativeSrc": "1793:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1793:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1807:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "1807:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1814:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "1814:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1823:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "1823:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1810:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1810:3:1"
																						},
																						"nativeSrc": "1810:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1810:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1804:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1804:2:1"
																				},
																				"nativeSrc": "1804:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1804:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1790:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1790:2:1"
																		},
																		"nativeSrc": "1790:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1790:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:1"
																},
																"nativeSrc": "1783:45:1",
																"nodeType": "YulFunctionCall",
																"src": "1783:45:1"
															},
															"nativeSrc": "1780:71:1",
															"nodeType": "YulIf",
															"src": "1780:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1689:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1720:1:1",
														"nodeType": "YulTypedName",
														"src": "1720:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1723:1:1",
														"nodeType": "YulTypedName",
														"src": "1723:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1729:7:1",
														"nodeType": "YulTypedName",
														"src": "1729:7:1",
														"type": ""
													}
												],
												"src": "1689:168:1"
											},
											{
												"body": {
													"nativeSrc": "1910:77:1",
													"nodeType": "YulBlock",
													"src": "1910:77:1",
													"statements": [
														{
															"nativeSrc": "1920:16:1",
															"nodeType": "YulAssignment",
															"src": "1920:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1931:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1934:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1934:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1927:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1927:3:1"
																},
																"nativeSrc": "1927:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1927:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1959:22:1",
																"nodeType": "YulBlock",
																"src": "1959:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1961:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:1"
																			},
																			"nativeSrc": "1961:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:1"
																		},
																		"nativeSrc": "1961:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1951:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1951:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1954:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:1"
																},
																"nativeSrc": "1948:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1948:10:1"
															},
															"nativeSrc": "1945:36:1",
															"nodeType": "YulIf",
															"src": "1945:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1862:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1893:1:1",
														"nodeType": "YulTypedName",
														"src": "1893:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1896:1:1",
														"nodeType": "YulTypedName",
														"src": "1896:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1902:3:1",
														"nodeType": "YulTypedName",
														"src": "1902:3:1",
														"type": ""
													}
												],
												"src": "1862:125:1"
											},
											{
												"body": {
													"nativeSrc": "2038:171:1",
													"nodeType": "YulBlock",
													"src": "2038:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2069:111:1",
																"nodeType": "YulBlock",
																"src": "2069:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2090:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2090:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2097:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2097:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2102:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2102:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2093:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2093:3:1"
																					},
																					"nativeSrc": "2093:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2093:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2083:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2083:6:1"
																			},
																			"nativeSrc": "2083:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2083:31:1"
																		},
																		"nativeSrc": "2083:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2083:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2134:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2134:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2137:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2137:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2127:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:1"
																			},
																			"nativeSrc": "2127:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2127:15:1"
																		},
																		"nativeSrc": "2127:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2162:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2165:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2165:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2155:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:1"
																			},
																			"nativeSrc": "2155:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2155:15:1"
																		},
																		"nativeSrc": "2155:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2058:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2051:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:1"
																},
																"nativeSrc": "2051:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:9:1"
															},
															"nativeSrc": "2048:132:1",
															"nodeType": "YulIf",
															"src": "2048:132:1"
														},
														{
															"nativeSrc": "2189:14:1",
															"nodeType": "YulAssignment",
															"src": "2189:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2198:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2198:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2201:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2201:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2194:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2194:3:1"
																},
																"nativeSrc": "2194:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2194:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2189:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2189:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "1992:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2023:1:1",
														"nodeType": "YulTypedName",
														"src": "2023:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2026:1:1",
														"nodeType": "YulTypedName",
														"src": "2026:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2032:1:1",
														"nodeType": "YulTypedName",
														"src": "2032:1:1",
														"type": ""
													}
												],
												"src": "1992:217:1"
											},
											{
												"body": {
													"nativeSrc": "2263:79:1",
													"nodeType": "YulBlock",
													"src": "2263:79:1",
													"statements": [
														{
															"nativeSrc": "2273:17:1",
															"nodeType": "YulAssignment",
															"src": "2273:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2285:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2285:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2288:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2288:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:1"
																},
																"nativeSrc": "2281:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2281:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2273:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2273:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2314:22:1",
																"nodeType": "YulBlock",
																"src": "2314:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2316:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2316:16:1"
																			},
																			"nativeSrc": "2316:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2316:18:1"
																		},
																		"nativeSrc": "2316:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2316:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2305:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2305:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2311:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2311:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2302:2:1"
																},
																"nativeSrc": "2302:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2302:11:1"
															},
															"nativeSrc": "2299:37:1",
															"nodeType": "YulIf",
															"src": "2299:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2214:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2245:1:1",
														"nodeType": "YulTypedName",
														"src": "2245:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2248:1:1",
														"nodeType": "YulTypedName",
														"src": "2248:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2254:4:1",
														"nodeType": "YulTypedName",
														"src": "2254:4:1",
														"type": ""
													}
												],
												"src": "2214:128:1"
											},
											{
												"body": {
													"nativeSrc": "2476:119:1",
													"nodeType": "YulBlock",
													"src": "2476:119:1",
													"statements": [
														{
															"nativeSrc": "2486:26:1",
															"nodeType": "YulAssignment",
															"src": "2486:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2509:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2509:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2494:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:3:1"
																},
																"nativeSrc": "2494:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2486:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2528:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2528:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2539:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:1"
																},
																"nativeSrc": "2521:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2521:25:1"
															},
															"nativeSrc": "2521:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2521:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2577:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2577:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:1"
																		},
																		"nativeSrc": "2562:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2562:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2582:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2582:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2555:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:1"
																},
																"nativeSrc": "2555:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2555:34:1"
															},
															"nativeSrc": "2555:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2555:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2347:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2437:9:1",
														"nodeType": "YulTypedName",
														"src": "2437:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2448:6:1",
														"nodeType": "YulTypedName",
														"src": "2448:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2456:6:1",
														"nodeType": "YulTypedName",
														"src": "2456:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2467:4:1",
														"nodeType": "YulTypedName",
														"src": "2467:4:1",
														"type": ""
													}
												],
												"src": "2347:248:1"
											},
											{
												"body": {
													"nativeSrc": "2681:103:1",
													"nodeType": "YulBlock",
													"src": "2681:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2727:16:1",
																"nodeType": "YulBlock",
																"src": "2727:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2736:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2739:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2729:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:1"
																			},
																			"nativeSrc": "2729:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2729:12:1"
																		},
																		"nativeSrc": "2729:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2698:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:1"
																		},
																		"nativeSrc": "2698:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2694:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2694:3:1"
																},
																"nativeSrc": "2694:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2694:32:1"
															},
															"nativeSrc": "2691:52:1",
															"nodeType": "YulIf",
															"src": "2691:52:1"
														},
														{
															"nativeSrc": "2752:26:1",
															"nodeType": "YulAssignment",
															"src": "2752:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2762:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2762:5:1"
																},
																"nativeSrc": "2762:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2762:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2600:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2647:9:1",
														"nodeType": "YulTypedName",
														"src": "2647:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2658:7:1",
														"nodeType": "YulTypedName",
														"src": "2658:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2670:6:1",
														"nodeType": "YulTypedName",
														"src": "2670:6:1",
														"type": ""
													}
												],
												"src": "2600:184:1"
											},
											{
												"body": {
													"nativeSrc": "2946:218:1",
													"nodeType": "YulBlock",
													"src": "2946:218:1",
													"statements": [
														{
															"nativeSrc": "2956:26:1",
															"nodeType": "YulAssignment",
															"src": "2956:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2968:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2968:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2979:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2964:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2964:3:1"
																},
																"nativeSrc": "2964:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2964:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2956:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2956:4:1"
																}
															]
														},
														{
															"nativeSrc": "2991:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2991:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3009:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3009:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3014:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3014:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:1"
																		},
																		"nativeSrc": "3005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3018:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3018:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3001:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:1"
																},
																"nativeSrc": "3001:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3001:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2995:2:1",
																	"nodeType": "YulTypedName",
																	"src": "2995:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3036:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3036:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3051:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3051:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3059:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3059:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3047:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:1"
																		},
																		"nativeSrc": "3047:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3047:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:1"
																},
																"nativeSrc": "3029:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3029:34:1"
															},
															"nativeSrc": "3029:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3029:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3083:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3094:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3094:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3079:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:1"
																		},
																		"nativeSrc": "3079:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3103:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3111:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3111:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3099:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:1"
																		},
																		"nativeSrc": "3099:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3099:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3072:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3072:6:1"
																},
																"nativeSrc": "3072:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3072:43:1"
															},
															"nativeSrc": "3072:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "3072:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3146:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3146:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3131:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:1"
																		},
																		"nativeSrc": "3131:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3151:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3124:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:1"
																},
																"nativeSrc": "3124:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3124:34:1"
															},
															"nativeSrc": "3124:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3124:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2789:375:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2899:9:1",
														"nodeType": "YulTypedName",
														"src": "2899:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2910:6:1",
														"nodeType": "YulTypedName",
														"src": "2910:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2918:6:1",
														"nodeType": "YulTypedName",
														"src": "2918:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2926:6:1",
														"nodeType": "YulTypedName",
														"src": "2926:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2937:4:1",
														"nodeType": "YulTypedName",
														"src": "2937:4:1",
														"type": ""
													}
												],
												"src": "2789:375:1"
											},
											{
												"body": {
													"nativeSrc": "3298:145:1",
													"nodeType": "YulBlock",
													"src": "3298:145:1",
													"statements": [
														{
															"nativeSrc": "3308:26:1",
															"nodeType": "YulAssignment",
															"src": "3308:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3320:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3320:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3331:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3316:3:1"
																},
																"nativeSrc": "3316:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3316:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3308:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3308:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3350:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3350:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3365:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3381:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3381:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3386:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3386:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3377:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3377:3:1"
																						},
																						"nativeSrc": "3377:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3377:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3390:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3390:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3373:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3373:3:1"
																				},
																				"nativeSrc": "3373:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3373:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:1"
																		},
																		"nativeSrc": "3361:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3361:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3343:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3343:6:1"
																},
																"nativeSrc": "3343:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3343:51:1"
															},
															"nativeSrc": "3343:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3343:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3414:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3414:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3425:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3425:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3410:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:1"
																		},
																		"nativeSrc": "3410:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3430:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3403:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:1"
																},
																"nativeSrc": "3403:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3403:34:1"
															},
															"nativeSrc": "3403:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3403:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3169:274:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3259:9:1",
														"nodeType": "YulTypedName",
														"src": "3259:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3270:6:1",
														"nodeType": "YulTypedName",
														"src": "3270:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3278:6:1",
														"nodeType": "YulTypedName",
														"src": "3278:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3289:4:1",
														"nodeType": "YulTypedName",
														"src": "3289:4:1",
														"type": ""
													}
												],
												"src": "3169:274:1"
											},
											{
												"body": {
													"nativeSrc": "3526:199:1",
													"nodeType": "YulBlock",
													"src": "3526:199:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3572:16:1",
																"nodeType": "YulBlock",
																"src": "3572:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3581:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3581:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3584:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3584:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3574:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:1"
																			},
																			"nativeSrc": "3574:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3574:12:1"
																		},
																		"nativeSrc": "3574:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3574:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3547:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3547:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3556:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3543:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:1"
																		},
																		"nativeSrc": "3543:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3543:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3568:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3568:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3539:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:1"
																},
																"nativeSrc": "3539:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3539:32:1"
															},
															"nativeSrc": "3536:52:1",
															"nodeType": "YulIf",
															"src": "3536:52:1"
														},
														{
															"nativeSrc": "3597:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3597:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3616:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3610:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3610:5:1"
																},
																"nativeSrc": "3610:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3610:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3601:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3601:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3679:16:1",
																"nodeType": "YulBlock",
																"src": "3679:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3688:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3688:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3691:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3691:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3681:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:1"
																			},
																			"nativeSrc": "3681:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3681:12:1"
																		},
																		"nativeSrc": "3681:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3681:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3648:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3648:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3669:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3669:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3662:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3662:6:1"
																						},
																						"nativeSrc": "3662:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3662:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3655:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3655:6:1"
																				},
																				"nativeSrc": "3655:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3655:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3645:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3645:2:1"
																		},
																		"nativeSrc": "3645:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:1"
																},
																"nativeSrc": "3638:40:1",
																"nodeType": "YulFunctionCall",
																"src": "3638:40:1"
															},
															"nativeSrc": "3635:60:1",
															"nodeType": "YulIf",
															"src": "3635:60:1"
														},
														{
															"nativeSrc": "3704:15:1",
															"nodeType": "YulAssignment",
															"src": "3704:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "3714:5:1",
																"nodeType": "YulIdentifier",
																"src": "3714:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3704:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3704:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3448:277:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3492:9:1",
														"nodeType": "YulTypedName",
														"src": "3492:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3503:7:1",
														"nodeType": "YulTypedName",
														"src": "3503:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3515:6:1",
														"nodeType": "YulTypedName",
														"src": "3515:6:1",
														"type": ""
													}
												],
												"src": "3448:277:1"
											},
											{
												"body": {
													"nativeSrc": "3867:275:1",
													"nodeType": "YulBlock",
													"src": "3867:275:1",
													"statements": [
														{
															"nativeSrc": "3877:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3877:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3897:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3897:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3891:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3891:5:1"
																},
																"nativeSrc": "3891:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3891:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3881:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3881:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3913:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3913:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3922:1:1",
																"nodeType": "YulLiteral",
																"src": "3922:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3917:1:1",
																	"nodeType": "YulTypedName",
																	"src": "3917:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3984:77:1",
																"nodeType": "YulBlock",
																"src": "3984:77:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4009:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4009:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4014:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4014:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4005:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4005:3:1"
																					},
																					"nativeSrc": "4005:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4005:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "4032:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4032:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "4040:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "4040:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "4028:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4028:3:1"
																									},
																									"nativeSrc": "4028:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4028:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4044:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4044:4:1",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4024:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4024:3:1"
																							},
																							"nativeSrc": "4024:25:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4024:25:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4018:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4018:5:1"
																					},
																					"nativeSrc": "4018:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4018:32:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3998:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:6:1"
																			},
																			"nativeSrc": "3998:53:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3998:53:1"
																		},
																		"nativeSrc": "3998:53:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3998:53:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3943:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3943:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3946:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3946:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3940:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3940:2:1"
																},
																"nativeSrc": "3940:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3940:13:1"
															},
															"nativeSrc": "3932:129:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3954:21:1",
																"nodeType": "YulBlock",
																"src": "3954:21:1",
																"statements": [
																	{
																		"nativeSrc": "3956:17:1",
																		"nodeType": "YulAssignment",
																		"src": "3956:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3965:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "3965:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3968:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3968:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3961:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3961:3:1"
																			},
																			"nativeSrc": "3961:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3961:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3956:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "3956:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3936:3:1",
																"nodeType": "YulBlock",
																"src": "3936:3:1",
																"statements": []
															},
															"src": "3932:129:1"
														},
														{
															"nativeSrc": "4070:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4070:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4084:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4084:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4089:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4089:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4080:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4080:3:1"
																},
																"nativeSrc": "4080:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4080:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4074:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4074:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4112:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4112:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4116:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4116:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4105:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:1"
																},
																"nativeSrc": "4105:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4105:13:1"
															},
															"nativeSrc": "4105:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "4105:13:1"
														},
														{
															"nativeSrc": "4127:9:1",
															"nodeType": "YulAssignment",
															"src": "4127:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "4134:2:1",
																"nodeType": "YulIdentifier",
																"src": "4134:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4127:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3730:412:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3843:3:1",
														"nodeType": "YulTypedName",
														"src": "3843:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3848:6:1",
														"nodeType": "YulTypedName",
														"src": "3848:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3859:3:1",
														"nodeType": "YulTypedName",
														"src": "3859:3:1",
														"type": ""
													}
												],
												"src": "3730:412:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$145(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"908": [
									{
										"length": 32,
										"start": 164
									},
									{
										"length": 32,
										"start": 686
									},
									{
										"length": 32,
										"start": 822
									},
									{
										"length": 32,
										"start": 965
									},
									{
										"length": 32,
										"start": 1365
									}
								],
								"911": [
									{
										"length": 32,
										"start": 276
									},
									{
										"length": 32,
										"start": 739
									},
									{
										"length": 32,
										"start": 780
									},
									{
										"length": 32,
										"start": 1026
									},
									{
										"length": 32,
										"start": 1418
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063715018a611610063578063715018a6146101495780638da5cb5b146101515780639cd441da14610162578063dc5fa6c514610175578063f2fde38b1461017e575f80fd5b80630fc63d101461009f57806319e36f3b146100e357806356d9be4c146100fa5780635f64b55b1461010f5780636ff1c9bc14610136575b5f80fd5b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ec60035481565b6040519081526020016100da565b61010d610108366004610915565b610191565b005b6100c67f000000000000000000000000000000000000000000000000000000000000000081565b61010d610144366004610949565b6103bb565b61010d6104d5565b6001546001600160a01b03166100c6565b61010d610170366004610915565b6104e8565b6100ec60025481565b61010d61018c366004610949565b6105f6565b610199610635565b60025415806101a85750600354155b156101c657604051636180f03f60e11b815260040160405180910390fd5b815f036101e657604051631f2a200560e01b815260040160405180910390fd5b805f0361020657604051631f2a200560e01b815260040160405180910390fd5b5f610213836103e5610978565b90505f600354826102249190610978565b90505f826002546103e86102389190610978565b610242919061098f565b90505f61024f82846109a2565b9050848110156102725760405163bb2875c360e01b815260040160405180910390fd5b8560025f828254610283919061098f565b925050819055508060035f82825461029b91906109c1565b909155506102d690506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308961065d565b61030a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836106ca565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316336001600160a01b03167fdbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b285089856040516103a2929190918252602082015260400190565b60405180910390a4505050506103b760015f55565b5050565b6103c3610700565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415801561043757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614155b156104555760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526104d29033906001600160a01b038416906370a0823190602401602060405180830381865afa15801561049d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c191906109d4565b6001600160a01b03841691906106ca565b50565b6104dd610700565b6104e65f61072d565b565b6104f0610635565b8115806104fb575080155b1561051957604051631f2a200560e01b815260040160405180910390fd5b8160025f82825461052a919061098f565b925050819055508060035f828254610542919061098f565b9091555061057d90506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308561065d565b6105b26001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308461065d565b604080518381526020810183905233917fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45910160405180910390a26103b760015f55565b6105fe610700565b6001600160a01b03811661062c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6104d28161072d565b60025f540361065757604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6040516001600160a01b0384811660248301528381166044830152606482018390526106c49186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061077e565b50505050565b6040516001600160a01b038381166024830152604482018390526106fb91859182169063a9059cbb90606401610692565b505050565b6001546001600160a01b031633146104e65760405163118cdaa760e01b8152336004820152602401610623565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107926001600160a01b038416836107df565b905080515f141580156107b65750808060200190518101906107b491906109eb565b155b156106fb57604051635274afe760e01b81526001600160a01b0384166004820152602401610623565b60606107ec83835f6107f5565b90505b92915050565b60608147101561081a5760405163cd78605960e01b8152306004820152602401610623565b5f80856001600160a01b031684866040516108359190610a0a565b5f6040518083038185875af1925050503d805f811461086f576040519150601f19603f3d011682016040523d82523d5f602084013e610874565b606091505b5091509150610884868383610890565b925050505b9392505050565b6060826108a5576108a0826108ec565b610889565b81511580156108bc57506001600160a01b0384163b155b156108e557604051639996b31560e01b81526001600160a01b0385166004820152602401610623565b5080610889565b8051156108fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f8060408385031215610926575f80fd5b50508035926020909101359150565b6001600160a01b03811681146104d2575f80fd5b5f60208284031215610959575f80fd5b813561088981610935565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176107ef576107ef610964565b808201808211156107ef576107ef610964565b5f826109bc57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156107ef576107ef610964565b5f602082840312156109e4575f80fd5b5051919050565b5f602082840312156109fb575f80fd5b81518015158114610889575f80fd5b5f82515f5b81811015610a295760208186018101518583015201610a0f565b505f92019182525091905056fea26469706673582212205915e1655ce983d206618512406c702213fbfc59d78dc9b9c4e5d74ebd8e0c5e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x56D9BE4C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDA JUMP JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x915 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0xEC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x3 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6180F03F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SUB PUSH2 0x206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x213 DUP4 PUSH2 0x3E5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x2 SLOAD PUSH2 0x3E8 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24F DUP3 DUP5 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB2875C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2D6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP10 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x30A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP4 PUSH2 0x6CA JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850 DUP10 DUP6 PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x700 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x437 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC1AB6DC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x4D2 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x700 JUMP JUMPDEST PUSH2 0x4E6 PUSH0 PUSH2 0x72D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x635 JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x4FB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1F2A2005 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x542 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x57D SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x5B2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xAC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x3B7 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x5FE PUSH2 0x700 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6C4 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x77E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x6FB SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0x692 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x792 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x7DF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x7B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x9EB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7EC DUP4 DUP4 PUSH0 PUSH2 0x7F5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x835 SWAP2 SWAP1 PUSH2 0xA0A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x874 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x884 DUP7 DUP4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x8A5 JUMPI PUSH2 0x8A0 DUP3 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x8BC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x623 JUMP JUMPDEST POP DUP1 PUSH2 0x889 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8FC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x926 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x889 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9BC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH2 0x7EF PUSH2 0x964 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x889 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0xA0F JUMP JUMPDEST POP PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE ISZERO 0xE1 PUSH6 0x5CE983D20661 DUP6 SLT BLOCKHASH PUSH13 0x702213FBFC59D78DC9B9C4E5D7 0x4E 0xBD DUP15 0xC MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "26592:3501:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26812:30;;;;;;;;-1:-1:-1;;;;;192:32:1;;;174:51;;162:2;147:18;26812:30:0;;;;;;;;26914:23;;;;;;;;;382:25:1;;;370:2;355:18;26914:23:0;236:177:1;28603:1137:0;;;;;;:::i;:::-;;:::i;:::-;;26848:30;;;;;29787:304;;;;;;:::i;:::-;;:::i;9283:101::-;;;:::i;8628:85::-;8700:6;;-1:-1:-1;;;;;8700:6:0;8628:85;;27812:522;;;;;;:::i;:::-;;:::i;26885:23::-;;;;;;9533:215;;;;;;:::i;:::-;;:::i;28603:1137::-;2423:21;:19;:21::i;:::-;27309:8:::1;::::0;:13;;:30:::1;;-1:-1:-1::0;27326:8:0::1;::::0;:13;27309:30:::1;27305:56;;;27348:13;;-1:-1:-1::0;;;27348:13:0::1;;;;;;;;;;;27305:56;28744:9:::2;28757:1;28744:14:::0;28740:39:::2;;28767:12;;-1:-1:-1::0;;;28767:12:0::2;;;;;;;;;;;28740:39;28793:12;28809:1;28793:17:::0;28789:42:::2;;28819:12;;-1:-1:-1::0;;;28819:12:0::2;;;;;;;;;;;28789:42;28904:23;28930:15;:9:::0;28942:3:::2;28930:15;:::i;:::-;28904:41;;28955:17;28993:8;;28975:15;:26;;;;:::i;:::-;28955:46;;29011:19;29053:15;29034:8;;29045:4;29034:15;;;;:::i;:::-;29033:35;;;;:::i;:::-;29011:57:::0;-1:-1:-1;29078:18:0::2;29099:23;29011:57:::0;29099:9;:23:::2;:::i;:::-;29078:44;;29217:12;29204:10;:25;29200:83;;;29252:20;;-1:-1:-1::0;;;29252:20:0::2;;;;;;;;;;;29200:83;29362:9;29350:8;;:21;;;;;;;:::i;:::-;;;;;;;;29393:10;29381:8;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;29457:61:0::2;::::0;-1:-1:-1;;;;;;29457:6:0::2;:23;29481:10;29501:4;29508:9:::0;29457:23:::2;:61::i;:::-;29528:43;-1:-1:-1::0;;;;;29528:6:0::2;:19;29548:10;29560::::0;29528:19:::2;:43::i;:::-;29716:6;-1:-1:-1::0;;;;;29587:146:0::2;29687:6;-1:-1:-1::0;;;;;29587:146:0::2;29608:10;-1:-1:-1::0;;;;;29587:146:0::2;;29632:9;29655:10;29587:146;;;;;;2521:25:1::0;;;2577:2;2562:18;;2555:34;2509:2;2494:18;;2347:248;29587:146:0::2;;;;;;;;28730:1010;;;;2465:20:::0;1780:1;2991:7;:21;2811:208;2465:20;28603:1137;;:::o;29787:304::-;8521:13;:11;:13::i;:::-;29900:6:::1;-1:-1:-1::0;;;;;29874:33:0::1;29882:5;-1:-1:-1::0;;;;;29874:33:0::1;;;:82;;;;;29949:6;-1:-1:-1::0;;;;;29923:33:0::1;29931:5;-1:-1:-1::0;;;;;29923:33:0::1;;;29874:82;29857:156;;;29988:14;;-1:-1:-1::0;;;29988:14:0::1;;;;;;;;;;;29857:156;30053:30;::::0;-1:-1:-1;;;30053:30:0;;30077:4:::1;30053:30;::::0;::::1;174:51:1::0;30022:62:0::1;::::0;30041:10:::1;::::0;-1:-1:-1;;;;;30053:15:0;::::1;::::0;::::1;::::0;147:18:1;;30053:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;30022:18:0;::::1;::::0;:62;:18:::1;:62::i;:::-;29787:304:::0;:::o;9283:101::-;8521:13;:11;:13::i;:::-;9347:30:::1;9374:1;9347:18;:30::i;:::-;9283:101::o:0;27812:522::-;2423:21;:19;:21::i;:::-;27926:12;;;:28:::1;;-1:-1:-1::0;27942:12:0;;27926:28:::1;27922:78;;;27977:12;;-1:-1:-1::0;;;27977:12:0::1;;;;;;;;;;;27922:78;28049:7;28037:8;;:19;;;;;;;:::i;:::-;;;;;;;;28078:7;28066:8;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;28139:59:0::1;::::0;-1:-1:-1;;;;;;28139:6:0::1;:23;28163:10;28183:4;28190:7:::0;28139:23:::1;:59::i;:::-;28208;-1:-1:-1::0;;;;;28208:6:0::1;:23;28232:10;28252:4;28259:7:::0;28208:23:::1;:59::i;:::-;28283:44;::::0;;2521:25:1;;;2577:2;2562:18;;2555:34;;;28298:10:0::1;::::0;28283:44:::1;::::0;2494:18:1;28283:44:0::1;;;;;;;2465:20:::0;1780:1;2991:7;:21;2811:208;9533:215;8521:13;:11;:13::i;:::-;-1:-1:-1;;;;;9617:22:0;::::1;9613:91;;9662:31;::::0;-1:-1:-1;;;9662:31:0;;9690:1:::1;9662:31;::::0;::::1;174:51:1::0;147:18;;9662:31:0::1;;;;;;;;9613:91;9713:28;9732:8;9713:18;:28::i;2498:307::-:0;1822:1;2625:7;;:18;2621:86;;2666:30;;-1:-1:-1;;;2666:30:0;;;;;;;;;;;2621:86;1822:1;2781:7;:17;2498:307::o;21830:188::-;21957:53;;-1:-1:-1;;;;;3047:15:1;;;21957:53:0;;;3029:34:1;3099:15;;;3079:18;;;3072:43;3131:18;;;3124:34;;;21930:81:0;;21950:5;;21972:18;;;;;2964::1;;21957:53:0;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21957:53:0;;;;;;;;;;;21930:19;:81::i;:::-;21830:188;;;;:::o;21431:160::-;21540:43;;-1:-1:-1;;;;;3361:32:1;;;21540:43:0;;;3343:51:1;3410:18;;;3403:34;;;21513:71:0;;21533:5;;21555:14;;;;;3316:18:1;;21540:43:0;3169:274:1;21513:71:0;21431:160;;;:::o;8786:162::-;8700:6;;-1:-1:-1;;;;;8700:6:0;6882:10;8845:23;8841:101;;8891:40;;-1:-1:-1;;;8891:40:0;;6882:10;8891:40;;;174:51:1;147:18;;8891:40:0;14:217:1;9902:187:0;9994:6;;;-1:-1:-1;;;;;10010:17:0;;;-1:-1:-1;;;;;;10010:17:0;;;;;;;10042:40;;9994:6;;;10010:17;9994:6;;10042:40;;9975:16;;10042:40;9965:124;9902:187;:::o;24187:629::-;24606:23;24632:33;-1:-1:-1;;;;;24632:27:0;;24660:4;24632:27;:33::i;:::-;24606:59;;24679:10;:17;24700:1;24679:22;;:57;;;;;24717:10;24706:30;;;;;;;;;;;;:::i;:::-;24705:31;24679:57;24675:135;;;24759:40;;-1:-1:-1;;;24759:40:0;;-1:-1:-1;;;;;192:32:1;;24759:40:0;;;174:51:1;147:18;;24759:40:0;14:217:1;16678:151:0;16753:12;16784:38;16806:6;16814:4;16820:1;16784:21;:38::i;:::-;16777:45;;16678:151;;;;;:::o;17153:392::-;17252:12;17304:5;17280:21;:29;17276:108;;;17332:41;;-1:-1:-1;;;17332:41:0;;17367:4;17332:41;;;174:51:1;147:18;;17332:41:0;14:217:1;17276:108:0;17394:12;17408:23;17435:6;-1:-1:-1;;;;;17435:11:0;17454:5;17461:4;17435:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17393:73;;;;17483:55;17510:6;17518:7;17527:10;17483:26;:55::i;:::-;17476:62;;;;17153:392;;;;;;:::o;18598:582::-;18742:12;18771:7;18766:408;;18794:19;18802:10;18794:7;:19::i;:::-;18766:408;;;19018:17;;:22;:49;;;;-1:-1:-1;;;;;;19044:18:0;;;:23;19018:49;19014:119;;;19094:24;;-1:-1:-1;;;19094:24:0;;-1:-1:-1;;;;;192:32:1;;19094:24:0;;;174:51:1;147:18;;19094:24:0;14:217:1;19014:119:0;-1:-1:-1;19153:10:0;19146:17;;19716:516;19847:17;;:21;19843:383;;20075:10;20069:17;20131:15;20118:10;20114:2;20110:19;20103:44;19843:383;20198:17;;-1:-1:-1;;;20198:17:0;;;;;;;;;;;418:248:1;486:6;494;547:2;535:9;526:7;522:23;518:32;515:52;;;563:1;560;553:12;515:52;-1:-1:-1;;586:23:1;;;656:2;641:18;;;628:32;;-1:-1:-1;418:248:1:o;671:139::-;-1:-1:-1;;;;;754:31:1;;744:42;;734:70;;800:1;797;790:12;815:269;888:6;941:2;929:9;920:7;916:23;912:32;909:52;;;957:1;954;947:12;909:52;996:9;983:23;1015:39;1048:5;1015:39;:::i;1557:127::-;1618:10;1613:3;1609:20;1606:1;1599:31;1649:4;1646:1;1639:15;1673:4;1670:1;1663:15;1689:168;1762:9;;;1793;;1810:15;;;1804:22;;1790:37;1780:71;;1831:18;;:::i;1862:125::-;1927:9;;;1948:10;;;1945:36;;;1961:18;;:::i;1992:217::-;2032:1;2058;2048:132;;2102:10;2097:3;2093:20;2090:1;2083:31;2137:4;2134:1;2127:15;2165:4;2162:1;2155:15;2048:132;-1:-1:-1;2194:9:1;;1992:217::o;2214:128::-;2281:9;;;2302:11;;;2299:37;;;2316:18;;:::i;2600:184::-;2670:6;2723:2;2711:9;2702:7;2698:23;2694:32;2691:52;;;2739:1;2736;2729:12;2691:52;-1:-1:-1;2762:16:1;;2600:184;-1:-1:-1;2600:184:1:o;3448:277::-;3515:6;3568:2;3556:9;3547:7;3543:23;3539:32;3536:52;;;3584:1;3581;3574:12;3536:52;3616:9;3610:16;3669:5;3662:13;3655:21;3648:5;3645:32;3635:60;;3691:1;3688;3681:12;3730:412;3859:3;3897:6;3891:13;3922:1;3932:129;3946:6;3943:1;3940:13;3932:129;;;4044:4;4028:14;;;4024:25;;4018:32;4005:11;;;3998:53;3961:12;3932:129;;;-1:-1:-1;4116:1:1;4080:16;;4105:13;;;-1:-1:-1;4080:16:1;3730:412;-1:-1:-1;3730:412:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "533600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"emergencyWithdraw(address)": "infinite",
								"owner()": "2341",
								"renounceOwnership()": "infinite",
								"reserveA()": "2360",
								"reserveB()": "2317",
								"swapTokenAForTokenB(uint256,uint256)": "infinite",
								"tokenA()": "infinite",
								"tokenB()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 27385,
									"end": 27806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27385,
									"end": 27806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1780,
									"end": 1781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 1991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27473,
									"end": 27483,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 27473,
									"end": 27483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8259,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8259,
									"end": 8354,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8340,
									"end": 8341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8312,
									"end": 8343,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8259,
									"end": 8354,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8259,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8363,
									"end": 8395,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8382,
									"end": 8394,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8363,
									"end": 8381,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 8363,
									"end": 8395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8363,
									"end": 8395,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 8363,
									"end": 8395,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27517,
									"end": 27544,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27517,
									"end": 27544,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27517,
									"end": 27544,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27517,
									"end": 27544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27517,
									"end": 27575,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 27517,
									"end": 27575,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27548,
									"end": 27575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27548,
									"end": 27575,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27548,
									"end": 27575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27517,
									"end": 27575,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 27517,
									"end": 27575,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27513,
									"end": 27622,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27513,
									"end": 27622,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 27513,
									"end": 27622,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27598,
									"end": 27611,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27513,
									"end": 27622,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 27513,
									"end": 27622,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27652,
									"end": 27665,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27635,
									"end": 27665,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27635,
									"end": 27648,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27635,
									"end": 27665,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27635,
									"end": 27665,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27631,
									"end": 27719,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 27631,
									"end": 27719,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "BD969EB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27688,
									"end": 27708,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27631,
									"end": 27719,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 27631,
									"end": 27719,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 27729,
									"end": 27759,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27729,
									"end": 27759,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27729,
									"end": 27759,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27729,
									"end": 27759,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27729,
									"end": 27759,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27769,
									"end": 27799,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 27769,
									"end": 27799,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 27769,
									"end": 27799,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9902,
									"end": 10089,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9902,
									"end": 10089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10042,
									"end": 10082,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10042,
									"end": 10082,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10010,
									"end": 10027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9994,
									"end": 10000,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10042,
									"end": 10082,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10042,
									"end": 10082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9975,
									"end": 9991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9975,
									"end": 9991,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10042,
									"end": 10082,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9965,
									"end": 10089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9902,
									"end": 10089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9902,
									"end": 10089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "911"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "908"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26592,
									"end": 30093,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205915e1655ce983d206618512406c702213fbfc59d78dc9b9c4e5d74ebd8e0c5e64736f6c63430008180033",
									".code": [
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "9CD441DA"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "DC5FA6C5"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "FC63D10"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "19E36F3B"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "56D9BE4C"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "5F64B55B"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "6FF1C9BC"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26592,
											"end": 30093,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "908"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 174,
											"end": 225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26842,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 382,
											"end": 407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 370,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26914,
											"end": 26937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 413,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28603,
											"end": 29740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28603,
											"end": 29740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "911"
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26878,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29787,
											"end": 30091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29787,
											"end": 30091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9283,
											"end": 9384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8713,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8628,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8628,
											"end": 8713,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 27812,
											"end": 28334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27812,
											"end": 28334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26885,
											"end": 26908,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9533,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9533,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2423,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2423,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27309,
											"end": 27317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 27309,
											"end": 27339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27326,
											"end": 27334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27326,
											"end": 27334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27326,
											"end": 27339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27309,
											"end": 27339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 27309,
											"end": 27339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27305,
											"end": 27361,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27305,
											"end": 27361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27305,
											"end": 27361,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6180F03F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27348,
											"end": 27361,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27305,
											"end": 27361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 27305,
											"end": 27361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28744,
											"end": 28753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 28758,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28744,
											"end": 28758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28779,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28740,
											"end": 28779,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28779,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 28740,
											"end": 28779,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28793,
											"end": 28805,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28810,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28793,
											"end": 28810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28831,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28789,
											"end": 28831,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28819,
											"end": 28831,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28831,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28789,
											"end": 28831,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28904,
											"end": 28927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28930,
											"end": 28945,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28930,
											"end": 28939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28942,
											"end": 28945,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3E5"
										},
										{
											"begin": 28930,
											"end": 28945,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28930,
											"end": 28945,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28930,
											"end": 28945,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28930,
											"end": 28945,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28904,
											"end": 28945,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28904,
											"end": 28945,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28955,
											"end": 28972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28993,
											"end": 29001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28993,
											"end": 29001,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28975,
											"end": 28990,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 28975,
											"end": 29001,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28975,
											"end": 29001,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28955,
											"end": 29001,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28955,
											"end": 29001,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29030,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29053,
											"end": 29068,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29042,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29034,
											"end": 29042,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29045,
											"end": 29049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29034,
											"end": 29049,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29034,
											"end": 29049,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29033,
											"end": 29068,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29033,
											"end": 29068,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29011,
											"end": 29068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29078,
											"end": 29096,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29099,
											"end": 29122,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29011,
											"end": 29068,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29099,
											"end": 29108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29099,
											"end": 29122,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29099,
											"end": 29122,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29099,
											"end": 29122,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29099,
											"end": 29122,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29122,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29078,
											"end": 29122,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29229,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29214,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29204,
											"end": 29229,
											"modifierDepth": 2,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29200,
											"end": 29283,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29200,
											"end": 29283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29200,
											"end": 29283,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB2875C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29272,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29200,
											"end": 29283,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29200,
											"end": 29283,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29362,
											"end": 29371,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29350,
											"end": 29358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29350,
											"end": 29371,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29371,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29403,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29381,
											"end": 29389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29381,
											"end": 29403,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29381,
											"end": 29403,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29381,
											"end": 29403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29457,
											"end": 29518,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29457,
											"end": 29518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29457,
											"end": 29463,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "908"
										},
										{
											"begin": 29457,
											"end": 29480,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29491,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29501,
											"end": 29505,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29508,
											"end": 29517,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29457,
											"end": 29480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 29457,
											"end": 29518,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29457,
											"end": 29518,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29457,
											"end": 29518,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29571,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29528,
											"end": 29534,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "911"
										},
										{
											"begin": 29528,
											"end": 29547,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29558,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29560,
											"end": 29570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29547,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29528,
											"end": 29571,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29571,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29528,
											"end": 29571,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29722,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "911"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29687,
											"end": 29693,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "908"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29608,
											"end": 29618,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "DBEE45EA236748B94CFBE4AA4456C6460410D51BC244040093D65457FB4B2850"
										},
										{
											"begin": 29632,
											"end": 29641,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29655,
											"end": 29665,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29587,
											"end": 29733,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28730,
											"end": 29740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28730,
											"end": 29740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28730,
											"end": 29740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28730,
											"end": 29740,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 3019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 29740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8521,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8521,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29900,
											"end": 29906,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "908"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29874,
											"end": 29907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29882,
											"end": 29887,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29874,
											"end": 29907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29907,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29907,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29955,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "911"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29923,
											"end": 29956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29931,
											"end": 29936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29923,
											"end": 29956,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29956,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29874,
											"end": 29956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29857,
											"end": 30013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29857,
											"end": 30013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29857,
											"end": 30013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1AB6DC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29988,
											"end": 30002,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29857,
											"end": 30013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29857,
											"end": 30013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30077,
											"end": 30081,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30022,
											"end": 30084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30022,
											"end": 30084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30041,
											"end": 30051,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30041,
											"end": 30051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30053,
											"end": 30068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30053,
											"end": 30068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30053,
											"end": 30083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30053,
											"end": 30083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30053,
											"end": 30083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30022,
											"end": 30040,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30040,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 30022,
											"end": 30084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30022,
											"end": 30084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 30022,
											"end": 30084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29787,
											"end": 30091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9283,
											"end": 9384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8521,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8521,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9374,
											"end": 9375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9347,
											"end": 9377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9347,
											"end": 9377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27812,
											"end": 28334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2423,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2423,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2423,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27926,
											"end": 27954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27942,
											"end": 27954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27942,
											"end": 27954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27926,
											"end": 27954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27926,
											"end": 27954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27922,
											"end": 28000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27922,
											"end": 28000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27922,
											"end": 28000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F2A2005"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27977,
											"end": 27989,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27922,
											"end": 28000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27922,
											"end": 28000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28049,
											"end": 28056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28037,
											"end": 28045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28037,
											"end": 28056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28037,
											"end": 28056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28085,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28066,
											"end": 28074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28066,
											"end": 28085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28066,
											"end": 28085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28066,
											"end": 28085,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28139,
											"end": 28198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28139,
											"end": 28198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28139,
											"end": 28145,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "908"
										},
										{
											"begin": 28139,
											"end": 28162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28163,
											"end": 28173,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28183,
											"end": 28187,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28197,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28139,
											"end": 28198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28139,
											"end": 28198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28139,
											"end": 28198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28208,
											"end": 28267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28208,
											"end": 28214,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "911"
										},
										{
											"begin": 28208,
											"end": 28231,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28232,
											"end": 28242,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28252,
											"end": 28256,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28259,
											"end": 28266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28208,
											"end": 28231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28208,
											"end": 28267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28208,
											"end": 28267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28208,
											"end": 28267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28283,
											"end": 28327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28298,
											"end": 28308,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28298,
											"end": 28308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "AC1D76749E5447B7B16F5AB61447E1BD502F3BB4807AF3B28E620D1700A6EE45"
										},
										{
											"begin": 28283,
											"end": 28327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28283,
											"end": 28327,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1780,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3012,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 3019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9533,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8521,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8521,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8521,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9617,
											"end": 9639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9617,
											"end": 9639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9613,
											"end": 9704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9662,
											"end": 9693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9662,
											"end": 9693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9690,
											"end": 9691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9662,
											"end": 9693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9662,
											"end": 9693,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9613,
											"end": 9704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9713,
											"end": 9741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9732,
											"end": 9740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9713,
											"end": 9731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9713,
											"end": 9741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2498,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2621,
											"end": 2707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2707,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2621,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21930,
											"end": 22011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21930,
											"end": 22011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21955,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21950,
											"end": 21955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 21972,
											"end": 21990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2964,
											"end": 2982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21957,
											"end": 22010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21930,
											"end": 21949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 21930,
											"end": 22011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21930,
											"end": 22011,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 21930,
											"end": 22011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21830,
											"end": 22018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21513,
											"end": 21584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21533,
											"end": 21538,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 21555,
											"end": 21569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3316,
											"end": 3334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3169,
											"end": 3443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21513,
											"end": 21584,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21513,
											"end": 21584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21431,
											"end": 21591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8948,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8786,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6892,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 8868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8841,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8841,
											"end": 8942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6892,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9902,
											"end": 10089,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9902,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10042,
											"end": 10082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10082,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10042,
											"end": 10082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10082,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9902,
											"end": 10089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9902,
											"end": 10089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24187,
											"end": 24816,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24187,
											"end": 24816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24632,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24632,
											"end": 24659,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24632,
											"end": 24665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24665,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24632,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24606,
											"end": 24665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24700,
											"end": 24701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24679,
											"end": 24701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24717,
											"end": 24727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24706,
											"end": 24736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24706,
											"end": 24736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24705,
											"end": 24736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24679,
											"end": 24736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24675,
											"end": 24810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24675,
											"end": 24810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24759,
											"end": 24799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16753,
											"end": 16765,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16784,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16814,
											"end": 16818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16820,
											"end": 16821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16784,
											"end": 16805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 16784,
											"end": 16822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16784,
											"end": 16822,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 16784,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16678,
											"end": 16829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17264,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17304,
											"end": 17309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17301,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17280,
											"end": 17309,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17276,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 17276,
											"end": 17384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17367,
											"end": 17371,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17332,
											"end": 17373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17276,
											"end": 17384,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 17276,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17394,
											"end": 17406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17408,
											"end": 17431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17435,
											"end": 17446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17459,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17465,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 17435,
											"end": 17466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17435,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17393,
											"end": 17466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17393,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17393,
											"end": 17466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17393,
											"end": 17466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17483,
											"end": 17538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17510,
											"end": 17516,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17518,
											"end": 17525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17527,
											"end": 17537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17483,
											"end": 17509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17483,
											"end": 17538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17483,
											"end": 17538,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17483,
											"end": 17538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17476,
											"end": 17538,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17476,
											"end": 17538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17476,
											"end": 17538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17476,
											"end": 17538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17153,
											"end": 17545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18598,
											"end": 19180,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18598,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18742,
											"end": 18754,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18771,
											"end": 18778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 18802,
											"end": 18812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 18794,
											"end": 18813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18794,
											"end": 18813,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 18794,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 18766,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19044,
											"end": 19062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19062,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 19018,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19014,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19014,
											"end": 19133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19094,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19014,
											"end": 19133,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 19014,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19153,
											"end": 19163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19146,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19146,
											"end": 19163,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 20232,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 19716,
											"end": 20232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19847,
											"end": 19868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 20226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19843,
											"end": 20226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20075,
											"end": 20085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20069,
											"end": 20086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20131,
											"end": 20146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20118,
											"end": 20128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20114,
											"end": 20116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20110,
											"end": 20129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20103,
											"end": 20147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19843,
											"end": 20226,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 19843,
											"end": 20226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20198,
											"end": 20215,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 666,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 418,
											"end": 666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 547,
											"end": 549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 522,
											"end": 545,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 518,
											"end": 550,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 567,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 515,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 515,
											"end": 567,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 565,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 515,
											"end": 567,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 515,
											"end": 567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 641,
											"end": 659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 660,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 628,
											"end": 660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 418,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 671,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 671,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 754,
											"end": 785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 754,
											"end": 785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 744,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 786,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 734,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 734,
											"end": 804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 800,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 790,
											"end": 802,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 815,
											"end": 1084,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 815,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 888,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 920,
											"end": 927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 916,
											"end": 939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 912,
											"end": 944,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 909,
											"end": 961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 909,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 909,
											"end": 961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 947,
											"end": 959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 909,
											"end": 961,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 909,
											"end": 961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1015,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1684,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1557,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1613,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1609,
											"end": 1629,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1689,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1825,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1826,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1780,
											"end": 1851,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1831,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1987,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1862,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1945,
											"end": 1981,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2209,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1992,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2127,
											"end": 2142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2048,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2342,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2214,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2290,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2299,
											"end": 2336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2316,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2316,
											"end": 2334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2726,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2691,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2762,
											"end": 2778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3725,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3448,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3543,
											"end": 3566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3571,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3536,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3675,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3677,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3635,
											"end": 3695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3904,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3940,
											"end": 3953,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3932,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3730,
											"end": 4142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 4142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract/MyDEX_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swapTokenAForTokenB(uint256,uint256)": "56d9be4c",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenBAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoLiquidity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swapTokenAForTokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"(Your Name)\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swapTokenAForTokenB(uint256,uint256)\":{\"params\":{\"amountInA\":\"The exact amount of Token A being sent.\",\"amountOutMin\":\"The *minimum* amount of Token B the user is willing to accept. This prevents MEV.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MyHyperOptimizedDEX\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapTokenAForTokenB(uint256,uint256)\":{\"notice\":\"Swaps Token A for Token B with slippage protection.\"}},\"notice\":\"A production-grade, gas-optimized, and hardened AMM.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"MyHyperOptimizedDEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contract/MyDEX_flattened.sol:MyHyperOptimizedDEX",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 172,
								"contract": "contract/MyDEX_flattened.sol:MyHyperOptimizedDEX",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 913,
								"contract": "contract/MyDEX_flattened.sol:MyHyperOptimizedDEX",
								"label": "reserveA",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 915,
								"contract": "contract/MyDEX_flattened.sol:MyHyperOptimizedDEX",
								"label": "reserveB",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapTokenAForTokenB(uint256,uint256)": {
								"notice": "Swaps Token A for Token B with slippage protection."
							}
						},
						"notice": "A production-grade, gas-optimized, and hardened AMM.",
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 172,
								"contract": "contract/MyDEX_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contract/MyDEX_flattened.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/MyDEX_flattened.sol\":20879:25897  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/MyDEX_flattened.sol\":20879:25897  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220335ecc6a89b6117b81c3a4f96b65987f8032154d44b5a61b76d2377fd7b0a57464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220335ecc6a89b6117b81c3a4f96b65987f8032154d44b5a61b76d2377fd7b0a57464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER MCOPY 0xCC PUSH11 0x89B6117B81C3A4F96B6598 PUSH32 0x8032154D44B5A61B76D2377FD7B0A57464736F6C634300081800330000000000 ",
							"sourceMap": "20879:5018:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;20879:5018:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220335ecc6a89b6117b81c3a4f96b65987f8032154d44b5a61b76d2377fd7b0a57464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER MCOPY 0xCC PUSH11 0x89B6117B81C3A4F96B6598 PUSH32 0x8032154D44B5A61B76D2377FD7B0A57464736F6C634300081800330000000000 ",
							"sourceMap": "20879:5018:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 20879,
									"end": 25897,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220335ecc6a89b6117b81c3a4f96b65987f8032154d44b5a61b76d2377fd7b0a57464736f6c63430008180033",
									".code": [
										{
											"begin": 20879,
											"end": 25897,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 25897,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract/MyDEX_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/MyDEX_flattened.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/MyDEX_flattened.sol\":{\"keccak256\":\"0xa8fbe881121ade1f82281014e3eb9967ccae148dc316644ebf382eb4dbb093fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1277558dcee1b1e1865d69281910894fb4a7cd4d2247af3046d2f3ae0ff55636\",\"dweb:/ipfs/QmSngSv2aVV6DRWJADvqYJ398y4jEoh9HCQE9hAaU4NbUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/MyDEX_flattened.sol": {
				"ast": {
					"absolutePath": "contract/MyDEX_flattened.sol",
					"exportedSymbols": {
						"Address": [
							598
						],
						"Context": [
							166
						],
						"IERC20": [
							145
						],
						"IERC20Permit": [
							346
						],
						"IdenticalAddresses": [
							886
						],
						"InsufficientOutput": [
							892
						],
						"InvalidToken": [
							894
						],
						"MyHyperOptimizedDEX": [
							1216
						],
						"NoLiquidity": [
							890
						],
						"Ownable": [
							311
						],
						"ReentrancyGuard": [
							68
						],
						"SafeERC20": [
							881
						],
						"TransferFailed": [
							896
						],
						"ZeroAddress": [
							884
						],
						"ZeroAmount": [
							888
						]
					},
					"id": 1217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "176:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "202:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "ReentrancyGuard",
							"nameLocation": "971:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1766:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "1741:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1812:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "1787:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1787:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1822:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1846:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "1830:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1830:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1860:52:0",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 13,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1923:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:0"
									},
									"src": "1917:37:0"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "1974:38:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 17,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1994:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "1984:21:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1971:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1974:0:0"
									},
									"scope": 68,
									"src": "1960:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "2413:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 24,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2423:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "2423:21:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "2454:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 28,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2465:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "2465:20:0"
											}
										]
									},
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "2018:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 32,
									"name": "nonReentrant",
									"nameLocation": "2398:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2410:2:0"
									},
									"src": "2389:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2537:268:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2625:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "2621:86:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "2645:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2666:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2666:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "RevertStatement",
															"src": "2659:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2507:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:0"
									},
									"scope": 68,
									"src": "2498:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "2849:170:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "3001:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2991:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "2991:21:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2820:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2838:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2849:0:0"
									},
									"scope": 68,
									"src": "2811:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3262:42:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 61,
												"id": 65,
												"nodeType": "Return",
												"src": "3272:25:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "3025:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3207:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:6:0"
									},
									"scope": 68,
									"src": "3198:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1217,
							"src": "953:2353:0",
							"usedErrors": [
								13
							],
							"usedEvents": []
						},
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3446:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "3472:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "IERC20",
							"nameLocation": "3553:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3566:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 79,
									"name": "Transfer",
									"nameLocation": "3735:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3760:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3744:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3782:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3766:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:57:0"
									},
									"src": "3729:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3807:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 88,
									"name": "Approval",
									"nameLocation": "3966:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3991:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3975:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4014:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3998:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4031:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4023:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:63:0"
									},
									"src": "3960:78:0"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4044:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4123:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4134:2:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "4160:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:9:0"
									},
									"scope": 145,
									"src": "4114:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "4175:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4260:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4278:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4270:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:17:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4310:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:9:0"
									},
									"scope": 145,
									"src": "4251:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4325:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4552:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4569:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4561:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4581:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4560:27:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4606:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4605:6:0"
									},
									"scope": 145,
									"src": "4543:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4618:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4896:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4914:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4906:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4905:32:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4961:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:9:0"
									},
									"scope": 145,
									"src": "4887:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4976:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5657:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "5665:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "5682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5664:32:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "5715:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5715:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:6:0"
									},
									"scope": 145,
									"src": "5648:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "5727:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6038:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6059:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6051:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6073:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6065:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6085:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6077:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6050:41:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6109:6:0"
									},
									"scope": 145,
									"src": "6029:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "3543:2575:0",
							"usedErrors": [],
							"usedEvents": [
								79,
								88
							]
						},
						{
							"id": 146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6248:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "6274:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "Context",
							"nameLocation": "6789:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "6865:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6882:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6886:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6882:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "6875:17:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "6812:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6822:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:9:0"
									},
									"scope": 166,
									"src": "6803:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "6972:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 161,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6993:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "6989:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 160,
												"id": 163,
												"nodeType": "Return",
												"src": "6982:15:0"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "6914:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "6956:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6956:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6955:16:0"
									},
									"scope": 166,
									"src": "6905:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1217,
							"src": "6771:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7138:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 169,
										"name": "Context",
										"nameLocations": [
											"7682:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "7682:7:0"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "7682:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 168,
								"nodeType": "StructuredDocumentation",
								"src": "7165:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311,
								166
							],
							"name": "Ownable",
							"nameLocation": "7671:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "7712:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 311,
									"src": "7696:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 171,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7696:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "7725:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 177,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "7821:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "7848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7847:17:0"
									},
									"src": "7815:50:0"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "7871:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 182,
									"name": "OwnableInvalidOwner",
									"nameLocation": "7964:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7992:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "7984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7983:15:0"
									},
									"src": "7958:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 188,
									"name": "OwnershipTransferred",
									"nameLocation": "8011:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8048:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "8032:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8079:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "8063:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8031:57:0"
									},
									"src": "8005:84:0"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "8249:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 194,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "8263:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 195,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8263:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "8259:95:0",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "8291:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8340:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8332:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 201,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8332:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8332:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 200,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "8312:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 206,
															"nodeType": "RevertStatement",
															"src": "8305:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "8382:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 209,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "8363:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8363:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "8363:32:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "8095:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 214,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "8235:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "8227:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8226:22:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8249:0:0"
									},
									"scope": 311,
									"src": "8215:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "8511:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 217,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "8521:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8521:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "8521:13:0"
											},
											{
												"id": 220,
												"nodeType": "PlaceholderStatement",
												"src": "8544:1:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "8408:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 222,
									"name": "onlyOwner",
									"nameLocation": "8499:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8508:2:0"
									},
									"src": "8490:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "8683:30:0",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "8700:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "8693:13:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "8558:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8637:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8642:2:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "8674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:9:0"
									},
									"scope": 311,
									"src": "8628:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "8831:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 235,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "8845:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8845:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 237,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "8856:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8856:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8845:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "IfStatement",
												"src": "8841:101:0",
												"trueBody": {
													"id": 245,
													"nodeType": "Block",
													"src": "8870:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 241,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "8918:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8918:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 240,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8891:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8891:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 244,
															"nodeType": "RevertStatement",
															"src": "8884:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "8719:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "8795:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8806:2:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8831:0:0"
									},
									"scope": 311,
									"src": "8786:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "9337:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9366:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 255,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9366:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9366:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 254,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "9347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "9347:30:0"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "8954:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 251,
												"name": "onlyOwner",
												"nameLocations": [
													"9327:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 222,
												"src": "9327:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9327:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9292:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9309:2:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9337:0:0"
									},
									"scope": 311,
									"src": "9283:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "9603:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "9617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9629:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9629:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9617:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "9613:91:0",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "9641:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9690:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9682:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 277,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9682:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9682:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 276,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "9662:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9662:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 282,
															"nodeType": "RevertStatement",
															"src": "9655:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "9732:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "9713:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9713:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "9713:28:0"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "9390:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyOwner",
												"nameLocations": [
													"9593:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 222,
												"src": "9593:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9593:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9542:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9568:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "9560:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9559:18:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9603:0:0"
									},
									"scope": 311,
									"src": "9533:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "9965:124:0",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "9983:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "9975:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 296,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9975:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"id": 298,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 172,
													"src": "9994:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9975:25:0"
											},
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "10010:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "10019:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10010:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "10010:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 305,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "10063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "10073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 304,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "10042:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10042:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "EmitStatement",
												"src": "10037:45:0"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "9754:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "9911:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9938:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "9930:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9929:18:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9965:0:0"
									},
									"scope": 311,
									"src": "9902:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1217,
							"src": "7653:2438:0",
							"usedErrors": [
								177,
								182
							],
							"usedEvents": [
								188
							]
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10265:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "10291:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 346,
							"linearizedBaseContracts": [
								346
							],
							"name": "IERC20Permit",
							"nameLocation": "12265:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "12284:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "13148:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13172:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13164:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13220:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "13243:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13235:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "13267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13261:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "13286:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13278:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 325,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "13305:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13297:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 327,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13154:158:0"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13321:0:0"
									},
									"scope": 346,
									"src": "13139:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "13328:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "13636:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "13643:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13642:15:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "13681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13680:9:0"
									},
									"scope": 346,
									"src": "13627:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "13696:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "13891:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13907:2:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "13933:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13932:9:0"
									},
									"scope": 346,
									"src": "13882:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "12255:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14074:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "14100:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 598,
							"linearizedBaseContracts": [
								598
							],
							"name": "Address",
							"nameLocation": "14176:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "14190:94:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 353,
									"name": "AddressInsufficientBalance",
									"nameLocation": "14295:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "14322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14321:17:0"
									},
									"src": "14289:50:0"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "14345:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 358,
									"name": "AddressEmptyCode",
									"nameLocation": "14431:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14456:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "14448:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14447:16:0"
									},
									"src": "14425:39:0"
								},
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "14470:89:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 361,
									"name": "FailedInnerCall",
									"nameLocation": "14570:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14585:2:0"
									},
									"src": "14564:24:0"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "15575:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15597:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$598",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$598",
																		"typeString": "library Address"
																	}
																],
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 369,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15589:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15589:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15603:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "15589:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "15613:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15589:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "IfStatement",
												"src": "15585:109:0",
												"trueBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "15621:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 379,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "15677:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$598",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$598",
																					"typeString": "library Address"
																				}
																			],
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15669:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 377,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15669:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15669:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 376,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "15642:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15642:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 382,
															"nodeType": "RevertStatement",
															"src": "15635:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													386,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15710:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "15705:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15705:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 393,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15753:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 387,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "15723:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15733:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "15723:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 389,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "15745:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15723:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15723:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15704:52:0"
											},
											{
												"condition": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "15770:8:0",
													"subExpression": {
														"id": 394,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "15771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 400,
												"nodeType": "IfStatement",
												"src": "15766:63:0",
												"trueBody": {
													"id": 399,
													"nodeType": "Block",
													"src": "15780:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 396,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "15801:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15801:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 398,
															"nodeType": "RevertStatement",
															"src": "15794:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "14594:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "15513:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "15539:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "15523:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15523:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "15550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15522:43:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15575:0:0"
									},
									"scope": 598,
									"src": "15504:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "16767:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "16806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "16814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16820:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 412,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "16784:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16784:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 411,
												"id": 417,
												"nodeType": "Return",
												"src": "16777:45:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "15841:832:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "16687:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16708:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "16700:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "16716:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16716:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16699:35:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "16753:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16753:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16752:14:0"
									},
									"scope": 598,
									"src": "16678:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "17266:279:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 433,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17288:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$598",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$598",
																		"typeString": "library Address"
																	}
																],
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17280:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17280:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17294:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "17280:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 436,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "17304:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17280:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "17276:108:0",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "17311:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 441,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "17367:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$598",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$598",
																					"typeString": "library Address"
																				}
																			],
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17359:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 439,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17359:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17359:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "17332:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17332:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "17325:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													448,
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17399:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "17394:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 447,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17421:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "17408:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 449,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17408:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "17461:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 451,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "17435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17442:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17435:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 453,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "17454:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17435:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17435:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17393:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "17510:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "17518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 461,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "17527:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 458,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "17483:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17483:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 430,
												"id": 463,
												"nodeType": "Return",
												"src": "17476:62:0"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "16835:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "17162:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17192:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17213:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17200:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17200:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17227:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17183:50:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "17252:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17251:14:0"
									},
									"scope": 598,
									"src": "17153:392:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "17784:154:0",
										"statements": [
											{
												"assignments": [
													476,
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17800:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 490,
														"src": "17795:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 475,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17822:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 490,
														"src": "17809:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17809:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"arguments": [
														{
															"id": 481,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "17854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 479,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "17836:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17843:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "17836:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17836:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17794:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "17903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "17911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 487,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "17920:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 484,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "17876:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17876:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 489,
												"nodeType": "Return",
												"src": "17869:62:0"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "17551:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "17693:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17720:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "17712:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17741:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "17728:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17728:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17711:35:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "17770:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17769:14:0"
									},
									"scope": 598,
									"src": "17684:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "18176:156:0",
										"statements": [
											{
												"assignments": [
													502,
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18192:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "18187:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "18214:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "18201:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18201:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"arguments": [
														{
															"id": 507,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "18248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "18228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18235:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "18228:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18228:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "18297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "18305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 513,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18314:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 510,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "18270:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18270:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 500,
												"id": 515,
												"nodeType": "Return",
												"src": "18263:62:0"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "17944:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "18088:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "18117:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "18109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18138:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "18125:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18108:35:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "18162:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18161:14:0"
									},
									"scope": 598,
									"src": "18079:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "18756:424:0",
										"statements": [
											{
												"condition": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18770:8:0",
													"subExpression": {
														"id": 529,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "18771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "18830:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 536,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "19018:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19029:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "19018:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19039:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "19018:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 540,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 520,
																				"src": "19044:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "19051:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "19044:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19056:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "19044:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19066:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "19044:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "19018:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 551,
															"nodeType": "IfStatement",
															"src": "19014:119:0",
															"trueBody": {
																"id": 550,
																"nodeType": "Block",
																"src": "19069:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 547,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "19111:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 546,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 358,
																				"src": "19094:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19094:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 549,
																		"nodeType": "RevertStatement",
																		"src": "19087:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 552,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "19153:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 528,
															"id": 553,
															"nodeType": "Return",
															"src": "19146:17:0"
														}
													]
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "18766:408:0",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "18780:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 532,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "18802:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 531,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "18794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18794:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "ExpressionStatement",
															"src": "18794:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "18338:255:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "18607:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "18651:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "18643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "18672:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "18667:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "18702:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "18689:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18689:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18633:85:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "18742:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18742:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18741:14:0"
									},
									"scope": 598,
									"src": "18598:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "19482:122:0",
										"statements": [
											{
												"condition": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "19496:8:0",
													"subExpression": {
														"id": 567,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "19497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "19556:42:0",
													"statements": [
														{
															"expression": {
																"id": 574,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "19577:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 566,
															"id": 575,
															"nodeType": "Return",
															"src": "19570:17:0"
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "19492:106:0",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "19506:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 570,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "19528:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 569,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "19520:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19520:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "19520:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "19186:189:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "19389:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "19406:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "19433:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "19420:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19405:39:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "19468:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19467:14:0"
									},
									"scope": 598,
									"src": "19380:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "19771:461:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 585,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "19847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19858:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19847:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19867:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19847:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "20177:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 591,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "20198:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20198:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "RevertStatement",
															"src": "20191:24:0"
														}
													]
												},
												"id": 595,
												"nodeType": "IfStatement",
												"src": "19843:383:0",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "19870:301:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "20028:133:0",
																"nodeType": "YulBlock",
																"src": "20028:133:0",
																"statements": [
																	{
																		"nativeSrc": "20046:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20046:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "20075:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "20075:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "20069:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "20069:5:0"
																			},
																			"nativeSrc": "20069:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "20069:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "20050:15:0",
																				"nodeType": "YulTypedName",
																				"src": "20050:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "20114:2:0",
																							"nodeType": "YulLiteral",
																							"src": "20114:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "20118:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "20118:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20110:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "20110:3:0"
																					},
																					"nativeSrc": "20110:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "20110:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "20131:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "20131:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20103:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "20103:6:0"
																			},
																			"nativeSrc": "20103:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "20103:44:0"
																		},
																		"nativeSrc": "20103:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "20103:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20075:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 582,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "20118:10:0",
																	"valueSize": 1
																}
															],
															"id": 589,
															"nodeType": "InlineAssembly",
															"src": "20019:142:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "19610:101:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "19725:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "19746:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "19733:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19732:25:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19771:0:0"
									},
									"scope": 598,
									"src": "19716:516:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1217,
							"src": "14168:6066:0",
							"usedErrors": [
								353,
								358,
								361
							],
							"usedEvents": []
						},
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "20392:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "20421:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "SafeERC20",
							"nameLocation": "20887:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 603,
									"libraryName": {
										"id": 601,
										"name": "Address",
										"nameLocations": [
											"20909:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 598,
										"src": "20909:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "20903:26:0",
									"typeName": {
										"id": 602,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "20921:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "20935:64:0",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 608,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "21010:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21043:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "21035:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21034:15:0"
									},
									"src": "21004:46:0"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "21056:71:0",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 617,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "21138:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "21171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "21196:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "21188:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "21222:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "21214:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21170:70:0"
									},
									"src": "21132:109:0"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "21503:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "21533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 632,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "21555:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21561:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 112,
																	"src": "21555:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 634,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "21572:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "21576:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 636,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21571:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 630,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21544:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "21540:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21540:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 628,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "21513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21513:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "21513:71:0"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "21247:179:0",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "21440:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21460:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "21453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 619,
														"name": "IERC20",
														"nameLocations": [
															"21453:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "21453:6:0"
													},
													"referencedDeclaration": 145,
													"src": "21453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "21467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21487:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "21479:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21452:41:0"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21503:0:0"
									},
									"scope": 881,
									"src": "21431:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "21920:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "21950:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 658,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "21972:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21978:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 144,
																	"src": "21972:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 660,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "21993:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 661,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "21999:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "22003:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 663,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21992:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 656,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21957:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "21961:10:0",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "21957:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21957:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 654,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "21930:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21930:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "21930:81:0"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "21597:228:0",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "21839:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21863:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "21856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 643,
														"name": "IERC20",
														"nameLocations": [
															"21856:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "21856:6:0"
													},
													"referencedDeclaration": 145,
													"src": "21856:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "21870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21892:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "21884:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "21896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21855:55:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21920:0:0"
									},
									"scope": 881,
									"src": "21830:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "22295:139:0",
										"statements": [
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "22313:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "22305:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22352:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$881",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$881",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22344:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22344:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22344:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "22359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 681,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "22328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22334:9:0",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 122,
														"src": "22328:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22328:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22305:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "22390:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 692,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "22397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 693,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "22406:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "22421:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22406:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "22377:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22377:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "22377:50:0"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "22024:180:0",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "22218:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22247:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "22240:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "IERC20",
														"nameLocations": [
															"22240:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "22240:6:0"
													},
													"referencedDeclaration": 145,
													"src": "22240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22262:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "22254:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22279:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "22271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22239:46:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22295:0:0"
									},
									"scope": 881,
									"src": "22209:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "22735:370:0",
										"statements": [
											{
												"id": 740,
												"nodeType": "UncheckedBlock",
												"src": "22745:354:0",
												"statements": [
													{
														"assignments": [
															711
														],
														"declarations": [
															{
																"constant": false,
																"id": 711,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "22777:16:0",
																"nodeType": "VariableDeclaration",
																"scope": 740,
																"src": "22769:24:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 720,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 716,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "22820:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$881",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$881",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22812:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 714,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22812:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22812:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 718,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "22827:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 712,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "22796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22802:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 122,
																"src": "22796:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22796:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22769:66:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "22853:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 722,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "22872:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22853:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 731,
														"nodeType": "IfStatement",
														"src": "22849:160:0",
														"trueBody": {
															"id": 730,
															"nodeType": "Block",
															"src": "22891:118:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "22949:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "22958:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 727,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "22976:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 724,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "22916:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22916:78:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 729,
																	"nodeType": "RevertStatement",
																	"src": "22909:85:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 733,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "23035:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 734,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "23042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 735,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "23051:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 736,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "23070:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "23051:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 732,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "23022:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23022:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "23022:66:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "22440:192:0",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "22646:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22675:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "22668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "IERC20",
														"nameLocations": [
															"22668:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "22668:6:0"
													},
													"referencedDeclaration": 145,
													"src": "22668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "22690:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "22682:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "22707:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "22699:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22667:58:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22735:0:0"
									},
									"scope": 881,
									"src": "22637:468:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "23501:303:0",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "23524:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "23511:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 753,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23511:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "23554:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$145",
																	"typeString": "contract IERC20"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23560:7:0",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "23554:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 759,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "23570:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 760,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "23579:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 761,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23569:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 755,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "23539:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "23543:10:0",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "23539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23539:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23511:75:0"
											},
											{
												"condition": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23601:45:0",
													"subExpression": {
														"arguments": [
															{
																"id": 765,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "23626:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$145",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 766,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "23633:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$145",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 764,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "23602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23602:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "23597:201:0",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "23648:150:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 770,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "23682:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 773,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "23704:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$145",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "23710:7:0",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 132,
																				"src": "23704:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 775,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 748,
																						"src": "23720:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23729:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 777,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "23719:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 771,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "23689:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "23693:10:0",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "23689:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23689:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 769,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "23662:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23662:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "ExpressionStatement",
															"src": "23662:71:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 782,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "23767:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 783,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "23774:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$145",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 781,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "23747:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23747:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "23747:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "23111:308:0",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "23433:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "23446:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "IERC20",
														"nameLocations": [
															"23446:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "23446:6:0"
													},
													"referencedDeclaration": 145,
													"src": "23446:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "23468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "23460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "23477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23445:46:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23501:0:0"
									},
									"scope": 881,
									"src": "23424:380:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "24257:559:0",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "24619:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "24606:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 798,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "24606:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "24660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 802,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "24640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 800,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24632:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24632:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24647:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 419,
														"src": "24632:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24632:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24606:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 808,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "24679:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24690:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "24679:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24700:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "24679:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24705:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 814,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "24717:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24730:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 815,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "24730:4:0",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 817,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24729:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 812,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24706:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24710:6:0",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "24706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24706:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24679:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "24675:135:0",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "24738:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 824,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "24792:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$145",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$145",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24784:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 822,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24784:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24784:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 821,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "24759:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24759:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "RevertStatement",
															"src": "24752:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "23810:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "24196:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24216:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 791,
														"name": "IERC20",
														"nameLocations": [
															"24216:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "24216:6:0"
													},
													"referencedDeclaration": 145,
													"src": "24216:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24243:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24230:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24230:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24215:33:0"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24257:0:0"
									},
									"scope": 881,
									"src": "24187:629:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "25406:489:0",
										"statements": [
											{
												"assignments": [
													843,
													845
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "25707:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "25702:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 842,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "25702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 845,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "25729:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "25716:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 844,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25716:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"arguments": [
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "25763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 848,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "25751:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25743:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25743:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25758:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "25743:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25743:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25701:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 854,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "25785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 855,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "25797:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "25808:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "25797:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25818:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25797:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 861,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "25834:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 863,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25847:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 862,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "25847:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 864,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "25846:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 859,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "25823:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "25827:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "25823:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25823:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "25797:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 867,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "25796:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "25785:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 871,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "25866:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$145",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 869,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "25858:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25858:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25873:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "25858:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25878:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25858:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25887:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "25858:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25785:103:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 841,
												"id": 878,
												"nodeType": "Return",
												"src": "25778:110:0"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "24822:490:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "25326:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25357:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "25350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 833,
														"name": "IERC20",
														"nameLocations": [
															"25350:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "25350:6:0"
													},
													"referencedDeclaration": 145,
													"src": "25350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "25364:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25349:33:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "25400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:6:0"
									},
									"scope": 881,
									"src": "25317:578:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1217,
							"src": "20879:5018:0",
							"usedErrors": [
								608,
								617
							],
							"usedEvents": []
						},
						{
							"id": 882,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "26003:23:0"
						},
						{
							"errorSelector": "d92e233d",
							"id": 884,
							"name": "ZeroAddress",
							"nameLocation": "26260:11:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 883,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26271:2:0"
							},
							"src": "26254:20:0"
						},
						{
							"errorSelector": "bd969eb0",
							"id": 886,
							"name": "IdenticalAddresses",
							"nameLocation": "26281:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 885,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26299:2:0"
							},
							"src": "26275:27:0"
						},
						{
							"errorSelector": "1f2a2005",
							"id": 888,
							"name": "ZeroAmount",
							"nameLocation": "26309:10:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 887,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26319:2:0"
							},
							"src": "26303:19:0"
						},
						{
							"errorSelector": "c301e07e",
							"id": 890,
							"name": "NoLiquidity",
							"nameLocation": "26329:11:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 889,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26340:2:0"
							},
							"src": "26323:20:0"
						},
						{
							"errorSelector": "bb2875c3",
							"id": 892,
							"name": "InsufficientOutput",
							"nameLocation": "26350:18:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 891,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26368:2:0"
							},
							"src": "26344:27:0"
						},
						{
							"errorSelector": "c1ab6dc1",
							"id": 894,
							"name": "InvalidToken",
							"nameLocation": "26378:12:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 893,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26390:2:0"
							},
							"src": "26372:21:0"
						},
						{
							"errorSelector": "90b8ec18",
							"id": 896,
							"name": "TransferFailed",
							"nameLocation": "26400:14:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 895,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "26414:2:0"
							},
							"src": "26394:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 898,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"26624:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 68,
										"src": "26624:15:0"
									},
									"id": 899,
									"nodeType": "InheritanceSpecifier",
									"src": "26624:15:0"
								},
								{
									"baseName": {
										"id": 900,
										"name": "Ownable",
										"nameLocations": [
											"26641:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "26641:7:0"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "26641:7:0"
								}
							],
							"canonicalName": "MyHyperOptimizedDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 897,
								"nodeType": "StructuredDocumentation",
								"src": "26467:124:0",
								"text": " @title MyHyperOptimizedDEX\n @author (Your Name)\n @notice A production-grade, gas-optimized, and hardened AMM."
							},
							"fullyImplemented": true,
							"id": 1216,
							"linearizedBaseContracts": [
								1216,
								311,
								166,
								68
							],
							"name": "MyHyperOptimizedDEX",
							"nameLocation": "26601:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 905,
									"libraryName": {
										"id": 902,
										"name": "SafeERC20",
										"nameLocations": [
											"26686:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "26686:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "26680:27:0",
									"typeName": {
										"id": 904,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 903,
											"name": "IERC20",
											"nameLocations": [
												"26700:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "26700:6:0"
										},
										"referencedDeclaration": 145,
										"src": "26700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 908,
									"mutability": "immutable",
									"name": "tokenA",
									"nameLocation": "26836:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "26812:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 907,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 906,
											"name": "IERC20",
											"nameLocations": [
												"26812:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "26812:6:0"
										},
										"referencedDeclaration": 145,
										"src": "26812:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 911,
									"mutability": "immutable",
									"name": "tokenB",
									"nameLocation": "26872:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "26848:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 909,
											"name": "IERC20",
											"nameLocations": [
												"26848:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "26848:6:0"
										},
										"referencedDeclaration": 145,
										"src": "26848:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 913,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "26900:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "26885:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 912,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26885:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 915,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "26929:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1216,
									"src": "26914:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26914:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dbee45ea236748b94cfbe4aa4456c6460410d51bc244040093d65457fb4b2850",
									"id": 927,
									"name": "Swapped",
									"nameLocation": "26972:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "27005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "26989:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "27026:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "27021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "27021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "27049:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "27044:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "27044:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "27084:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "27068:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "27117:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "27101:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26979:152:0"
									},
									"src": "26966:166:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee45",
									"id": 935,
									"name": "LiquidityAdded",
									"nameLocation": "27143:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "27183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "27167:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "27204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "27199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "27199:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "27226:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "27221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "27221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27157:82:0"
									},
									"src": "27137:103:0"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "27295:84:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 937,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "27309:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27321:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27309:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 940,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "27326:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27338:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27326:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27309:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "27305:56:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 944,
															"name": "NoLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "27348:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27348:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 946,
													"nodeType": "RevertStatement",
													"src": "27341:20:0"
												}
											},
											{
												"id": 948,
												"nodeType": "PlaceholderStatement",
												"src": "27371:1:0"
											}
										]
									},
									"id": 950,
									"name": "hasLiquidity",
									"nameLocation": "27280:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27292:2:0"
									},
									"src": "27271:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "27503:303:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 963,
															"name": "tokenAAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "27517:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27542:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 964,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27534:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27534:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 969,
															"name": "tokenBAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "27548:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27573:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27565:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27565:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27565:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "27548:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27517:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "27513:109:0",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "27577:45:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 976,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "27598:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27598:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "27591:20:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "tokenAAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "27635:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 982,
														"name": "tokenBAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "27652:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "27635:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "27631:88:0",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "27667:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 984,
																	"name": "IdenticalAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "27688:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "RevertStatement",
															"src": "27681:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "27729:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 991,
																"name": "tokenAAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "27745:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 990,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "27738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27738:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "27729:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "27729:30:0"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "27769:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 997,
																"name": "tokenBAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "27785:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 996,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "27778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27778:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "27769:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "27769:30:0"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "27473:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27477:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "27473:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 959,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 956,
												"name": "Ownable",
												"nameLocations": [
													"27465:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 311,
												"src": "27465:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27465:19:0"
										},
										{
											"arguments": [],
											"id": 961,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 960,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"27485:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "27485:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27485:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenAAddress",
												"nameLocation": "27414:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "27406:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenBAddress",
												"nameLocation": "27445:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "27437:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27396:68:0"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27503:0:0"
									},
									"scope": 1216,
									"src": "27385:421:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "27912:422:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1011,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "27926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27937:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27926:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1014,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "27942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27953:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27942:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27926:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "27922:78:0",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "27956:44:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1018,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "27977:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27977:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1020,
															"nodeType": "RevertStatement",
															"src": "27970:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1023,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "28037:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1024,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "28049:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28037:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "28037:19:0"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "28066:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1028,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "28078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28066:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "28066:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1034,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28163:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28167:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1038,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28183:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28175:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28175:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "28190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1031,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "28139:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28146:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "28139:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28139:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "28139:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28232:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28236:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28232:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1050,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28252:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28244:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28244:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28244:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "28259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1043,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "28208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28215:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "28208:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28208:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "28208:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1056,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28298:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28302:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28298:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "28310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1059,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "28319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1055,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "28283:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28283:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "EmitStatement",
												"src": "28278:49:0"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1009,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1008,
												"name": "nonReentrant",
												"nameLocations": [
													"27899:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "27899:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27899:12:0"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "27821:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "27851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "27876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "27868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27833:56:0"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27912:0:0"
									},
									"scope": 1216,
									"src": "27812:522:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "28730:1010:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "28744:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28744:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "28740:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1078,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "28767:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28767:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1080,
													"nodeType": "RevertStatement",
													"src": "28760:19:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1082,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "28793:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28809:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28793:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "28789:42:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1085,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "28819:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28819:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1087,
													"nodeType": "RevertStatement",
													"src": "28812:19:0"
												}
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nameLocation": "28912:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "28904:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1091,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "28930:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "393937",
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28942:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_997_by_1",
															"typeString": "int_const 997"
														},
														"value": "997"
													},
													"src": "28930:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28904:41:0"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "28963:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "28955:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28955:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "28975:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1098,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "28993:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28975:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28955:46:0"
											},
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "29019:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "29011:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1101,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "29034:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29045:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "29034:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1106,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "29033:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1107,
														"name": "amountInWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "29053:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29033:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29011:57:0"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "amountOutB",
														"nameLocation": "29086:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "29078:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29078:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "29099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1113,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "29111:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29099:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29078:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "29204:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1117,
														"name": "amountOutMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "29217:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29204:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "29200:83:0",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "29231:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1119,
																	"name": "InsufficientOutput",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "29252:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29252:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1121,
															"nodeType": "RevertStatement",
															"src": "29245:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1124,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "29350:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1125,
														"name": "amountInA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "29362:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29350:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "29350:21:0"
											},
											{
												"expression": {
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "29381:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1129,
														"name": "amountOutB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "29393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29381:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "29381:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29481:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29485:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29481:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1139,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29501:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																		"typeString": "contract MyHyperOptimizedDEX"
																	}
																],
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29493:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29493:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29493:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "29508:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1132,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "29457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29464:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "29457:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29457:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "29457:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29548:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29552:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29548:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "29560:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1144,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "29528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29535:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "29528:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29528:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "29528:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1153,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29608:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29612:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29608:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "amountInA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "29632:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1156,
															"name": "amountOutB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "29655:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1159,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "29687:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1157,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29679:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1163,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "29716:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29708:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29708:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29708:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1152,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "29587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29587:146:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "EmitStatement",
												"src": "29582:151:0"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "28340:258:0",
										"text": " @notice Swaps Token A for Token B with slippage protection.\n @param amountInA The exact amount of Token A being sent.\n @param amountOutMin The *minimum* amount of Token B the user\n is willing to accept. This prevents MEV."
									},
									"functionSelector": "56d9be4c",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1071,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1070,
												"name": "nonReentrant",
												"nameLocations": [
													"28704:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "28704:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28704:12:0"
										},
										{
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "hasLiquidity",
												"nameLocations": [
													"28717:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "28717:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28717:12:0"
										}
									],
									"name": "swapTokenAForTokenB",
									"nameLocation": "28612:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amountInA",
												"nameLocation": "28649:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "28641:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "28676:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "28668:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28631:63:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28730:0:0"
									},
									"scope": 1216,
									"src": "28603:1137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "29847:244:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "29882:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29874:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29874:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29874:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1182,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "29900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29892:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1180,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29892:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29892:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "29874:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1187,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "29931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29923:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1185,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29923:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29923:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1191,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "29949:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29941:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1189,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29941:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29941:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "29923:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29874:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "29857:156:0",
												"trueBody": {
													"id": 1198,
													"nodeType": "Block",
													"src": "29967:46:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1195,
																	"name": "InvalidToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "29988:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29988:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1197,
															"nodeType": "RevertStatement",
															"src": "29981:21:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30041:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30045:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30041:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1209,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "30077:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																				"typeString": "contract MyHyperOptimizedDEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MyHyperOptimizedDEX_$1216",
																				"typeString": "contract MyHyperOptimizedDEX"
																			}
																		],
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "30069:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1207,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "30069:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30069:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1205,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "30053:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30059:9:0",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 102,
																"src": "30053:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30053:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "30022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30028:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "30022:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$145_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30022:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "30022:62:0"
											}
										]
									},
									"functionSelector": "6ff1c9bc",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1173,
												"name": "onlyOwner",
												"nameLocations": [
													"29837:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 222,
												"src": "29837:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29837:9:0"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "29796:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "29821:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "29814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1169,
														"name": "IERC20",
														"nameLocations": [
															"29814:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "29814:6:0"
													},
													"referencedDeclaration": 145,
													"src": "29814:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29813:14:0"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29847:0:0"
									},
									"scope": 1216,
									"src": "29787:304:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1217,
							"src": "26592:3501:0",
							"usedErrors": [
								13,
								177,
								182,
								353,
								358,
								361,
								608,
								884,
								886,
								888,
								890,
								892,
								894
							],
							"usedEvents": [
								188,
								927,
								935
							]
						}
					],
					"src": "176:29917:0"
				},
				"id": 0
			}
		}
	}
}